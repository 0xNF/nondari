{
  "errors": [],
  "warnings": [
    "configuration\nThe 'mode' option has not been set, webpack will fallback to 'production' for this value. Set 'mode' option to 'development' or 'production' to enable defaults for each environment.\nYou can also set it to 'none' to disable any default behavior. Learn more: https://webpack.js.org/concepts/mode/"
  ],
  "version": "4.12.0",
  "hash": "1e336a888a7991166c56",
  "time": 5139,
  "builtAt": 1550359063295,
  "publicPath": "",
  "outputPath": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/dist",
  "assetsByChunkName": {
    "main": [
      "main.bundle.js",
      "main.bundle.js.map"
    ]
  },
  "assets": [
    {
      "name": "main.bundle.js",
      "size": 153115,
      "chunks": [
        0
      ],
      "chunkNames": [
        "main"
      ],
      "emitted": true
    },
    {
      "name": "main.bundle.js.map",
      "size": 183901,
      "chunks": [
        0
      ],
      "chunkNames": [
        "main"
      ],
      "emitted": true
    }
  ],
  "filteredAssets": 0,
  "entrypoints": {
    "main": {
      "chunks": [
        0
      ],
      "assets": [
        "main.bundle.js",
        "main.bundle.js.map"
      ],
      "children": {},
      "childAssets": {}
    }
  },
  "namedChunkGroups": {
    "main": {
      "chunks": [
        0
      ],
      "assets": [
        "main.bundle.js",
        "main.bundle.js.map"
      ],
      "children": {},
      "childAssets": {}
    }
  },
  "chunks": [
    {
      "id": 0,
      "rendered": true,
      "initial": true,
      "entry": true,
      "size": 404069,
      "names": [
        "main"
      ],
      "files": [
        "main.bundle.js",
        "main.bundle.js.map"
      ],
      "hash": "c61142a6eaea2bfa2271",
      "siblings": [],
      "parents": [],
      "children": [],
      "childrenByOrder": {},
      "modules": [
        {
          "id": 0,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/utils/object.js",
          "name": "../node_modules/mathjs/lib/utils/object.js",
          "index": 14,
          "index2": 8,
          "size": 6635,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "issuer": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/core/core.js",
          "issuerId": 44,
          "issuerName": "../node_modules/mathjs/lib/core/core.js",
          "issuerPath": [
            {
              "id": 49,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
              "name": "./main.ts",
              "profile": {
                "factory": 58,
                "building": 1843
              }
            },
            {
              "id": 18,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DisplayService.ts",
              "name": "./services/DisplayService.ts",
              "profile": {
                "factory": 83,
                "building": 1193,
                "dependencies": 637
              }
            },
            {
              "id": 8,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DrinkDisplayService.ts",
              "name": "./services/DrinkDisplayService.ts",
              "profile": {
                "factory": 735,
                "building": 523,
                "dependencies": 1
              }
            },
            {
              "id": 46,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/MathService.ts",
              "name": "./services/MathService.ts",
              "profile": {
                "factory": 394,
                "building": 17
              }
            },
            {
              "id": 45,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/core.js",
              "name": "../node_modules/mathjs/core.js",
              "profile": {
                "factory": 54,
                "building": 107
              }
            },
            {
              "id": 44,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/core/core.js",
              "name": "../node_modules/mathjs/lib/core/core.js",
              "profile": {
                "factory": 111,
                "building": 7
              }
            }
          ],
          "profile": {
            "factory": 15,
            "building": 26,
            "dependencies": 19
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 16,
              "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/utils/number.js",
              "module": "../node_modules/mathjs/lib/utils/number.js",
              "moduleName": "../node_modules/mathjs/lib/utils/number.js",
              "type": "cjs require",
              "userRequest": "./object",
              "loc": "3:18-37"
            },
            {
              "moduleId": 27,
              "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/utils/bignumber/formatter.js",
              "module": "../node_modules/mathjs/lib/utils/bignumber/formatter.js",
              "moduleName": "../node_modules/mathjs/lib/utils/bignumber/formatter.js",
              "type": "cjs require",
              "userRequest": "../object",
              "loc": "3:18-38"
            },
            {
              "moduleId": 35,
              "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/core/function/config.js",
              "module": "../node_modules/mathjs/lib/core/function/config.js",
              "moduleName": "../node_modules/mathjs/lib/core/function/config.js",
              "type": "cjs require",
              "userRequest": "../../utils/object",
              "loc": "3:13-42"
            },
            {
              "moduleId": 37,
              "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/core/function/import.js",
              "module": "../node_modules/mathjs/lib/core/function/import.js",
              "moduleName": "../node_modules/mathjs/lib/core/function/import.js",
              "type": "cjs require",
              "userRequest": "../../utils/object",
              "loc": "5:11-40"
            },
            {
              "moduleId": 37,
              "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/core/function/import.js",
              "module": "../node_modules/mathjs/lib/core/function/import.js",
              "moduleName": "../node_modules/mathjs/lib/core/function/import.js",
              "type": "cjs require",
              "userRequest": "../../utils/object",
              "loc": "7:16-45"
            },
            {
              "moduleId": 37,
              "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/core/function/import.js",
              "module": "../node_modules/mathjs/lib/core/function/import.js",
              "moduleName": "../node_modules/mathjs/lib/core/function/import.js",
              "type": "cjs require",
              "userRequest": "../../utils/object",
              "loc": "9:15-44"
            },
            {
              "moduleId": 44,
              "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/core/core.js",
              "module": "../node_modules/mathjs/lib/core/core.js",
              "moduleName": "../node_modules/mathjs/lib/core/core.js",
              "type": "cjs require",
              "userRequest": "./../utils/object",
              "loc": "5:16-44"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 6,
          "source": "'use strict';\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar isBigNumber = require('./bignumber/isBigNumber');\n/**\n * Clone an object\n *\n *     clone(x)\n *\n * Can clone any primitive type, array, and object.\n * If x has a function clone, this function will be invoked to clone the object.\n *\n * @param {*} x\n * @return {*} clone\n */\n\n\nexports.clone = function clone(x) {\n  var type = _typeof(x); // immutable primitive types\n\n\n  if (type === 'number' || type === 'string' || type === 'boolean' || x === null || x === undefined) {\n    return x;\n  } // use clone function of the object when available\n\n\n  if (typeof x.clone === 'function') {\n    return x.clone();\n  } // array\n\n\n  if (Array.isArray(x)) {\n    return x.map(function (value) {\n      return clone(value);\n    });\n  }\n\n  if (x instanceof Date) return new Date(x.valueOf());\n  if (isBigNumber(x)) return x; // bignumbers are immutable\n\n  if (x instanceof RegExp) throw new TypeError('Cannot clone ' + x); // TODO: clone a RegExp\n  // object\n\n  return exports.map(x, clone);\n};\n/**\n * Apply map to all properties of an object\n * @param {Object} object\n * @param {function} callback\n * @return {Object} Returns a copy of the object with mapped properties\n */\n\n\nexports.map = function (object, callback) {\n  var clone = {};\n\n  for (var key in object) {\n    if (exports.hasOwnProperty(object, key)) {\n      clone[key] = callback(object[key]);\n    }\n  }\n\n  return clone;\n};\n/**\n * Extend object a with the properties of object b\n * @param {Object} a\n * @param {Object} b\n * @return {Object} a\n */\n\n\nexports.extend = function (a, b) {\n  for (var prop in b) {\n    if (exports.hasOwnProperty(b, prop)) {\n      a[prop] = b[prop];\n    }\n  }\n\n  return a;\n};\n/**\n * Deep extend an object a with the properties of object b\n * @param {Object} a\n * @param {Object} b\n * @returns {Object}\n */\n\n\nexports.deepExtend = function deepExtend(a, b) {\n  // TODO: add support for Arrays to deepExtend\n  if (Array.isArray(b)) {\n    throw new TypeError('Arrays are not supported by deepExtend');\n  }\n\n  for (var prop in b) {\n    if (exports.hasOwnProperty(b, prop)) {\n      if (b[prop] && b[prop].constructor === Object) {\n        if (a[prop] === undefined) {\n          a[prop] = {};\n        }\n\n        if (a[prop].constructor === Object) {\n          deepExtend(a[prop], b[prop]);\n        } else {\n          a[prop] = b[prop];\n        }\n      } else if (Array.isArray(b[prop])) {\n        throw new TypeError('Arrays are not supported by deepExtend');\n      } else {\n        a[prop] = b[prop];\n      }\n    }\n  }\n\n  return a;\n};\n/**\n * Deep test equality of all fields in two pairs of arrays or objects.\n * @param {Array | Object} a\n * @param {Array | Object} b\n * @returns {boolean}\n */\n\n\nexports.deepEqual = function deepEqual(a, b) {\n  var prop, i, len;\n\n  if (Array.isArray(a)) {\n    if (!Array.isArray(b)) {\n      return false;\n    }\n\n    if (a.length !== b.length) {\n      return false;\n    }\n\n    for (i = 0, len = a.length; i < len; i++) {\n      if (!exports.deepEqual(a[i], b[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  } else if (a instanceof Object) {\n    if (Array.isArray(b) || !(b instanceof Object)) {\n      return false;\n    }\n\n    for (prop in a) {\n      // noinspection JSUnfilteredForInLoop\n      if (!exports.deepEqual(a[prop], b[prop])) {\n        return false;\n      }\n    }\n\n    for (prop in b) {\n      // noinspection JSUnfilteredForInLoop\n      if (!exports.deepEqual(a[prop], b[prop])) {\n        return false;\n      }\n    }\n\n    return true;\n  } else {\n    return a === b;\n  }\n};\n/**\n * Test whether the current JavaScript engine supports Object.defineProperty\n * @returns {boolean} returns true if supported\n */\n\n\nexports.canDefineProperty = function () {\n  // test needed for broken IE8 implementation\n  try {\n    if (Object.defineProperty) {\n      Object.defineProperty({}, 'x', {\n        get: function get() {}\n      });\n      return true;\n    }\n  } catch (e) {}\n\n  return false;\n};\n/**\n * Attach a lazy loading property to a constant.\n * The given function `fn` is called once when the property is first requested.\n * On older browsers (<IE8), the function will fall back to direct evaluation\n * of the properties value.\n * @param {Object} object   Object where to add the property\n * @param {string} prop     Property name\n * @param {Function} fn     Function returning the property value. Called\n *                          without arguments.\n */\n\n\nexports.lazy = function (object, prop, fn) {\n  if (exports.canDefineProperty()) {\n    var _uninitialized = true;\n\n    var _value;\n\n    Object.defineProperty(object, prop, {\n      get: function get() {\n        if (_uninitialized) {\n          _value = fn();\n          _uninitialized = false;\n        }\n\n        return _value;\n      },\n      set: function set(value) {\n        _value = value;\n        _uninitialized = false;\n      },\n      configurable: true,\n      enumerable: true\n    });\n  } else {\n    // fall back to immediate evaluation\n    object[prop] = fn();\n  }\n};\n/**\n * Traverse a path into an object.\n * When a namespace is missing, it will be created\n * @param {Object} object\n * @param {string} path   A dot separated string like 'name.space'\n * @return {Object} Returns the object at the end of the path\n */\n\n\nexports.traverse = function (object, path) {\n  var obj = object;\n\n  if (path) {\n    var names = path.split('.');\n\n    for (var i = 0; i < names.length; i++) {\n      var name = names[i];\n\n      if (!(name in obj)) {\n        obj[name] = {};\n      }\n\n      obj = obj[name];\n    }\n  }\n\n  return obj;\n};\n/**\n * A safe hasOwnProperty\n * @param {Object} object\n * @param {string} property\n */\n\n\nexports.hasOwnProperty = function (object, property) {\n  return object && Object.hasOwnProperty.call(object, property);\n};\n/**\n * Test whether an object is a factory. a factory has fields:\n *\n * - factory: function (type: Object, config: Object, load: function, typed: function [, math: Object])   (required)\n * - name: string (optional)\n * - path: string    A dot separated path (optional)\n * - math: boolean   If true (false by default), the math namespace is passed\n *                   as fifth argument of the factory function\n *\n * @param {*} object\n * @returns {boolean}\n */\n\n\nexports.isFactory = function (object) {\n  return object && typeof object.factory === 'function';\n};"
        },
        {
          "id": 1,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/Globals.ts",
          "name": "./services/Globals.ts",
          "index": 33,
          "index2": 29,
          "size": 242,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "issuer": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
          "issuerId": 49,
          "issuerName": "./main.ts",
          "issuerPath": [
            {
              "id": 49,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
              "name": "./main.ts",
              "profile": {
                "factory": 58,
                "building": 1843
              }
            }
          ],
          "profile": {
            "factory": 83,
            "building": 1193,
            "dependencies": 637
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 3,
              "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/IngredientService.ts",
              "module": "./services/IngredientService.ts",
              "moduleName": "./services/IngredientService.ts",
              "type": "cjs require",
              "userRequest": "./Globals",
              "loc": "3:18-38"
            },
            {
              "moduleId": 6,
              "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/UnitService.ts",
              "module": "./services/UnitService.ts",
              "moduleName": "./services/UnitService.ts",
              "type": "cjs require",
              "userRequest": "./Globals",
              "loc": "3:18-38"
            },
            {
              "moduleId": 8,
              "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DrinkDisplayService.ts",
              "module": "./services/DrinkDisplayService.ts",
              "moduleName": "./services/DrinkDisplayService.ts",
              "type": "cjs require",
              "userRequest": "./Globals",
              "loc": "4:18-38"
            },
            {
              "moduleId": 11,
              "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/BuilderService.ts",
              "module": "./services/BuilderService.ts",
              "moduleName": "./services/BuilderService.ts",
              "type": "cjs require",
              "userRequest": "./Globals",
              "loc": "12:18-38"
            },
            {
              "moduleId": 18,
              "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DisplayService.ts",
              "module": "./services/DisplayService.ts",
              "moduleName": "./services/DisplayService.ts",
              "type": "cjs require",
              "userRequest": "./Globals",
              "loc": "18:18-38"
            },
            {
              "moduleId": 49,
              "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
              "module": "./main.ts",
              "moduleName": "./main.ts",
              "type": "cjs require",
              "userRequest": "./services/Globals",
              "loc": "20:18-47"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 1,
          "source": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Globals = {\n    Glasses: [],\n    Drinks: [],\n    Categories: [],\n    IngredientFlat: {},\n    ingredients: [],\n    UnitTypes: [],\n};\nexports.Globals = Globals;\n"
        },
        {
          "id": 2,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/models/ITree.ts",
          "name": "./models/ITree.ts",
          "index": 39,
          "index2": 34,
          "size": 2618,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "issuer": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DisplayService.ts",
          "issuerId": 18,
          "issuerName": "./services/DisplayService.ts",
          "issuerPath": [
            {
              "id": 49,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
              "name": "./main.ts",
              "profile": {
                "factory": 58,
                "building": 1843
              }
            },
            {
              "id": 18,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DisplayService.ts",
              "name": "./services/DisplayService.ts",
              "profile": {
                "factory": 83,
                "building": 1193,
                "dependencies": 637
              }
            }
          ],
          "profile": {
            "factory": 735,
            "building": 523,
            "dependencies": 1
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 5,
              "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/SVGService.ts",
              "module": "./services/SVGService.ts",
              "moduleName": "./services/SVGService.ts",
              "type": "cjs require",
              "userRequest": "../models/ITree",
              "loc": "12:16-42"
            },
            {
              "moduleId": 11,
              "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/BuilderService.ts",
              "module": "./services/BuilderService.ts",
              "moduleName": "./services/BuilderService.ts",
              "type": "cjs require",
              "userRequest": "../models/ITree",
              "loc": "13:16-42"
            },
            {
              "moduleId": 13,
              "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DrinkService.ts",
              "module": "./services/DrinkService.ts",
              "moduleName": "./services/DrinkService.ts",
              "type": "cjs require",
              "userRequest": "../models/ITree",
              "loc": "5:16-42"
            },
            {
              "moduleId": 18,
              "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DisplayService.ts",
              "module": "./services/DisplayService.ts",
              "moduleName": "./services/DisplayService.ts",
              "type": "cjs require",
              "userRequest": "../models/ITree",
              "loc": "15:16-42"
            },
            {
              "moduleId": 23,
              "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/SubstituteService.ts",
              "module": "./services/SubstituteService.ts",
              "moduleName": "./services/SubstituteService.ts",
              "type": "cjs require",
              "userRequest": "../models/ITree",
              "loc": "3:16-42"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 2,
          "source": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nrequire(\"../extensions/array.extensions\");\n/**\n * Searches an entire tree, calling `functor(currentNode, currentDepth)` for each node visited\n * @param tree - The tree to traverse\n * @param functor - the function to be called on each node\n */\nfunction DFS(tree, functor) {\n    function dfsh(node, depth, f) {\n        f(node, depth);\n        for (let i = 0; i < node.children.length; i++) {\n            dfsh(node.children[i], depth + 1, f);\n        }\n    }\n    return dfsh(tree, 0, functor);\n}\nexports.DFS = DFS;\n/**\n * Searches the entire tree, calling the `functor` for each node visited, while also passing\n * the accumulator to each invocation of the functor.\n * @param tree The tree to search\n * @param functor The function to apply to each node. Takes (node, depth, accumulator)\n * @param accumulator An argument to pass along to each node.\n */\nfunction DFSAcc(tree, functor, accumulator) {\n    function dfsh(node, depth, f, accumulator) {\n        accumulator = f(node, depth, accumulator);\n        for (let i = 0; i < node.children.length; i++) {\n            dfsh(node.children[i], depth + 1, f, accumulator);\n        }\n    }\n    dfsh(tree, 0, functor, accumulator);\n}\nexports.DFS2 = DFSAcc;\n/**\n * Given a Tree, returns a branch-pruned version of the three where the only children are the\n * nodes on the way to the target.\n * @param branch - tree to search through\n * @param target - node to find\n * @param noChildren - Whether to include a full children array in the target element. Default `true`.\n *\n * @returns Returns an ITree with no siblings and only the critical path nodes,\n * or an empty ITree (id === -1) if nothing was found.\n */\nfunction NoSiblings(branch, target, noChildren = false) {\n    const nb = JSON.parse(JSON.stringify(branch));\n    function dfs2(b, stack) {\n        stack.push(b);\n        if (b.id === target.id) {\n            if (noChildren) {\n                b.children.clear();\n            }\n            return true;\n        }\n        const c = b.children;\n        while (c.any()) {\n            const child = c[c.length - 1];\n            const found = dfs2(child, stack);\n            if (found) {\n                c.filter(x => !stack.contains(x)).forEach(x => c.remove(x));\n                return true;\n            }\n            c.remove(child);\n        }\n        stack.pop();\n        return false;\n    }\n    const stack = [];\n    const found = dfs2(nb, stack);\n    if (!found) {\n        return { id: -1, children: [] };\n    }\n    else {\n        return nb; // stack\n    }\n}\nexports.NoSiblings = NoSiblings;\n"
        },
        {
          "id": 3,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/IngredientService.ts",
          "name": "./services/IngredientService.ts",
          "index": 35,
          "index2": 32,
          "size": 7607,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "issuer": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
          "issuerId": 49,
          "issuerName": "./main.ts",
          "issuerPath": [
            {
              "id": 49,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
              "name": "./main.ts",
              "profile": {
                "factory": 58,
                "building": 1843
              }
            }
          ],
          "profile": {
            "factory": 83,
            "building": 1193,
            "dependencies": 637
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 5,
              "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/SVGService.ts",
              "module": "./services/SVGService.ts",
              "moduleName": "./services/SVGService.ts",
              "type": "cjs require",
              "userRequest": "./IngredientService",
              "loc": "13:28-58"
            },
            {
              "moduleId": 8,
              "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DrinkDisplayService.ts",
              "module": "./services/DrinkDisplayService.ts",
              "moduleName": "./services/DrinkDisplayService.ts",
              "type": "cjs require",
              "userRequest": "./IngredientService",
              "loc": "6:28-58"
            },
            {
              "moduleId": 11,
              "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/BuilderService.ts",
              "module": "./services/BuilderService.ts",
              "moduleName": "./services/BuilderService.ts",
              "type": "cjs require",
              "userRequest": "./IngredientService",
              "loc": "15:28-58"
            },
            {
              "moduleId": 49,
              "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
              "module": "./main.ts",
              "moduleName": "./main.ts",
              "type": "cjs require",
              "userRequest": "./services/IngredientService",
              "loc": "21:28-67"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 1,
          "source": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Globals_1 = require(\"./Globals\");\nconst UnitService_1 = require(\"./UnitService\");\nfunction mapIngs(ingredient, flat) {\n    if (!(ingredient.id in flat)) {\n        flat[ingredient.id] = ingredient;\n    }\n    for (let i = 0; i < ingredient.children.length; i++) {\n        const ing = ingredient.children[i];\n        mapIngs(ing, flat);\n    }\n}\nfunction constructIngredients(jings) {\n    const ingredientFlat = {};\n    const ingredientArr = [];\n    jings.forEach((x) => {\n        mapIngs(x, ingredientFlat);\n        ingredientArr.push(x);\n    });\n    return [ingredientArr, ingredientFlat];\n}\nexports.constructIngredients = constructIngredients;\nfunction makeIngredientIdForHTML(ingredient) {\n    const unit = ingredient.Unit.replace(/ /g, '');\n    const idLinkToFind = `ingredient_${ingredient.IngredientId}_${unit}`;\n    return idLinkToFind;\n}\nexports.makeIngredientIdForHTML = makeIngredientIdForHTML;\nconst UnitAndPlurals = [\n    { unit: 'oz', plural: 'oz' },\n    { unit: 'bs', plural: 'bs' },\n    { unit: 'ts', plural: 'ts' },\n    { unit: 'tbs', plural: 'tbs' },\n    { unit: 'shot', plural: 'shots' },\n    { unit: 'dash', plural: 'dashes' },\n    { unit: 'pinch', plural: 'pinches' },\n    { unit: 'drop', plural: 'drops' },\n    { unit: 'leaf', plural: 'leaves' },\n    { unit: 'stick', plural: 'sticks' },\n];\nexports.UnitAndPlurals = UnitAndPlurals;\n/**\n * Converts an Ingredient to its equivalent Ingredient Node form.\n *\n * this is not a perfect conversation and the resulting node will not\n * have the correct distance or children fields.\n * @param ingredient\n */\nfunction Ingredient2IngredientNode(ingredient) {\n    return {\n        id: ingredient.IngredientId,\n        distance: -1,\n        name: ingredient.IngredientName,\n        children: []\n    };\n}\nexports.Ingredient2IngredientNode = Ingredient2IngredientNode;\nfunction IngredientVal2IngredientNode(val) {\n    if (val in Globals_1.Globals.IngredientFlat) {\n        return Globals_1.Globals.IngredientFlat[val];\n    }\n    console.error(`failed to find an ingredient of the value given: (${val})`);\n}\nexports.IngredientVal2IngredientNode = IngredientVal2IngredientNode;\nfunction EncodeIngredientForUrl(ingredient) {\n    return `${ingredient.IngredientId}_${ingredient.Quantity}_${ingredient.Unit}_${ingredient.IsGarnish}_${ingredient.DisplayOrder}_${ingredient.DisplayText ? ingredient.DisplayText : ''}`;\n}\nexports.EncodeIngredientForUrl = EncodeIngredientForUrl;\nfunction DecodeIngredientFromUrl(fragment) {\n    const splits = fragment.split('_');\n    if (splits.length !== 6) {\n        console.error(`failed to decode drink, an ingredient was malformed. Incorrect number of separators: ${fragment}`);\n        return;\n    }\n    const ingId_raw = splits[0];\n    const quantity_raw = splits[1];\n    const unit_raw = splits[2];\n    const garnish_raw = splits[3];\n    const displayorder_raw = splits[4];\n    const dtext_raw = splits[5];\n    /* Ingredient Id */\n    const ingid = parseInt(ingId_raw);\n    if (isNaN(ingid)) {\n        console.error(`failed to decode ingredient, supplied ingredient id was invalid: ${ingId_raw}`);\n        return undefined;\n    }\n    const realIngredient = Globals_1.Globals.IngredientFlat[ingid];\n    if (!realIngredient) {\n        console.error(`failed to decode ingredient, supplied ingredient id was not found: ${ingId_raw}`);\n        return undefined;\n    }\n    /* Display Order */\n    const dorder = parseInt(displayorder_raw);\n    if (isNaN(dorder)) {\n        console.error(`failed to decode ingredient, supplied ingredient display order was invalid: ${displayorder_raw}`);\n        return undefined;\n    }\n    /* Is Garnish */\n    const isGarnishCheck = (garnish_raw === 'true' || garnish_raw === 'false');\n    if (!isGarnishCheck) {\n        console.error(`Failed to decode ingredient, supplied IsGarnish check wasn't valid: ${garnish_raw}`);\n    }\n    const isGarnish = garnish_raw === 'true';\n    /* Unit */\n    const unit = UnitService_1.UnitString2Unit(unit_raw);\n    if (!unit) {\n        console.error(`Failed to decode ingredient, supplied unit check wasn't valid: ${unit_raw}`);\n        return undefined;\n    }\n    /* Quantity */\n    const quantity = quantity_raw; /* we have no special checks yet */\n    /* Display Text */\n    /* todo sanitize dispaly text input? */\n    const dtext = dtext_raw;\n    const ing = {\n        IngredientId: realIngredient.id,\n        DisplayOrder: dorder,\n        IsGarnish: isGarnish,\n        Unit: unit.Name,\n        Quantity: quantity,\n        IngredientName: realIngredient.name,\n        DisplayText: dtext\n    };\n    return ing;\n}\nexports.DecodeIngredientFromUrl = DecodeIngredientFromUrl;\n/**\n * Given a pantry of ingredients, searches through a drink list\n * and determines what ingredients you should buy to make the most new drinks.\n *\n * Returns an object of {ingredient: ingredient}\n */\nfunction GetRecommendedIngredients(results) {\n    // Gets all drinks that cannot be made\n    let invalids = results.invalid;\n    // Construct a list of all unique missing items\n    let missingIngredients = [];\n    const missingIds = [];\n    for (let i = 0; i < invalids.length; i++) {\n        const missing = invalids[i].missing;\n        for (let k = 0; k < missing.length; k++) {\n            const ing = missing[k];\n            if (!missingIds.contains(ing.IngredientId)) {\n                missingIds.push(ing.IngredientId);\n                missingIngredients.push({ count: 1, id: ing.IngredientId, ingredient: Ingredient2IngredientNode(ing) });\n            }\n            else {\n                const misser = missingIngredients.find(x => x.id === ing.IngredientId);\n                misser.count += 1;\n            }\n        }\n    }\n    // Order by number of missing items\n    missingIngredients = missingIngredients.sort((x, y) => { return x.count > y.count ? 0 : 1; }); // descending order\n    invalids = invalids.sort((x, y) => { return x.missing.length < y.missing.length ? 0 : 1; }); // ascending order\n    const WillingToPurchase = 2;\n    const invsWithWilling = invalids.filter(x => x.missing.length <= WillingToPurchase);\n    const considered = [];\n    const consideredIds = [];\n    for (let i = 0; i < invsWithWilling.length; i++) {\n        const inv = invalids[i];\n        const ings = inv.missing.map(x => x.IngredientId);\n        // how many others are also only missing these ingredient?\n        for (let k = 0; k < invsWithWilling.length; k++) {\n            if (consideredIds.contains(invsWithWilling[k].id)) {\n                continue;\n            }\n            const otherInv = Object.assign({}, invsWithWilling[k], { missing: invsWithWilling[k].missing.map(x => x.IngredientId) });\n            for (let z = 0; z < ings.length; z++) {\n                const pop = ings[z];\n                otherInv.missing.remove(pop);\n            }\n            if (otherInv.missing.length === 0) {\n                console.log(`if you can only purchase ${WillingToPurchase} items, purchase ${inv.missing.map(x => x.IngredientName).join(', ')}`);\n                console.log(otherInv);\n                considered.push(otherInv);\n                consideredIds.push(otherInv.id);\n            }\n        }\n    }\n    // for xn numnber of ingredients\n    // S0 = set of all drinks missing ingredient x0\n    // S1 = set all drinks missing ingredient x1\n    //   ...\n    // SN = set all drinks missing ingredient xn\n    // console.log('If you had these ingredients...');\n    // console.log(invalids);\n    // console.log(missingIngredients);\n}\nexports.GetRecommendedIngredients = GetRecommendedIngredients;\n"
        },
        {
          "id": 4,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/models/SearchObject.ts",
          "name": "./models/SearchObject.ts",
          "index": 44,
          "index2": 41,
          "size": 442,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "issuer": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
          "issuerId": 49,
          "issuerName": "./main.ts",
          "issuerPath": [
            {
              "id": 49,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
              "name": "./main.ts",
              "profile": {
                "factory": 58,
                "building": 1843
              }
            }
          ],
          "profile": {
            "factory": 83,
            "building": 1193,
            "dependencies": 637
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 13,
              "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DrinkService.ts",
              "module": "./services/DrinkService.ts",
              "moduleName": "./services/DrinkService.ts",
              "type": "cjs require",
              "userRequest": "../models/SearchObject",
              "loc": "3:23-56"
            },
            {
              "moduleId": 18,
              "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DisplayService.ts",
              "module": "./services/DisplayService.ts",
              "moduleName": "./services/DisplayService.ts",
              "type": "cjs require",
              "userRequest": "../models/SearchObject",
              "loc": "17:23-56"
            },
            {
              "moduleId": 49,
              "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
              "module": "./main.ts",
              "moduleName": "./main.ts",
              "type": "cjs require",
              "userRequest": "./models/SearchObject",
              "loc": "23:23-55"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 1,
          "source": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst SearchObject = {\n    ConsiderSubstitutions: true,\n    RequireGarnish: false,\n    RequireCube: false,\n    RequireRinse: false,\n    RequireSplash: false,\n    RequireBitters: true,\n    RequireSpray: false,\n    RequirePinch: true,\n    RequireFloat: false,\n    Inventory: [],\n    _InventoryIds: [],\n    SubstitutionMap: {},\n};\nexports.SearchObject = SearchObject;\n"
        },
        {
          "id": 5,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/SVGService.ts",
          "name": "./services/SVGService.ts",
          "index": 37,
          "index2": 37,
          "size": 23980,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "issuer": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DisplayService.ts",
          "issuerId": 18,
          "issuerName": "./services/DisplayService.ts",
          "issuerPath": [
            {
              "id": 49,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
              "name": "./main.ts",
              "profile": {
                "factory": 58,
                "building": 1843
              }
            },
            {
              "id": 18,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DisplayService.ts",
              "name": "./services/DisplayService.ts",
              "profile": {
                "factory": 83,
                "building": 1193,
                "dependencies": 637
              }
            }
          ],
          "profile": {
            "factory": 735,
            "building": 523,
            "dependencies": 1
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 8,
              "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DrinkDisplayService.ts",
              "module": "./services/DrinkDisplayService.ts",
              "moduleName": "./services/DrinkDisplayService.ts",
              "type": "cjs require",
              "userRequest": "./SVGService",
              "loc": "7:21-44"
            },
            {
              "moduleId": 11,
              "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/BuilderService.ts",
              "module": "./services/BuilderService.ts",
              "moduleName": "./services/BuilderService.ts",
              "type": "cjs require",
              "userRequest": "./SVGService",
              "loc": "11:21-44"
            },
            {
              "moduleId": 18,
              "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DisplayService.ts",
              "module": "./services/DisplayService.ts",
              "moduleName": "./services/DisplayService.ts",
              "type": "cjs require",
              "userRequest": "./SVGService",
              "loc": "19:21-44"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 2,
          "source": "\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst SVG = require(\"svg.js\");\nconst ITree_1 = require(\"../models/ITree\");\nconst IngredientService_1 = require(\"./IngredientService\");\nconst GlassService_1 = require(\"./GlassService\");\nconst UnitService_1 = require(\"./UnitService\");\nconst SVGOptions = {\n    WidthCanvas: 250,\n    HeightCanvas: 80 * 4,\n    WidthElement: 10,\n    HeightElement: 10,\n    ScaleElement: 1,\n    DropletMeta: { Height: 25, Width: 25 },\n    LiquidMeta: { Height: 10, Width: 10 },\n    TwistMeta: { Height: 50, Width: 100 },\n    DropMeta: { Height: 50, Width: 50 },\n    IceCollinsMeta: { Height: 9999, Width: 9999 },\n    IceRegularMeta: { Height: 25, Width: 25 },\n    IceLargeMeta: { Height: 34, Width: 34 },\n    SugarCubeMeta: { Height: 20, Width: 20 },\n};\n/* Used so we know what to highlight or de-highlight for mouseovers */\nconst GroupRegister = [];\n/* these two variables help with layering ingredients in a criss-cross pattern */\nlet toff = false;\nlet offcounter = 0;\n/* Constants for how many rows of a glass to dedicate to drawing particular ingredient types */\nconst BSRowCount = 2; /* number of rows we dedicate to drawing barspoons */\nconst FloatRowCoat = 1; /* number of rows we dedicate to drawing floats */\n/* SVG Document variables */\nlet temp = null;\nlet canv = null;\nlet iceG = null;\nlet mainG = null;\nlet glassG = null;\nlet topG = null;\nlet mask = null;\n/**\n * Resets the SVG space to a known initialization. Called before each new drink draw\n * @param glass Optional glass to call the reset with. Helps to properly size the bounding boxes. (Collins and punch bowls are bigger than whiskey glasses, for instance)\n */\nfunction ResetSVGSpace(glass) {\n    GroupRegister.clear(); // Reset the array\n    toff = false;\n    offcounter = 0;\n    mask ? mask.remove() : '';\n    glassG ? glassG.remove() : '';\n    mainG ? mainG.remove() : '';\n    iceG ? iceG.remove() : '';\n    topG ? topG.remove() : '';\n    canv ? canv.remove().attr('id', 'main_canvas') : '';\n    temp ? temp.remove().attr('id', 'temp') : '';\n    temp = SVG('svgtmp').attr('id', 'svgtmp');\n    canv = SVG('svg').attr('height', null).attr('width', null).viewbox(0, 0, SVGOptions.WidthCanvas, SVGOptions.HeightCanvas).attr('id', 'canv_vb');\n    mainG = canv.nested().attr({ id: 'mg' });\n    iceG = canv.nested().attr('id', 'iceg');\n    glassG = canv.nested().attr('id', 'glassg');\n    topG = canv.nested().attr('id', 'topg');\n    mask = null;\n    if (glass) {\n        /* We set the viewbox to the height of the glass if we are handed one */\n        canv.viewbox(0, 0, glass.Width, glass.Height);\n    }\n}\nexports.ResetSVGSpace = ResetSVGSpace;\n/**\n * Generates a function that will assist in mouseover events for each ingredient.\n * @param ingredient Ingredient to assign to the highlighter\n */\nfunction highlightGroupGenerator(ingredient) {\n    const f = function () {\n        GroupRegister.forEach(x => x.attr('opacity', 0.3));\n        GroupRegister.filter(x => x.id() === makeIngredientGroupId(ingredient))[0].attr('opacity', 1);\n        const idLinkToFind = IngredientService_1.makeIngredientIdForHTML(ingredient);\n        $('.ingdisplay').removeClass('inghighlight').addClass('ingdepress');\n        $(`#${idLinkToFind}`).addClass('inghighlight').removeClass('ingdepress');\n    };\n    return f;\n}\nexports.highlightGroupGenerator = highlightGroupGenerator;\n/**\n * Resets any ingredient highlighting\n */\nfunction restoreGroups() {\n    GroupRegister.forEach(x => x.attr('opacity', 1));\n    $('.ingdisplay').removeClass('inghighlight').removeClass('ingdepress');\n}\nexports.restoreGroups = restoreGroups;\n/**\n * Using the inherit tree-structure of the Ingredients, we search for the lowest available\n * svg symbol type in a given branch. This lets us use whatever top-level defaults\n * are available if a specific symbol doesn't exist.\n *\n * Converts the ingredient to an IngredientNode and calls `getIngredientSVGStyle()`\n * @param ing Ingredient type to retrieve an SVG type for\n * @param available list of all available ingredients to search over\n *\n * @returns a string representing the svg symbol type, or `null` if nothing at all was found\n */\nfunction getIngredientSVGStyle(ing, available) {\n    const converted = IngredientService_1.Ingredient2IngredientNode(ing);\n    return getIngredientNodeSVGStyle(converted, available);\n}\n/**\n * Using the inherit tree-structure of the Ingredients, we search for the lowest available\n * svg symbol type in a given branch. This lets us use whatever top-level defaults\n * are available if a specific symbol doesn't exist.\n *\n * This is the base method for `getIngredientSVGStyle`\n *\n * @param ing Ingredient type to retrieve an SVG type for\n * @param available list of all available ingredients to search over\n *\n * @returns a string representing the svg symbol type, or `null` if nothing at all was found\n */\nfunction getIngredientNodeSVGStyle(ing, available) {\n    let path = null;\n    for (let i = 0; i < available.length; i++) {\n        const tree = available[i];\n        const res = ITree_1.NoSiblings(tree, ing, true);\n        if (res && res.id !== -1) {\n            path = res;\n            break;\n        }\n    }\n    if (!path) {\n        console.error('Failed to find any matching ingredient path for the supplied ingredient');\n        return null;\n    }\n    let highestImageUrl = null;\n    ITree_1.DFS(path, (n) => {\n        if (n.symbol) {\n            highestImageUrl = n.symbol;\n        }\n    });\n    return highestImageUrl;\n}\nexports.getIngredientNodeSVGStyle = getIngredientNodeSVGStyle;\nconst smap = {};\n/**\n * Ingredient quantites are always strings and sometimes contain ranges in the form of `\"a-b\"`\n * This method takes any quantity and returns the numerical version of that numer-string.\n *\n *\n * In the event of ranges, selects the highest range.\n * @param quantity Ingredient quantity to parse\n */\nfunction useThisNumber(quantity) {\n    if (quantity.contains('-')) {\n        const splits = quantity.split('-');\n        const numarr = splits.map((x) => {\n            const num = parseFloat(x);\n            if (isNaN(num)) {\n                console.error(`Error parsing a number from drink quantity value. Received ${x}`);\n                return 0;\n            }\n            return num;\n        });\n        const toUse = numarr.reduce((p, c) => {\n            return c > p ? c : p;\n        }, 0);\n        return toUse;\n    }\n    return +quantity;\n}\n/**\n * Returns the number of rows each ingredient should take up given the drink's glass.\n * @param drink the drink containing the list of ingredients and their quantites to use\n */\nfunction calculateLiquidRatios(drink) {\n    const ounces = drink.Ingredients.filter(x => x.Unit === 'oz' || x.Unit === 'shot');\n    const total = ounces.reduce((p, c) => {\n        let num = useThisNumber(c.Quantity);\n        // get unit\n        const unit = UnitService_1.UnitString2Unit(c.Unit);\n        const inOunces = UnitService_1.Unit2OunceConverter(unit);\n        if (inOunces === -1) {\n            return p; // skip invalids\n        }\n        num *= inOunces;\n        return p + num;\n    }, 0);\n    const numOtherRows = drink.Ingredients.filter(x => x.Unit === 'splash' || x.Unit === 'float' || x.Unit === 'top').length * FloatRowCoat; // We dedicate a single row to each of these types.\n    const numBarSpoons = drink.Ingredients.filter(x => x.Unit === 'bs' || x.Unit === 'ts').length * BSRowCount; // we dedicate 2 rows to each bs ingreditent.\n    const glass = GlassService_1.GlassString2Glass(drink.Glass);\n    const ratios = ounces.map(x => {\n        const q = useThisNumber(x.Quantity);\n        const ratf = (q / total);\n        const rati = Math.ceil(ratf * 100);\n        const rt = (glass.AvailableRows - numOtherRows - numBarSpoons) * ratf;\n        const obj = {\n            ingredient: x,\n            rational_base: ratf,\n            rational_float: ratf * 100,\n            rational_integer: rati,\n            rowcount: Math.floor(rt)\n        };\n        return obj;\n    });\n    return ratios;\n}\n/**\n * Returns an array of ice cubes in a given drink, if any\n * @param drink Drink to get ice cubes from\n */\nfunction getIceCubeIngredients(drink) {\n    const cubes = drink.Ingredients.filter(x => x.IngredientName.toLocaleLowerCase().contains('ice cube') && x.Unit !== 'long cube' && x.DisplayOrder > -1);\n    return cubes;\n}\nfunction getOtherGanirshes(drink) {\n    const ret = drink.Ingredients.filter((x) => {\n        return x.IsGarnish && x.Unit !== 'twist' && x.Unit !== 'drop' && x.Unit !== 'pinch' && x.Unit !== 'float' && x.DisplayOrder > -1;\n    });\n    return ret;\n}\nfunction getTwistsAndDrops(drink) {\n    const ret = drink.Ingredients.filter(x => (x.Unit === 'twist' || x.Unit === 'drop') && x.DisplayOrder > -1);\n    return ret;\n}\nfunction getPinchesAndDashes(drink) {\n    const ret = drink.Ingredients.filter(x => (x.Unit === 'dash' || x.Unit === 'pinch') && x.DisplayOrder > -1);\n    return ret;\n}\nfunction GetSVG(url) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (url in smap) {\n            return smap[url];\n        }\n        else {\n            const r = yield fetch(url);\n            const t = yield r.text();\n            smap[url] = t;\n            return t;\n        }\n    });\n}\nfunction mdraw(maskS, id) {\n    const m = temp.clone().svg(maskS);\n    m.remove().attr('id', id);\n    return m;\n}\nfunction gdraw(glassS, maskS) {\n    const g = temp.clone().svg(glassS);\n    g.remove().attr('id', 'glasss_main');\n    glassG.add(g);\n    const m = mdraw(maskS, 'glass_mask');\n    glassG.add(m);\n    mask = m;\n}\nfunction icdraw(cube, cubeS, count, g, glass) {\n    // What is the height of an icecube?\n    let iceheight = 34; // todo encode this better for each ice cube.\n    let magicMult = 0;\n    if (cube.IngredientId === 223) {\n        iceheight = SVGOptions.IceLargeMeta.Height;\n        magicMult = 4;\n    }\n    else if (cube.IngredientId === 221 || cube.IngredientId === 224) {\n        iceheight = SVGOptions.IceRegularMeta.Height;\n        magicMult = 3;\n    }\n    else {\n        console.error('Attempted to draw ice cube with an incorrect ingredient id: ' + cube.IngredientId);\n        return;\n    }\n    const ice = temp.clone().svg(cubeS);\n    ice.remove().attr('id', 'ice_cube');\n    ice.x(glass.Width / 4); // width begins counting from farthest left. We go 25% in to center againt the backing element (the GlassG)\n    ice.y(glass.Height - ((iceheight * (count + 1)) * magicMult)); // +1 to account for zero being off screen *4 because??\n    g.add(ice);\n}\n/* Makes a row of SVG ingredient icons */\nfunction makeRow(s) {\n    const spacing = SVGOptions.HeightElement * 2;\n    const cloneTimes = 15;\n    const rowGroup = canv.nested().attr('id', `rowgroup_${offcounter}`);\n    const first = rowGroup.nested().svg(s).attr('id', `stamp_${offcounter}`).height(SVGOptions.HeightElement);\n    for (let i = 1; i < cloneTimes; i++) {\n        const dx = i * spacing;\n        const stamp = rowGroup.use(first).attr('id', `use_${offcounter}_${i - 1}`).x(dx);\n    }\n    rowGroup.remove();\n    return rowGroup;\n}\n/* Given a grouped row of ingredient icons, place it in our main group */\nfunction drawRow(s, g) {\n    const row = makeRow(s);\n    const dx = toff ? SVGOptions.HeightElement : 0;\n    const dy = offcounter * SVGOptions.HeightElement;\n    row.x(dx).y(dy);\n    g.add(row);\n}\nfunction addStack(s, g) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const t = yield GetSVG(s);\n        drawRow(t, g);\n        toff = !toff;\n        offcounter += 1;\n    });\n}\nfunction makeIngredientGroupId(ingredient) {\n    const gid = `group_${ingredient.IngredientId}_${ingredient.Unit.replace(' ', '')}_${ingredient.Quantity.replace('-', '_')}`;\n    return gid;\n}\nexports.makeIngredientGroupId = makeIngredientGroupId;\nfunction makeIngredientGroup(ingredient) {\n    const gid = makeIngredientGroupId(ingredient);\n    const svgg = temp.group();\n    svgg.attr('id', gid).addClass('svginghighlighter');\n    svgg.remove();\n    GroupRegister.push(svgg);\n    svgg.on('mouseover', highlightGroupGenerator(ingredient));\n    svgg.on('mouseout', restoreGroups);\n    return svgg;\n}\nfunction drawIngredient(ingArr, rowCount, universe) {\n    return __awaiter(this, void 0, void 0, function* () {\n        for (let i = 0; i < ingArr.length; i++) {\n            const ing = ingArr[i];\n            const svgu = getIngredientSVGStyle(ing, universe);\n            if (svgu === null) {\n                console.error('Whoaaaah something happened while trying to draw an SVG bs');\n                return;\n            }\n            const svgg = makeIngredientGroup(ing);\n            mainG.add(svgg);\n            for (let k = 0; k < rowCount; k++) {\n                yield addStack(`/img/ingredients/${svgu}.svg`, svgg);\n            }\n        }\n    });\n}\nfunction drawTop(ingredient, start_x, off_x, start_y, off_y, elem_height, universe) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const g = makeIngredientGroup(ingredient);\n        const svgu = getIngredientSVGStyle(ingredient, universe);\n        const s = yield GetSVG(`/img/ingredients/${svgu}.svg`);\n        const first = temp.clone().svg(s).remove();\n        first.x(start_x - off_x);\n        first.y(start_y - off_y);\n        g.add(first);\n        const utn = useThisNumber(ingredient.Quantity);\n        for (let k = 1; k < utn; k++) {\n            const stamp = g.use(first);\n            stamp.dy(-(k * elem_height));\n        }\n        return g;\n    });\n}\nfunction DrawDrinkSVG(drink, universe) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const glass = GlassService_1.GlassString2Glass(drink.Glass);\n        ResetSVGSpace(glass);\n        /* Get Glass svgs */\n        const glassS = yield GetSVG(glass.SVGURL);\n        const glassM = yield GetSVG(glass.MaskURL);\n        /* Draw Splashes */\n        const splashes = drink.Ingredients.filter(x => x.Unit === 'splash' || x.Unit === 'float' || x.Unit === 'top');\n        yield drawIngredient(splashes, FloatRowCoat, universe);\n        /* Draw bar spoons */\n        const bss = drink.Ingredients.filter(x => x.Unit === 'bs' || x.Unit === 'ts');\n        yield drawIngredient(bss, BSRowCount, universe);\n        /* Draw the liquid ingredients */\n        const liqrats = calculateLiquidRatios(drink);\n        for (let i = liqrats.length - 1; i >= 0; i--) {\n            /* full arayy not handed in because each liquid has a unique row count. So we wrap each in a single-array */\n            yield drawIngredient([liqrats[i].ingredient], liqrats[i].rowcount, universe);\n        }\n        gdraw(glassS, glassM);\n        mainG.maskWith(mask);\n        /* Draw the Ice Cubes if any */\n        const cubes = getIceCubeIngredients(drink);\n        for (let i = 0; i < cubes.length; i++) {\n            const cube = cubes[i];\n            const cubeCount = useThisNumber(cube.Quantity);\n            const svgu = getIngredientSVGStyle(cube, universe);\n            const s = yield GetSVG(`/img/ingredients/${svgu}.svg`);\n            const svgg = makeIngredientGroup(cube);\n            mainG.add(svgg);\n            for (let c = 0; c < cubeCount; c++) {\n                icdraw(cube, s, c, svgg, glass);\n            }\n        }\n        /**\n         * Draw top items\n         * we collect all height information up front so we can draw properly\n         */\n        const additionalHeights = [0];\n        const additionalSidePush = [0];\n        const garnishes = getOtherGanirshes(drink);\n        additionalSidePush.push(Math.min(1, garnishes.length) * 90 / 2); // todo height of garnish. We only take one, we do not stack garnishes\n        additionalHeights.push(Math.min(1, garnishes.length) * 90 / 2); // we split the dimensions of a garnish across the x and y vectors\n        /* here we calculate the additional height we need to add to our drawing to account for top-items like drops and pinches and bitters */\n        const twists = getTwistsAndDrops(drink);\n        additionalHeights.push(twists.length * SVGOptions.TwistMeta.Height);\n        const pinchesAndDashes = getPinchesAndDashes(drink);\n        additionalHeights.push(pinchesAndDashes.map(x => useThisNumber(x.Quantity)).reduce((p, c) => {\n            if (c > p) {\n                return c;\n            }\n            else {\n                return p;\n            }\n        }, 0) * SVGOptions.DropletMeta.Height);\n        const additionalHeightNeeded = Math.max(...additionalHeights);\n        const additionalSidePushNeeded = Math.max(...additionalSidePush);\n        /* Draw Twists and Drops */\n        for (let i = 0; i < twists.length; i++) {\n            const twist = twists[i];\n            const elem_height = SVGOptions.TwistMeta.Height;\n            const start_x = 0; /* Draws from right-to-left */\n            const off_x = 0; /* Does not move x's */\n            const off_y = ((i + 1) * elem_height); /* will move down by some amount for each ingredient */\n            const start_y = additionalHeightNeeded; /* Starts drawing bottom up */\n            const svgg = yield drawTop(twist, start_x, off_x, start_y, off_y, elem_height, universe);\n            topG.add(svgg);\n        }\n        /* Draw pinches and dashes */\n        for (let i = 0; i < pinchesAndDashes.length; i++) {\n            const dash = pinchesAndDashes[i];\n            const elem_height = SVGOptions.DropletMeta.Height;\n            const start_x = glass.Width; /* Draws from left-to-right */\n            const off_x = (elem_height * (i + 1)); /* will move some amount to the side for each different-type ingredient */\n            const off_y = elem_height; /* will move down by some amount for each same-ingredient */\n            const start_y = additionalHeightNeeded; /* starts drawing bottom up */\n            const svgg = yield drawTop(dash, start_x, off_x, start_y, off_y, elem_height, universe);\n            topG.add(svgg);\n        }\n        /* Draw Cracked or Crushed Ice if any */\n        const crackedIce = drink.Ingredients.filter(x => x.Unit === 'cracked' || x.Unit === 'crushed').find(x => true);\n        if (crackedIce) {\n            const heightIce = 25;\n            function crackedDraw(s, g) {\n                return __awaiter(this, void 0, void 0, function* () {\n                    const t = yield GetSVG(s);\n                    const spacing = heightIce * 2;\n                    const cloneTimes = 15;\n                    const rowGroup = temp.nested().attr('id', `rowgroup_cracked_${iceoff}`);\n                    const first = rowGroup.nested().svg(t).attr('id', `stamp_cracked_${iceoff}`).height(heightIce);\n                    for (let i = 1; i < cloneTimes; i++) {\n                        const dx = i * spacing;\n                        const stamp = rowGroup.use(first).attr('id', `use_cracked_${iceoff}_${i - 1}`).x(dx);\n                    }\n                    const row = rowGroup.remove();\n                    const dx = icetoff ? heightIce : 0;\n                    const dy = iceoff * heightIce;\n                    row.x(dx).y(glass.Height - dy);\n                    g.add(row);\n                    icetoff = !icetoff;\n                    iceoff += 1;\n                });\n            }\n            let iceoff = 0;\n            let icetoff = false;\n            const svgu = getIngredientSVGStyle(crackedIce, universe);\n            const svgs = `/img/ingredients/${svgu}.svg`;\n            const svgg = makeIngredientGroup(crackedIce).remove();\n            const count = (crackedIce.Quantity === 'half' ? glass.Height / 2 : glass.Height) / heightIce;\n            for (let i = 0; i < count; i++) {\n                yield crackedDraw(svgs, svgg);\n            }\n            const m = mdraw(glassM, 'icemask');\n            iceG.maskWith(m);\n            iceG.add(svgg);\n            mainG.front();\n        }\n        /* Draw Collins Ice Cubes, if any */\n        const collins = drink.Ingredients.filter(x => x.Unit === 'long cube').find(x => true);\n        if (collins) {\n            function collinsDraw(s, g) {\n                return __awaiter(this, void 0, void 0, function* () {\n                    const t = yield GetSVG(s);\n                    const rowGroup = temp.nested().attr('id', `rowgroup_collins`);\n                    const first = rowGroup.nested().svg(t).attr('id', `stamp_collins`);\n                    const row = rowGroup.remove();\n                    const widthIce = 90;\n                    first.x((glass.Width / 2) - (widthIce / 2));\n                    first.dy(glass.Height / 10);\n                    g.add(row);\n                });\n            }\n            const svgu = getIngredientSVGStyle(collins, universe);\n            const svgs = `/img/ingredients/${svgu}.svg`;\n            const svgg = makeIngredientGroup(collins).remove();\n            yield collinsDraw(svgs, svgg);\n            const m = mdraw(glassM, 'icemask');\n            iceG.maskWith(m); /* we mask with another glass_mask */\n            iceG.add(svgg);\n            mainG.front(); /* ingredients come forward, meaning ice gets drawn behind. */\n        }\n        /* draw garnishes, if any */\n        // todo fix side push collisions with bitters and pinches\n        if (garnishes.length > 0) {\n            for (let i = 0; i < garnishes.length; i++) {\n                // todo we cheat here to only draw one of each garnish. Garnishes are special and only drawn one time per.\n                const garnish = Object.assign({}, garnishes[i], { Quantity: '1' });\n                const isMint = (garnish.Unit === 'leaf' || garnish.Unit === 'sprig');\n                const elem_height = isMint ? 90 : (90 / 2); // todo height of garnish element divided by 2\n                const start_x = isMint ? 0 : -(elem_height); /* Draws from right-to-left */\n                const off_x = 0; /* Does not move x's */\n                const off_y = ((i + 1) * elem_height); /* will move down by some amount for each ingredient */\n                const start_y = additionalHeightNeeded; /* Starts drawing bottom up */\n                const svgg = yield drawTop(garnish, start_x, off_x, start_y, off_y, elem_height, universe);\n                topG.add(svgg);\n            }\n        }\n        const currentVbHeight = canv.viewbox().height;\n        canv.viewbox(0, 0, SVGOptions.WidthCanvas + additionalSidePushNeeded, currentVbHeight + additionalHeightNeeded);\n        /* shift everything over by the needed amounts */\n        /* y */\n        mainG.dy(additionalHeightNeeded);\n        glassG.dy(additionalHeightNeeded);\n        iceG.dy(additionalHeightNeeded);\n        /* x */\n        mainG.dx(additionalSidePushNeeded);\n        glassG.dx(additionalSidePushNeeded);\n        iceG.dx(additionalSidePushNeeded);\n        topG.dx(additionalSidePushNeeded);\n    });\n}\nexports.DrawDrinkSVG = DrawDrinkSVG;\nfunction DrawIngredientSVG(ingredient, universe) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const svgu = getIngredientNodeSVGStyle(ingredient, universe);\n        if (svgu === null) {\n            console.error('Whoaaaah something happened while trying to draw an SVG');\n            return;\n        }\n        const svgs = yield GetSVG(`/img/ingredients/${svgu}.svg`);\n        const scale = 1;\n        const canvas = SVG('svgholder').attr('width', `${SVGOptions.HeightElement * scale}px`).attr('height', `${SVGOptions.HeightElement * scale}px`);\n        canvas.svg(svgs).scale(scale);\n        return;\n    });\n}\nexports.DrawIngredientSVG = DrawIngredientSVG;\n"
        },
        {
          "id": 6,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/UnitService.ts",
          "name": "./services/UnitService.ts",
          "index": 36,
          "index2": 31,
          "size": 1576,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "issuer": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/IngredientService.ts",
          "issuerId": 3,
          "issuerName": "./services/IngredientService.ts",
          "issuerPath": [
            {
              "id": 49,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
              "name": "./main.ts",
              "profile": {
                "factory": 58,
                "building": 1843
              }
            },
            {
              "id": 3,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/IngredientService.ts",
              "name": "./services/IngredientService.ts",
              "profile": {
                "factory": 83,
                "building": 1193,
                "dependencies": 637
              }
            }
          ],
          "profile": {
            "factory": 330,
            "building": 225,
            "dependencies": 1
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 3,
              "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/IngredientService.ts",
              "module": "./services/IngredientService.ts",
              "moduleName": "./services/IngredientService.ts",
              "type": "cjs require",
              "userRequest": "./UnitService",
              "loc": "4:22-46"
            },
            {
              "moduleId": 5,
              "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/SVGService.ts",
              "module": "./services/SVGService.ts",
              "moduleName": "./services/SVGService.ts",
              "type": "cjs require",
              "userRequest": "./UnitService",
              "loc": "15:22-46"
            },
            {
              "moduleId": 11,
              "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/BuilderService.ts",
              "module": "./services/BuilderService.ts",
              "moduleName": "./services/BuilderService.ts",
              "type": "cjs require",
              "userRequest": "./UnitService",
              "loc": "14:22-46"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 2,
          "source": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Globals_1 = require(\"./Globals\");\nfunction UnitVal2Unit(val) {\n    for (let i = 0; i < Globals_1.Globals.UnitTypes.length; i++) {\n        const ucat = Globals_1.Globals.UnitTypes[i];\n        const unit = ucat.Units.find(x => x.Id === val);\n        if (unit) {\n            return unit.Unit;\n        }\n    }\n    console.error(`Failed to find a unit by the value given (${val})`);\n    return undefined;\n}\nexports.UnitVal2Unit = UnitVal2Unit;\nfunction UnitString2Unit(val) {\n    for (let i = 0; i < Globals_1.Globals.UnitTypes.length; i++) {\n        const ucat = Globals_1.Globals.UnitTypes[i];\n        const unit = ucat.Units.find(x => x.Unit.Name === val);\n        if (unit) {\n            return unit.Unit;\n        }\n    }\n    console.error(`Failed to find a unit by the value given (${val})`);\n    return undefined;\n}\nexports.UnitString2Unit = UnitString2Unit;\n/**\n * given a unit, convert it to an equivalent number of ounces\n * @param u Unit to convert to ounces\n * @returns the number of ounces the given unit reprents, or `-1` if not valid\n */\nfunction Unit2OunceConverter(u) {\n    if (u.Name === 'oz') {\n        return 1;\n    }\n    if (u.Name === 'ts' || u.Name === 'bs') {\n        return 1 / 6;\n    }\n    if (u.Name === 'ml') {\n        return 1 / 32;\n    }\n    if (u.Name === 'lb') {\n        return 16;\n    }\n    if (u.Name === 'tbs') {\n        return 1 / 2;\n    }\n    if (u.Name === 'shot') {\n        return 1.5;\n    }\n    return -1;\n}\nexports.Unit2OunceConverter = Unit2OunceConverter;\n"
        },
        {
          "id": 7,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/utils/bignumber/isBigNumber.js",
          "name": "../node_modules/mathjs/lib/utils/bignumber/isBigNumber.js",
          "index": 15,
          "index2": 7,
          "size": 204,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "issuer": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/utils/string.js",
          "issuerId": 28,
          "issuerName": "../node_modules/mathjs/lib/utils/string.js",
          "issuerPath": [
            {
              "id": 49,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
              "name": "./main.ts",
              "profile": {
                "factory": 58,
                "building": 1843
              }
            },
            {
              "id": 18,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DisplayService.ts",
              "name": "./services/DisplayService.ts",
              "profile": {
                "factory": 83,
                "building": 1193,
                "dependencies": 637
              }
            },
            {
              "id": 8,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DrinkDisplayService.ts",
              "name": "./services/DrinkDisplayService.ts",
              "profile": {
                "factory": 735,
                "building": 523,
                "dependencies": 1
              }
            },
            {
              "id": 46,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/MathService.ts",
              "name": "./services/MathService.ts",
              "profile": {
                "factory": 394,
                "building": 17
              }
            },
            {
              "id": 29,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/function/string/format.js",
              "name": "../node_modules/mathjs/lib/function/string/format.js",
              "profile": {
                "factory": 54,
                "building": 107
              }
            },
            {
              "id": 28,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/utils/string.js",
              "name": "../node_modules/mathjs/lib/utils/string.js",
              "profile": {
                "factory": 7,
                "building": 13
              }
            }
          ],
          "profile": {
            "factory": 32,
            "building": 6,
            "dependencies": 1
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 0,
              "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/utils/object.js",
              "module": "../node_modules/mathjs/lib/utils/object.js",
              "moduleName": "../node_modules/mathjs/lib/utils/object.js",
              "type": "cjs require",
              "userRequest": "./bignumber/isBigNumber",
              "loc": "5:18-52"
            },
            {
              "moduleId": 28,
              "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/utils/string.js",
              "module": "../node_modules/mathjs/lib/utils/string.js",
              "moduleName": "../node_modules/mathjs/lib/utils/string.js",
              "type": "cjs require",
              "userRequest": "./bignumber/isBigNumber",
              "loc": "9:18-52"
            },
            {
              "moduleId": 42,
              "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/core/typed.js",
              "module": "../node_modules/mathjs/lib/core/typed.js",
              "moduleName": "../node_modules/mathjs/lib/core/typed.js",
              "type": "cjs require",
              "userRequest": "./../utils/bignumber/isBigNumber",
              "loc": "9:18-61"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 6,
          "source": "'use strict';\n/**\n * Test whether a value is a BigNumber\n * @param {*} x\n * @return {boolean}\n */\n\nmodule.exports = function isBigNumber(x) {\n  return x && x.constructor.prototype.isBigNumber || false;\n};"
        },
        {
          "id": 8,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DrinkDisplayService.ts",
          "name": "./services/DrinkDisplayService.ts",
          "index": 9,
          "index2": 39,
          "size": 8950,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "issuer": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DisplayService.ts",
          "issuerId": 18,
          "issuerName": "./services/DisplayService.ts",
          "issuerPath": [
            {
              "id": 49,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
              "name": "./main.ts",
              "profile": {
                "factory": 58,
                "building": 1843
              }
            },
            {
              "id": 18,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DisplayService.ts",
              "name": "./services/DisplayService.ts",
              "profile": {
                "factory": 83,
                "building": 1193,
                "dependencies": 637
              }
            }
          ],
          "profile": {
            "factory": 735,
            "building": 523,
            "dependencies": 1
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 9,
              "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/NavigationService.ts",
              "module": "./services/NavigationService.ts",
              "moduleName": "./services/NavigationService.ts",
              "type": "cjs require",
              "userRequest": "./DrinkDisplayService",
              "loc": "5:30-62"
            },
            {
              "moduleId": 11,
              "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/BuilderService.ts",
              "module": "./services/BuilderService.ts",
              "moduleName": "./services/BuilderService.ts",
              "type": "cjs require",
              "userRequest": "./DrinkDisplayService",
              "loc": "16:30-62"
            },
            {
              "moduleId": 18,
              "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DisplayService.ts",
              "module": "./services/DisplayService.ts",
              "moduleName": "./services/DisplayService.ts",
              "type": "cjs require",
              "userRequest": "./DrinkDisplayService",
              "loc": "22:30-62"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 2,
          "source": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst MathService_1 = require(\"./MathService\");\nconst Globals_1 = require(\"./Globals\");\nconst SelectedDrinkObject_1 = require(\"../models/SelectedDrinkObject\");\nconst IngredientService_1 = require(\"./IngredientService\");\nconst SVGService_1 = require(\"./SVGService\");\nconst WLM_1 = require(\"../models/WLM\");\n/* Drink Display */\nfunction DrawDrink() {\n    $('li').removeClass('liSelected');\n    const darr = Globals_1.Globals.Drinks.filter(x => x.DrinkId === parseInt(location.hash.substring(1)));\n    if (darr) {\n        SelectedDrinkObject_1.SelectedDrinkObject.Drink = darr[0];\n    }\n    else {\n        SelectedDrinkObject_1.SelectedDrinkObject.Drink = null;\n    }\n    if (SelectedDrinkObject_1.SelectedDrinkObject.Drink) {\n        $('#li_drink_' + SelectedDrinkObject_1.SelectedDrinkObject.Drink.DrinkId).addClass('liSelected');\n        DisplayDrink(SelectedDrinkObject_1.SelectedDrinkObject);\n        window.document.title = SelectedDrinkObject_1.SelectedDrinkObject.Drink.Name + ' - Nondari';\n    }\n}\nexports.DrawDrink = DrawDrink;\nfunction ingredientLink(ingredient) {\n    let a = null;\n    if (ingredient.name) {\n        a = $('<a>').attr('href', 'ingredient.html#' + ingredient.id).text((ingredient.name));\n    }\n    else if (ingredient.IngredientName) {\n        a = $('<a>').attr('href', 'ingredient.html#' + ingredient.IngredientId).text((ingredient.DisplayText ? ingredient.DisplayText : ingredient.IngredientName));\n    }\n    return a;\n}\nfunction ingredientText(ingredient, additionalText, sdo) {\n    const sp = $('<span>').addClass('ingdisplay').attr('id', IngredientService_1.makeIngredientIdForHTML(ingredient));\n    function quantityText(ingredient) {\n        function doFrac(d) {\n            // http://westblog.com/2014/02/26/javascript-fractional-part-of-a-number/\n            function fraction(fraction) {\n                const fr = MathService_1.math.fraction(fraction);\n                const res = MathService_1.math.format(fr, { fraction: 'ratio' });\n                return res;\n            }\n            function frac(num) {\n                return +(+num).toExponential().replace(/(-?)(\\d+(\\.?)\\d*)e(.+)/, function (m, neg, num, dot, offset) {\n                    const zeroes = Array(Math.abs(offset) + 2).join('0');\n                    num = (zeroes + num + (dot ? '' : '.') + zeroes).split('.');\n                    return String(+(neg + '.' + num.join('').slice(+offset + num[0].length)));\n                });\n            }\n            const dd = parseFloat(d);\n            const f = frac(dd);\n            if (f === 0) {\n                return dd;\n            }\n            else if (f === 33) {\n            }\n            else if (f === 66) {\n            }\n            const rat = dd - f;\n            const ff = fraction(f);\n            if (rat >= 1) {\n                return rat + ' ' + ff;\n            }\n            else {\n                return ff;\n            }\n        }\n        const u = ingredient.Unit;\n        const blanks = ['cracked', 'egg', 'float', 'half', 'full', 'rinse', 'splash', 'spray', 'top'];\n        if (blanks.contains(u)) {\n            return '';\n        }\n        const us = ['oz', 'bs', 'ts', 'tbs', 'shot'];\n        const quants = ingredient.Quantity.split('-');\n        for (let i = 0; i < quants.length; i++) {\n            const tp = parseFloat(quants[i]);\n            if (isNaN(tp)) {\n                return '';\n            }\n        }\n        if (us.contains(u)) {\n            const fracs = quants.map((x) => {\n                return doFrac(x);\n            });\n            return fracs.join('-');\n        }\n        else {\n            return ingredient.Quantity;\n        }\n    }\n    function unitText(ingredient) {\n        const unit = IngredientService_1.UnitAndPlurals.filter(x => x.unit === ingredient.Unit).find(x => true);\n        if (unit) {\n            const n = parseFloat(ingredient.Quantity);\n            return ` ${isNaN(n) || n > 1 ? unit.plural : unit.unit} `;\n        }\n        else {\n            return ' ';\n        }\n    }\n    const tfirst = `${quantityText(ingredient)}${unitText(ingredient)}`;\n    sp.append(tfirst);\n    sp.append(ingredientLink(ingredient));\n    sp.append(additionalText);\n    if (sdo && sdo.Builder) {\n        const but = $('<button>').text('X').addClass(['btn', 'btn-xs', 'btn-danger']);\n        but.on('click', () => {\n            console.log('shrug emoji');\n        });\n        sp.append(but);\n    }\n    if (ingredient.DisplayOrder > -1) {\n        sp.on('mouseover', SVGService_1.highlightGroupGenerator(ingredient));\n        sp.on('mouseout', SVGService_1.restoreGroups);\n    }\n    else {\n        const notDisplayedSpan = $('<span>').text('*');\n        $('#asterisk').removeClass('hidden');\n        sp.append(notDisplayedSpan);\n    }\n    return sp;\n}\n/* eliminate all html */\nfunction strip(html) {\n    const doc = new DOMParser().parseFromString(html, 'text/html');\n    return doc.body.textContent || '';\n}\n/**\n * A small DSL parser to keep our user-submitted preludes and instructions XSS safe.\n *\n* the DSL for prelude and intructions is as follows:\n*\n* {dNUM_text}, i.e., {d17_Bee's Knees} == <a href='drinks.html#17>Bee's Knees</a>\n*\n* {i_text}, i.e., {i_guey} == <i>guey</i>\n*/\nfunction replaceDSL(t) {\n    const open = '{';\n    const close = '}';\n    const italicToken = 'i';\n    const drinkToken = 'd';\n    let ret = t; /* string we will be operating on for replacements */\n    let openB = 0; /* initialized to something above -1 */\n    while (openB > -1) {\n        openB = ret.indexOf(`${open}d`);\n        /* changing links */\n        if (openB > -1) {\n            const closeB = ret.indexOf(close, openB);\n            const sub = ret.substr(openB, closeB - openB + 1);\n            const replacer = sub.replace(open, '').replace(close, '').replace(drinkToken, '');\n            const splits = replacer.split('_');\n            const drinkNum = parseInt(splits[0]);\n            const drinkName = splits[1];\n            const drink = Globals_1.Globals.Drinks.find(x => x.DrinkId === drinkNum);\n            if (!drink) {\n                console.error('tried to find drinkid ' + drinkNum + ' but none was found.');\n                // replace with drink name It doesn't matter.\n                ret = ret.replace(sub, drinkName);\n            }\n            else {\n                ret = ret.replace(sub, `<a href=\"/drinks.html#${drinkNum}\">${drinkName}</a>`);\n            }\n        }\n        /* changing italics */\n        openB = ret.indexOf(`${open}i`);\n        if (openB > -1) {\n            const closeB = ret.indexOf(close, openB);\n            const sub = ret.substr(openB, closeB - openB + 1);\n            const replacer = sub.replace(open, '').replace(close, '').replace(italicToken, '');\n            const splits = replacer.split('_');\n            const fancy = splits[1];\n            ret = ret.replace(sub, `<i>${fancy}</i>`);\n        }\n    }\n    return ret;\n}\nfunction decorateText(t) {\n    let s = strip(t);\n    s = replaceDSL(s);\n    s = s.replace(/\\n/g, '<br />');\n    return s;\n}\nfunction DisplayDrink(SDO) {\n    $('#drinkHeader').text(SDO.Drink.Name);\n    $('#drinkDescription').html(decorateText(SDO.Drink.Prelude));\n    $('#drinkInstructions').html(decorateText(SDO.Drink.Instructions));\n    $('#drinkCategory').text(SDO.Drink.Category);\n    $('#drinkGlass').text(SDO.Drink.Glass);\n    $('#drinkIngredients').empty();\n    $('#asterisk').addClass('hidden');\n    SDO.Drink.Ingredients.forEach((x) => {\n        const sp = $('<span>');\n        const li = $('<li>');\n        const ul = li.append(sp);\n        let additionalText = '';\n        if (SDO.Optionals.contains(x.IngredientId)) {\n            sp.addClass('optionalIngredient');\n            additionalText = '(optional)';\n        }\n        else if (x.IngredientId in SDO.Substitutions) {\n            sp.addClass('substitutionAvailable');\n            additionalText = '(substitutions available)';\n            const ul2 = $('<ul>');\n            const isubs = SDO.Substitutions[x.IngredientId];\n            for (const distance in isubs) {\n                const dist = $('<li>').addClass('substitutionItem');\n                const sp2 = $('<span>');\n                const iter = isubs[distance];\n                sp2.text(`${WLM_1.WeirdnessLevelMap[Number(distance)]}: `);\n                for (let i = 0; i < iter.length; i++) {\n                    const id = iter[i];\n                    const ing = Globals_1.Globals.IngredientFlat[id];\n                    sp2.append(ingredientLink(ing)).append(', ');\n                }\n                dist.append(sp2);\n                ul2.append(dist);\n            }\n            li.append(ul2);\n        }\n        const t = ingredientText(x, additionalText, SDO); // TODO typescript being a bitch\n        sp.html(t);\n        $('#drinkIngredients').append(ul);\n    });\n    SVGService_1.DrawDrinkSVG(SDO.Drink, Globals_1.Globals.ingredients);\n}\nexports.DisplayDrink = DisplayDrink;\n"
        },
        {
          "id": 9,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/NavigationService.ts",
          "name": "./services/NavigationService.ts",
          "index": 7,
          "index2": 40,
          "size": 7851,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "issuer": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
          "issuerId": 49,
          "issuerName": "./main.ts",
          "issuerPath": [
            {
              "id": 49,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
              "name": "./main.ts",
              "profile": {
                "factory": 58,
                "building": 1843
              }
            }
          ],
          "profile": {
            "factory": 83,
            "building": 1193,
            "dependencies": 637
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 13,
              "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DrinkService.ts",
              "module": "./services/DrinkService.ts",
              "moduleName": "./services/DrinkService.ts",
              "type": "cjs require",
              "userRequest": "./NavigationService",
              "loc": "6:28-58"
            },
            {
              "moduleId": 18,
              "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DisplayService.ts",
              "module": "./services/DisplayService.ts",
              "moduleName": "./services/DisplayService.ts",
              "type": "cjs require",
              "userRequest": "./NavigationService",
              "loc": "14:28-58"
            },
            {
              "moduleId": 49,
              "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
              "module": "./main.ts",
              "moduleName": "./main.ts",
              "type": "cjs require",
              "userRequest": "./services/NavigationService",
              "loc": "22:28-67"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 1,
          "source": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Utils_1 = require(\"./Utils\");\nconst DisplayService_1 = require(\"./DisplayService\");\nconst DrinkDisplayService_1 = require(\"./DrinkDisplayService\");\nconst PageTypes = {\n    Drink: 'drink',\n    Pantry: 'pantry',\n    Ingredient: 'ingredient',\n};\nexports.PageTypes = PageTypes;\nfunction findPage() {\n    const l = window.location.pathname.split('/');\n    const last = l[l.length - 1].split('.')[0];\n    return last;\n}\nexports.findPage = findPage;\nfunction drinkhrefmaker() {\n    const loc = findPage();\n    if (loc === 'drinks') {\n        return '#';\n    }\n    else {\n        return 'drinks.html#';\n    }\n}\nexports.drinkhrefmaker = drinkhrefmaker;\nfunction makeNavForDrink(foundDrink) {\n    /* Storing substitutes for a given drink */\n    function encodeSubstitutions(subs) {\n        // sub is {key: {0: [items], ..., n: [items]}}\n        // i24 d3 s18,24,67\n        // i6 d2 s9 d3 10\n        let s = '';\n        for (const ingidA in subs) {\n            let si = `i${ingidA}`;\n            for (const dist in subs[ingidA]) {\n                const sdss = `d${dist}s${subs[ingidA][dist].join(',')}`;\n                si += sdss;\n            }\n            s += si;\n        }\n        return s;\n    }\n    // need to encode(id of thing to replace, id of thing to replace with, distance of replacement);\n    const q2 = new URLSearchParams('?');\n    q2.set('page', 'drink');\n    q2.set('id', String(foundDrink.id));\n    if (!Utils_1.Any(foundDrink.substitutions)) {\n        const subs = encodeSubstitutions(foundDrink.substitutions);\n        q2.set('substitutions', subs);\n    }\n    if (foundDrink.optionals.any()) {\n        const opts = foundDrink.optionals.map(x => x.IngredientId).join(',');\n        q2.set('optionals', opts);\n    }\n    foundDrink.anchor = q2.toString();\n    return q2.toString();\n}\nexports.makeNavForDrink = makeNavForDrink;\nfunction decodeDrinkNav(qstring, drinkUniverse, ingredientUniverse, NavObject, SDO) {\n    /* Note: validate everything. */\n    const q = new URLSearchParams(qstring);\n    const pageq = q.get('page');\n    const didq = q.get('id');\n    const subsq = q.get('substitutions');\n    const optsq = q.get('optionals');\n    /* setting the current page */\n    if (pageq && (pageq === 'drink' || pageq === 'pantry')) {\n        NavObject.currentPage = pageq;\n    }\n    /* setting the drinkid */\n    if (didq) {\n        const did = parseInt(didq);\n        if (isNaN(did)) {\n            console.error('Failed to parse drink id for value: ' + didq);\n            return; /* failed to parse the drink id */\n        }\n        const drinkids = drinkUniverse.map(x => x.DrinkId);\n        const drinkidx = drinkids.indexOf(did);\n        if (drinkidx === -1) {\n            console.error('Supplied drink id was not a valid drink id');\n            return;\n        }\n        SDO.Drink = drinkUniverse[drinkidx];\n    }\n    /* Setting optionals */\n    // const ingredientids = ingredientFlat.map(x => x.id);\n    if (optsq) {\n        const optionals = [];\n        const splits = optsq.split(',');\n        for (let i = 0; i < splits.length; i++) {\n            const sp = splits[i];\n            const sn = parseInt(sp);\n            if (isNaN(sn)) {\n                console.error('Failed to parse optional id for value: ' + sp);\n            }\n            if (!(sn in ingredientUniverse)) {\n                console.error('An optional input id of ' + sn + ' was supplied but this is not a valid ingredient id');\n            }\n            else {\n                optionals.push(sn);\n            }\n        }\n        SDO.Optionals = optionals;\n    }\n    /* Setting Substitutions */\n    if (subsq) {\n        let subo = {};\n        // handles raw Ingredient Strings\n        // returns an object of the format {ingredientId: {[distance]: [itemids]}}\n        function handle_i(s) {\n            let ad = -1;\n            const dindexes = [];\n            let cont = true;\n            while (cont) {\n                ad = s.indexOf('d', ad + 1);\n                if (ad === -1) {\n                    cont = false;\n                }\n                else {\n                    dindexes.push(ad);\n                }\n            }\n            if (!dindexes.any()) {\n                console.error('Attempted to parse a substitution object, but there were no distances in the querystring');\n                return;\n            }\n            const ingIdS = s.substr(0, dindexes[0]);\n            const ingId = parseInt(ingIdS);\n            if (isNaN(ingId)) {\n                console.error('Failed to parse substitution id for value: ' + ingIdS);\n                return null;\n            }\n            else if (!(ingId in ingredientUniverse)) {\n                console.error('A substitution input id of ' + ingId + ' was supplied but this is not a valid ingredient id');\n                return null;\n            }\n            let distances = {};\n            for (let i = 0; i < dindexes.length; i++) {\n                const dindex = dindexes[i];\n                let until = undefined;\n                if (i + 1 < dindex.length) {\n                    until = dindex[i + 1];\n                }\n                const dsub = s.substr(dindex + 1, until);\n                const d = handle_d(dsub); // an object of {[distance]: [itemids]}\n                if (!d) {\n                    continue; // error from below\n                }\n                distances = Object.assign(distances, d);\n            }\n            const obj = {};\n            obj[ingId] = distances;\n            return obj;\n        }\n        // handles Distance substrings\n        // returns an object of {distance: [itemids]}\n        function handle_d(s) {\n            // s25,26\n            const sindex = s.indexOf('s');\n            if (sindex === -1) {\n                console.error('Failed to get an ingredient index');\n                return null;\n            }\n            const distS = s.substr(0, sindex);\n            const dist = parseInt(distS);\n            if (isNaN(dist)) {\n                console.error('Failed to parse distance key for value: ' + distS);\n                return null;\n            }\n            const dobj = {};\n            dobj[dist] = [];\n            const ingredientS = s.substr(sindex + 1);\n            const ingredients = ingredientS.split(',');\n            for (let i = 0; i < ingredients.length; i++) {\n                const ingIdS = ingredients[i];\n                const ingId = parseInt(ingIdS);\n                if (isNaN(ingId)) {\n                    console.error('Failed to parse replacement id for value: ' + ingIdS);\n                    return null;\n                }\n                else if (!(ingId in ingredientUniverse)) {\n                    console.error('A replacement input id of ' + ingId + ' was supplied but this is not a valid ingredient id');\n                    return null;\n                }\n                dobj[dist].push(ingId);\n            }\n            return dobj;\n        }\n        const is = subsq.split('i');\n        for (let i = 0; i < is.length; i++) {\n            if (is[i].length > 0) {\n                const mergeMe = handle_i(is[i]);\n                subo = Object.assign(subo, mergeMe);\n            }\n        }\n        SDO.Substitutions = subo;\n    }\n    window.location.hash = String(didq);\n}\nexports.decodeDrinkNav = decodeDrinkNav;\nfunction locationHashChanged() {\n    const page = findPage().toLocaleLowerCase();\n    if (page === PageTypes.Ingredient.toLocaleLowerCase()) {\n        DisplayService_1.DrawIngredient();\n        return;\n    }\n    else if (page === PageTypes.Drink || page === 'drinks') {\n        DrinkDisplayService_1.DrawDrink();\n        return;\n    }\n    else if (page === 'builder') {\n        DisplayService_1.DrawBuilder();\n        return;\n    }\n    window.document.title = 'Nondari';\n}\nexports.locationHashChanged = locationHashChanged;\n"
        },
        {
          "id": 10,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/QRCodeService.ts",
          "name": "./services/QRCodeService.ts",
          "index": 48,
          "index2": 45,
          "size": 177,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "issuer": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DisplayService.ts",
          "issuerId": 18,
          "issuerName": "./services/DisplayService.ts",
          "issuerPath": [
            {
              "id": 49,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
              "name": "./main.ts",
              "profile": {
                "factory": 58,
                "building": 1843
              }
            },
            {
              "id": 18,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DisplayService.ts",
              "name": "./services/DisplayService.ts",
              "profile": {
                "factory": 83,
                "building": 1193,
                "dependencies": 637
              }
            }
          ],
          "profile": {
            "factory": 735,
            "building": 523,
            "dependencies": 1
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 11,
              "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/BuilderService.ts",
              "module": "./services/BuilderService.ts",
              "moduleName": "./services/BuilderService.ts",
              "type": "cjs require",
              "userRequest": "./QRCodeService",
              "loc": "17:24-50"
            },
            {
              "moduleId": 18,
              "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DisplayService.ts",
              "module": "./services/DisplayService.ts",
              "moduleName": "./services/DisplayService.ts",
              "type": "cjs require",
              "userRequest": "./QRCodeService",
              "loc": "23:24-50"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 2,
          "source": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst QRDataLimit_AlphaNumeric = 4296;\nexports.QRDataLimit_AlphaNumeric = QRDataLimit_AlphaNumeric;\n"
        },
        {
          "id": 11,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/BuilderService.ts",
          "name": "./services/BuilderService.ts",
          "index": 47,
          "index2": 46,
          "size": 14014,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "issuer": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
          "issuerId": 49,
          "issuerName": "./main.ts",
          "issuerPath": [
            {
              "id": 49,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
              "name": "./main.ts",
              "profile": {
                "factory": 58,
                "building": 1843
              }
            }
          ],
          "profile": {
            "factory": 83,
            "building": 1193,
            "dependencies": 637
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 18,
              "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DisplayService.ts",
              "module": "./services/DisplayService.ts",
              "moduleName": "./services/DisplayService.ts",
              "type": "cjs require",
              "userRequest": "./BuilderService",
              "loc": "21:25-52"
            },
            {
              "moduleId": 49,
              "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
              "module": "./main.ts",
              "moduleName": "./main.ts",
              "type": "cjs require",
              "userRequest": "./services/BuilderService",
              "loc": "27:25-61"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 1,
          "source": "\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst SVGService_1 = require(\"./SVGService\");\nconst Globals_1 = require(\"./Globals\");\nconst ITree_1 = require(\"../models/ITree\");\nconst UnitService_1 = require(\"./UnitService\");\nconst IngredientService_1 = require(\"./IngredientService\");\nconst DrinkDisplayService_1 = require(\"./DrinkDisplayService\");\nconst QRCodeService_1 = require(\"./QRCodeService\");\nlet qrCodeAllotment = 0;\nconst units = [];\nconst AddedIngredients = [];\nlet timesAdded = 0;\nconst DrinkToDraw = {\n    Category: undefined,\n    DrinkId: -1,\n    Glass: undefined,\n    Ingredients: [],\n    Name: '',\n    Prelude: '',\n    Instructions: '',\n};\nfunction updateQRCodeAllotment(textOld, textNew) {\n    qrCodeAllotment -= textOld.length;\n    qrCodeAllotment += textNew.length;\n    $('#qr_limit_current').text(qrCodeAllotment);\n}\nfunction setDrinkName(text) {\n    return __awaiter(this, void 0, void 0, function* () {\n        updateQRCodeAllotment(DrinkToDraw.Name, text);\n        DrinkToDraw.Name = text;\n        yield BuilderDraw();\n    });\n}\nexports.setDrinkName = setDrinkName;\nfunction setCategoryType(val) {\n    return __awaiter(this, void 0, void 0, function* () {\n        DrinkToDraw.Category = val;\n        yield BuilderDraw();\n    });\n}\nexports.setCategoryType = setCategoryType;\nfunction setGlassType(val) {\n    return __awaiter(this, void 0, void 0, function* () {\n        DrinkToDraw.Glass = val;\n        yield BuilderDraw();\n    });\n}\nexports.setGlassType = setGlassType;\nfunction setPrelude(val) {\n    updateQRCodeAllotment(DrinkToDraw.Prelude, val);\n    DrinkToDraw.Prelude = val;\n    console.log(val);\n}\nexports.setPrelude = setPrelude;\nfunction setInstructions(val) {\n    updateQRCodeAllotment(DrinkToDraw.Instructions, val);\n    DrinkToDraw.Instructions = val;\n    console.log(val);\n}\nexports.setInstructions = setInstructions;\nfunction pushIngredient(globalId, ingredient) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const ai = {\n            id: globalId,\n            ingredient: ingredient,\n        };\n        AddedIngredients.push(ai);\n        DrinkToDraw.Ingredients.clear();\n        AddedIngredients.forEach(x => DrinkToDraw.Ingredients.push(x.ingredient));\n        BuilderDraw();\n    });\n}\nfunction editIngredient(globalId) {\n    // wat do.\n    // don't push again, find the ingredient and change values\n}\nfunction removeIngredient(gloabalId) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const remove = AddedIngredients.filter(x => x.id === gloabalId);\n        remove.forEach(x => AddedIngredients.remove(x));\n        DrinkToDraw.Ingredients.clear();\n        AddedIngredients.forEach(x => DrinkToDraw.Ingredients.push(x.ingredient));\n    });\n}\nexports.removeIngredient = removeIngredient;\n/* also functions as an init function when passed parameters */\nfunction BuilderDraw(glass, category) {\n    return __awaiter(this, void 0, void 0, function* () {\n        updateQRCodeAllotment('', '');\n        /* populate initial units */\n        if (units.any()) {\n            Globals_1.Globals.Drinks.map(x => x.Ingredients.map(y => y.Unit)).reduce((p, c) => {\n                // c is a list of units\n                c.forEach((z) => {\n                    p.contains(z) ? null : p.push(z);\n                });\n                return p;\n            }, units);\n        }\n        if (glass) {\n            DrinkToDraw.Glass = glass;\n        }\n        if (category) {\n            DrinkToDraw.Category = category;\n        }\n        SVGService_1.ResetSVGSpace();\n        const sdo = {\n            Drink: DrinkToDraw,\n            Optionals: [],\n            Substitutions: {},\n            Builder: true\n        };\n        DrinkDisplayService_1.DisplayDrink(sdo);\n    });\n}\nexports.BuilderDraw = BuilderDraw;\nfunction assignUnitPulldown(ingredientId, pulldown) {\n    pulldown.empty();\n    let path = null;\n    for (let i = 0; i < Globals_1.Globals.ingredients.length; i++) {\n        const tree = Globals_1.Globals.ingredients[i];\n        const res = ITree_1.NoSiblings(tree, { id: ingredientId, children: [] }, true);\n        if (res && res.id !== -1) {\n            path = res;\n            break;\n        }\n    }\n    if (!path) {\n        console.error('Failed to find any matching ingredient path for the supplied ingredient');\n        return null;\n    }\n    let highestIngredientType = null;\n    ITree_1.DFS(path, (n) => {\n        if (n.unitpreference) {\n            highestIngredientType = n.unitpreference;\n        }\n    });\n    let cat = Globals_1.Globals.UnitTypes.find(x => x.Id === highestIngredientType).Units;\n    cat = cat.sort((x, y) => { return x.OrderPreference <= y.OrderPreference ? 1 : 0; });\n    // refresh available units\n    /* populate units */\n    cat.forEach((x) => {\n        const opt = $('<option>');\n        opt.val(x.Id);\n        opt.text(x.Unit.Name);\n        pulldown.append(opt);\n    });\n    return cat[0].Unit;\n}\nfunction createIngredientPulldown(base, unitPulldown, ingredient) {\n    const id = `${base}_ingredient_select`;\n    const label = $('<label>').attr('for', id).text('Ingredient');\n    // create Ingredient Pulldown\n    const sel = $('<select>').attr('id', id);\n    // populate ingredient pulldown\n    for (const key in Globals_1.Globals.IngredientFlat) {\n        const ingredient = Globals_1.Globals.IngredientFlat[key];\n        const symbol = SVGService_1.getIngredientNodeSVGStyle(ingredient, Globals_1.Globals.ingredients);\n        if (symbol) { /* only symbolized ingredients */\n            const ingId = ingredient.id;\n            const ingName = ingredient.name;\n            const opt = $('<option>').attr('id', `${base}_ingredient_select_option_${ingId}`);\n            opt.val(ingId);\n            opt.text(ingName);\n            sel.append(opt);\n        }\n    }\n    // when option select changes, reset the unit pulldown\n    sel.on('change', () => {\n        const ingVal = parseInt(sel.val());\n        ingredient.Unit = assignUnitPulldown(ingVal, unitPulldown).Name;\n        const node = IngredientService_1.IngredientVal2IngredientNode(ingVal);\n        if (!node) {\n            return; // ERROR\n        }\n        ingredient.IngredientName = node.name;\n        ingredient.IngredientId = node.id;\n    });\n    label.append(sel);\n    return label;\n}\nfunction createUnitPulldown(base, ingredient) {\n    const id = `${base}_unit_select`;\n    const label = $('<label>').attr('for', id).text('Unit');\n    const sel = $('<select>').attr('id', id);\n    sel.on('change', () => {\n        const unitVal = parseInt(sel.val());\n        const u = UnitService_1.UnitVal2Unit(unitVal);\n        if (!u) {\n            return; // ERROR\n        }\n        ingredient.Unit = u.Name;\n    });\n    label.append(sel);\n    return [label, sel];\n}\nfunction createDisplayTextInput(base, ingredient) {\n    const id = `${base}_displaytext_input`;\n    const label = $('<label>').attr('for', id).text('Display Text:');\n    const inp = $('<input>').attr('type', 'text').attr('id', id);\n    inp.on('change', (x) => {\n        const text = x.target.value;\n        if (!text || text.length === 0) {\n            ingredient.DisplayText = undefined;\n        }\n        else {\n            ingredient.DisplayText = text;\n        }\n    });\n    label.append(inp);\n    return label;\n}\nfunction createQuantityTextInput(base, ingredient) {\n    const id = `${base}_quantity_input`;\n    const label = $('<label>').text('Quantity').attr('for', id);\n    const inp = $('<input>').attr('type', 'number').attr('step', '0.01').attr('id', id); // TODO we restrict users to numbers. No handfuls.\n    inp.val(1); // default 1\n    inp.on('change paste keyup', (x) => {\n        const quantity = x.target.value;\n        const float = parseFloat(quantity);\n        if (isNaN(float)) {\n            console.error(`attempted to parse float for builder quantity, but failed. Supplied value was invalid: ${quantity}`);\n            return;\n        }\n        ingredient.Quantity = String(float);\n    });\n    label.append(inp);\n    return label;\n}\nfunction createIsGarnishButton(base, ingredient) {\n    const id = `${base}_isgarnish_input`;\n    const label = $('<label>').text('Garnish?').attr('for', id);\n    const but = $('<input>').attr('id', id).attr('type', 'checkbox');\n    let isOn = false;\n    but.text('is garnish');\n    but.on('change', () => {\n        isOn = !isOn;\n        isOn ? but.attr('checked', 'true') : but.removeAttr('checked');\n        // todo store check value somewhere\n        ingredient.IsGarnish = isOn;\n    });\n    label.append(but);\n    return label;\n}\nfunction createAcceptButton(base, iid, ingredient) {\n    const id = `${base}_accept_button`;\n    const but = $('<button>').attr('id', id).addClass(['btn', 'btn-xs', 'btn-primary']).text('OK');\n    but.on('click', () => __awaiter(this, void 0, void 0, function* () {\n        yield pushIngredient(iid, ingredient);\n        $(`#addIngredient_${timesAdded}_li`).remove();\n    }));\n    return but;\n}\nfunction createDeleteButton(base, globalId) {\n    const id = `${base}_cancel_button`;\n    const but = $('<button>').attr('id', id).addClass(['btn', 'btn-xs', 'btn-danger']).text('X');\n    but.on('click', () => __awaiter(this, void 0, void 0, function* () {\n        $(`#${base}_li`).remove();\n        removeIngredient(globalId);\n        yield BuilderDraw();\n    }));\n    return but;\n}\nfunction createIngredientEditor(base, iid, ingredient) {\n    // the editing menu of the add ingredient.\n    // Not the same as the display menu of the ingredient.\n    const sp = $('<span>').addClass('editorGird').attr('id', `${base}_editor`);\n    const unitPulldown = createUnitPulldown(base, ingredient);\n    const ingPulldown = createIngredientPulldown(base, unitPulldown[1], ingredient);\n    const dtextInput = createDisplayTextInput(base, ingredient);\n    const qInput = createQuantityTextInput(base, ingredient);\n    const gbutton = createIsGarnishButton(base, ingredient);\n    const okButton = createAcceptButton(base, iid, ingredient);\n    const deleteButton = createDeleteButton(base, iid);\n    const buttonsSp = $('<span>').css('display', 'inline');\n    buttonsSp.append(okButton).append(deleteButton);\n    sp.append(ingPulldown);\n    sp.append(unitPulldown);\n    sp.append(dtextInput);\n    sp.append(qInput);\n    sp.append(gbutton);\n    sp.append(buttonsSp);\n    return sp;\n}\nfunction addIngredient() {\n    return __awaiter(this, void 0, void 0, function* () {\n        timesAdded += 1;\n        const ingToEdit = {\n            DisplayOrder: 0,\n            DisplayText: undefined,\n            IngredientId: -1,\n            IngredientName: null,\n            Quantity: '1',\n            Unit: 'oz',\n            IsGarnish: false,\n        };\n        const baseId = `addIngredient_${timesAdded}`;\n        const editor = createIngredientEditor(baseId, timesAdded, ingToEdit);\n        const ul = $('#drinkIngredientsEdit');\n        const li = $('<li>').attr('id', `${baseId}_li`);\n        li.append(editor);\n        ul.append(li);\n    });\n}\nexports.addIngredient = addIngredient;\nconst Keys = {\n    NameKey: 'name',\n    CatKey: 'category',\n    GlassKey: 'glass',\n    PreludeKey: 'prelude',\n    InstructionsKey: 'instructions',\n    IngredientKey: 'ingredient'\n};\nfunction CreateDrink() {\n    const params = new URLSearchParams();\n    params.set(Keys.NameKey, DrinkToDraw.Name);\n    params.set(Keys.CatKey, DrinkToDraw.Category);\n    params.set(Keys.GlassKey, DrinkToDraw.Glass);\n    params.set(Keys.PreludeKey, DrinkToDraw.Prelude);\n    params.set(Keys.InstructionsKey, DrinkToDraw.Instructions);\n    for (let i = 0; i < DrinkToDraw.Ingredients.length; i++) {\n        const ing = DrinkToDraw.Ingredients[i];\n        params.append(Keys.IngredientKey, IngredientService_1.EncodeIngredientForUrl(ing));\n    }\n    const hash = params.toString();\n    const url = `${window.location.origin}/custom.html?${hash}`;\n    if (url.length > QRCodeService_1.QRDataLimit_AlphaNumeric) {\n        console.error('Supplied drink is too big to make a QR code for.');\n    }\n    window.location.assign(url); // Go!\n}\nexports.CreateDrink = CreateDrink;\nfunction DecodeDrink(urlstr) {\n    const url = new URL(urlstr);\n    console.log(url);\n    const params = new URLSearchParams(url.search);\n    const name = params.get(Keys.NameKey);\n    const category = params.get(Keys.CatKey);\n    const glass = params.get(Keys.GlassKey);\n    const prelude = params.get(Keys.PreludeKey);\n    const instructions = params.get(Keys.InstructionsKey);\n    const ingredients_raw = params.getAll(Keys.IngredientKey);\n    if ((!name || !name.any()) || (!category || !category.any()) || (!glass || !glass.any()) || (!ingredients_raw || !ingredients_raw.any())) { // todo add checks against prelude and instructions?\n        console.error('failed to decode drink uri, url was invalid');\n        return;\n    }\n    const ingredients = [];\n    for (let i = 0; i < ingredients_raw.length; i++) {\n        const raw = ingredients_raw[i];\n        const ing = IngredientService_1.DecodeIngredientFromUrl(raw);\n        if (!ing) {\n            console.error('failed to decode ingredient, raw string was invalid');\n            return;\n        }\n        ingredients.push(ing);\n    }\n    const drink = {\n        DrinkId: -1,\n        Category: category,\n        Glass: glass,\n        Instructions: instructions,\n        Prelude: prelude,\n        Name: name,\n        Ingredients: ingredients\n    };\n    return drink;\n}\nexports.DecodeDrink = DecodeDrink;\n"
        },
        {
          "id": 12,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/StorageService.ts",
          "name": "./services/StorageService.ts",
          "index": 46,
          "index2": 44,
          "size": 1108,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "issuer": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
          "issuerId": 49,
          "issuerName": "./main.ts",
          "issuerPath": [
            {
              "id": 49,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
              "name": "./main.ts",
              "profile": {
                "factory": 58,
                "building": 1843
              }
            }
          ],
          "profile": {
            "factory": 83,
            "building": 1193,
            "dependencies": 637
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 18,
              "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DisplayService.ts",
              "module": "./services/DisplayService.ts",
              "moduleName": "./services/DisplayService.ts",
              "type": "cjs require",
              "userRequest": "./StorageService",
              "loc": "20:25-52"
            },
            {
              "moduleId": 49,
              "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
              "module": "./main.ts",
              "moduleName": "./main.ts",
              "type": "cjs require",
              "userRequest": "./services/StorageService",
              "loc": "26:25-61"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 1,
          "source": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst PantryKey = 'pantry';\nfunction StorageGetPantryItems() {\n    const x = localStorage.getItem(PantryKey);\n    if (!x || x.length === 0) {\n        return [];\n    }\n    const y = JSON.parse(x);\n    return y;\n}\nexports.StorageGetPantryItems = StorageGetPantryItems;\nfunction StorageAddPantryItem(item) {\n    const iarr = StorageGetPantryItems();\n    iarr.push(item);\n    const x = JSON.stringify(iarr);\n    localStorage.setItem(PantryKey, x);\n}\nexports.StorageAddPantryItem = StorageAddPantryItem;\nfunction StorageRemovePantryItem(item) {\n    const iarr = StorageGetPantryItems();\n    for (let i = 0; i < iarr.length; i++) {\n        if (iarr[i].id === item.id) {\n            // if found, kill it. break.\n            iarr.splice(i, 1);\n            break;\n        }\n    }\n    const x = JSON.stringify(iarr);\n    localStorage.setItem(PantryKey, x);\n}\nexports.StorageRemovePantryItem = StorageRemovePantryItem;\nfunction StorageClearPantry() {\n    localStorage.removeItem(PantryKey);\n}\nexports.StorageClearPantry = StorageClearPantry;\n"
        },
        {
          "id": 13,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DrinkService.ts",
          "name": "./services/DrinkService.ts",
          "index": 43,
          "index2": 43,
          "size": 11981,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "issuer": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
          "issuerId": 49,
          "issuerName": "./main.ts",
          "issuerPath": [
            {
              "id": 49,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
              "name": "./main.ts",
              "profile": {
                "factory": 58,
                "building": 1843
              }
            }
          ],
          "profile": {
            "factory": 83,
            "building": 1193,
            "dependencies": 637
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 18,
              "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DisplayService.ts",
              "module": "./services/DisplayService.ts",
              "moduleName": "./services/DisplayService.ts",
              "type": "cjs require",
              "userRequest": "./DrinkService",
              "loc": "16:23-48"
            },
            {
              "moduleId": 49,
              "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
              "module": "./main.ts",
              "moduleName": "./main.ts",
              "type": "cjs require",
              "userRequest": "./services/DrinkService",
              "loc": "18:23-57"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 1,
          "source": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst SearchObject_1 = require(\"../models/SearchObject\");\nconst SubstituteService_1 = require(\"./SubstituteService\");\nconst ITree_1 = require(\"../models/ITree\");\nconst NavigationService_1 = require(\"./NavigationService\");\n/*\n    Because the pantry may be filled with supersets AND subsets of a given ingredient branch,\n    we want to return the elements closest to the available supersets.\n\n    Returns an array of only the biggest supersets from the pantry.\n    e.g., if [bourbon, elijah-craig-12-year, whiskey, aveze, tawny-port, wine] -> [whiskey, aveze, wine]\n*/\nfunction getPantrySupersets(available) {\n    const eliminated = []; // Set of items that have been eliminated\n    const final = []; // Set of final items\n    function eliminate(item) {\n        if (eliminated.filter(x => x.id === item.id).length === 0) {\n            eliminated.push(item);\n        }\n    }\n    function finalize(item) {\n        if (final.filter(x => x.id === item.id).length === 0) {\n            final.push(item);\n        }\n    }\n    /* for each of the available elements, we crawl down each other element until we find our element. We ignore the self index */\n    for (let i = 0; i < available.length; i++) {\n        const car = available[i];\n        /* check car is in eliminated, or in final */\n        if (eliminated.contains(car) || final.contains(car)) {\n            continue; /* this item is either eliminated or finally counted. Skip it */\n        }\n        /* This item is neither final nor eliminated, so we actually have to do work */\n        const cdr = available.filter(x => x.id !== car.id); /* a list of only not-checker elements */\n        /* for each other item in cdr, DFS it */\n        const foundAtDepth = []; // tuples of(depth, super);\n        for (let k = 0; k < cdr.length; k++) {\n            const caar = cdr[k];\n            ITree_1.DFS(caar, (n, d) => {\n                if (n.name === car.name) {\n                    const fad = { depth: d, item: caar };\n                    foundAtDepth.push(fad);\n                }\n            });\n        }\n        /* no further subsets were found, so we can skip everything and push this item to Final */\n        if (foundAtDepth.length === 0) {\n            final.push(car);\n        }\n        else {\n            /* find the item with the biggest depth. This is our Final */\n            const depthMax = foundAtDepth.reduce((p, c) => {\n                if (!p || p.depth < c.depth) {\n                    return c;\n                }\n                return p;\n            });\n            /* remove depthMax from foundatdepth */\n            foundAtDepth.remove(depthMax);\n            // foundAtDepth.splice(foundAtDepth.indexOf(depthMax), 1);\n            /* Eliminate remaining FoundAts */\n            foundAtDepth.forEach(x => eliminate(x.item));\n            /* push DepthMax to Final */\n            finalize(depthMax.item);\n        }\n    }\n    return final;\n}\nfunction flattenInventoryTree(pantry) {\n    const reducedInventory = getPantrySupersets(pantry);\n    const flattenedInventory = [];\n    reducedInventory.forEach(x => {\n        ITree_1.DFS(x, (n) => {\n            flattenedInventory.push(n);\n        });\n    });\n    return flattenedInventory;\n}\nfunction collapseZeros(pantry, universe) {\n    const inventory = [];\n    for (let i = 0; i < pantry.length; i++) {\n        const ing = pantry[i];\n        if (ing.distance === 0 && ing.parent !== null) {\n            const p = universe[ing.parent];\n            inventory.push(p);\n        }\n        inventory.push(ing);\n    }\n    return inventory;\n}\n/* Returns whether the given ingredient is optional, given our criteria */\nfunction ingredientRequireChecker(ingredient) {\n    /* Check Floats */\n    if (ingredient.Unit === 'top' || ingredient.Unit === 'float') {\n        return !SearchObject_1.SearchObject.RequireFloat; /* It is a Float and are requiring floats, it is NOT OPTIONAL */\n    }\n    /* Check Splashes */\n    if (ingredient.Unit === 'splash') {\n        return !SearchObject_1.SearchObject.RequireSplash; /* It is a Splash and we are requiring splashes, it is NOT OPTIONAL */\n    }\n    /* Check Rinses */\n    if (ingredient.Unit === 'rinse') {\n        return !SearchObject_1.SearchObject.RequireRinse; /* It is a rinse and we are requiring rinse, it is NOT OPTIONAL */\n    }\n    /* Check Spray */\n    if (ingredient.Unit === 'spray') {\n        return !SearchObject_1.SearchObject.RequireSpray; /* It is a Spray and we are requiring sprays, it is NOT OPTIONAL */\n    }\n    /* Check Ice */\n    if (ingredient.Unit === 'cracked' || ingredient.Unit === 'half' || ingredient.Unit === 'large cube' || ingredient.Unit === 'regular cube' || ingredient.Unit === 'small cube') {\n        return !SearchObject_1.SearchObject.RequireCube; /* It is an ice thing are requiring ice-things, it is NOT OPTIONAL */\n    }\n    /* Check Garnishes */\n    if (ingredient.DisplayText.toLocaleLowerCase().contains('garnish')) {\n        return !SearchObject_1.SearchObject.RequireGarnish; /* It is a garnish and we are requiring garnishes, it is NOT OPTIONAL */\n    }\n    /* Check Bitters */\n    if (ingredient.Unit === 'dash') {\n        return !SearchObject_1.SearchObject.RequireBitters; /* It is a bitters, and we require bitters so it is NOT OPTIONAL */\n    }\n    /* Check Pinches */\n    if (ingredient.Unit === 'pinch') {\n        return !SearchObject_1.SearchObject.RequirePinch; /* It is a pinch, and we require pinches so it is NOT OPTIONAL */\n    }\n    return false; /* Unless specifically exempted by the above rules, all ingredients are required by default. */\n}\nfunction findSubstitution(ing, pantry, universe) {\n    // function checkPantryCache(ing: IIngredientNode, pantry: Array<IIngredientNode>): ReplacementsObj {\n    //     const repls: ReplacementsObj = { any: false, subs: null };\n    //     if (ing.id in SearchObject.SubstitutionMap) {\n    //         /* check if any of the available mappings exist in users pantry */\n    //         const subs: any = SearchObject.SubstitutionMap[ing.id];\n    //         for (let i = 0; i < subs.length; i++) {\n    //             const subi = subs[i];\n    //             if (pantry.contains(subi)) {\n    //                 repls.any = true;\n    //                 if (IsUndefined(repls[i])) {\n    //                     repls[i] = [subi];\n    //                 } else {\n    //                     repls[i].push(subi);\n    //                 }\n    //             }\n    //         }\n    //     }\n    //     return repls;\n    // }\n    // function updateSubCache(repls: any): void {\n    //     if (repls.any) {\n    //         for (let key in repls.subs) {\n    //             if (IsUndefined(SearchObject.SubstitutionMap[key])) {\n    //                 SearchObject.SubstitutionMap[key] = repls[key];\n    //             } else {\n    //                 const sosm = SearchObject.SubstitutionMap[key];\n    //                 for (let distkey in sosm) {\n    //                     if (IsUndefined(repls[key][distkey])) {\n    //                         repls[key][distkey] = sosm[distkey];\n    //                     } else {\n    //                         const rplm = repls[key][distkey];\n    //                         for (let i = 0; i < rplm.length; i++) {\n    //                             if (!sosm[distkey].contains(rplm[i])) {\n    //                                 sosm[distkey].push(rplm[i]);\n    //                             }\n    //                         }\n    //                     }\n    //                 }\n    //             }\n    //         }\n    //     }\n    // }\n    /* first we check that this ingredient doesn't already have a pre-computed substitution mapping */\n    // const repls = checkPantryCache(ing, pantry);\n    // if (!Any(repls)) {\n    //     return repls;\n    // }\n    /* We didn't have any cached substitution maps, so we'll scan for some. */\n    const availableSubs = SubstituteService_1.fs2(ing, pantry, universe);\n    /* update substitution cache */\n    // updateSubCache(availableSubs);\n    return availableSubs;\n}\n/* Returns whether a given drink matches our search criteria */\nfunction evaluateDrink(drink, pantry, universe) {\n    /* Reduce the pantry to only supplied supersets */\n    pantry = collapseZeros(pantry, universe);\n    pantry = flattenInventoryTree(pantry);\n    const pantryIds = pantry.map(x => x.id);\n    const evaluationObject = {\n        is_exact: false,\n        name: drink.Name,\n        id: drink.DrinkId,\n        substitutions: {},\n        optionals: [],\n        drink: drink,\n        missing: [],\n        is_valid: true,\n        anchor: '',\n    };\n    for (let i = 0; i < drink.Ingredients.length; i++) {\n        const ing = drink.Ingredients[i];\n        const optional = ingredientRequireChecker(ing);\n        if (!optional) {\n            /* we need this ingredient according to our criteria, so check if it is in our panrty */\n            const preferenceInPanrty = pantryIds.contains(ing.IngredientId);\n            const baseInPantry = pantryIds.contains(ing.PreferenceFor);\n            const inPantry = preferenceInPanrty || baseInPantry;\n            if (!inPantry) {\n                if (!SearchObject_1.SearchObject.ConsiderSubstitutions) {\n                    evaluationObject.is_valid = false;\n                    evaluationObject.missing.push(ing);\n                    // return evaluationObject;\n                }\n                else {\n                    /* We are considering substitutions, so we will attempt to find an available sub from our pantry */\n                    const sub = findSubstitution(ing, pantry, universe);\n                    if (sub.any) {\n                        evaluationObject.substitutions[ing.IngredientId] = sub.subs; /* Substitution was available, we add it to out mapping */\n                        // evaluationObject.substitutions[ing.IngredientId] = sub.IngredientId; /* Substitution was available, we add it to out mapping */\n                    }\n                    else {\n                        /* No substitution could be found for this mandatory object, so we fail early */\n                        evaluationObject.is_valid = false;\n                        evaluationObject.missing.push(ing);\n                        // return evaluationObject;\n                    }\n                }\n            }\n        }\n        else {\n            evaluationObject.optionals.push(ing); /* We make note of items that are optional so we can inform the user when they request the drink recipe */\n        }\n    }\n    evaluationObject.is_exact = Object.keys(evaluationObject.substitutions).length === 0;\n    evaluationObject.anchor = NavigationService_1.makeNavForDrink(evaluationObject);\n    return evaluationObject;\n}\nfunction calculateDrinks(pantry, drinkUniverse, ingredientUniverse) {\n    const resultObj = {\n        exact: [],\n        substitutes: [],\n        invalid: [],\n    };\n    drinkUniverse.forEach((x) => {\n        const evalobj = evaluateDrink(x, pantry, ingredientUniverse);\n        if (evalobj.is_valid) {\n            if (evalobj.is_exact) {\n                resultObj.exact.push(evalobj);\n            }\n            else {\n                resultObj.substitutes.push(evalobj);\n            }\n        }\n        else {\n            resultObj.invalid.push(evalobj);\n        }\n    });\n    return resultObj;\n}\nexports.calculateDrinks = calculateDrinks;\nfunction getDrinksForIngredient(ingredient, ingredientUniverse, drinkUniverse, subtypes = true) {\n    const ids = [];\n    if (subtypes) {\n        const ing = ingredientUniverse[ingredient.id];\n        ITree_1.DFS(ing, (n) => {\n            ids.push(n.id);\n        });\n    }\n    else {\n        ids.push(ingredient.id);\n    }\n    const ret = drinkUniverse.filter(x => x.Ingredients.any(y => ids.contains(y.IngredientId)));\n    return ret;\n}\nexports.getDrinksForIngredient = getDrinksForIngredient;\nfunction constructDrinks(jdrinks) {\n    const ret = jdrinks;\n    return ret;\n}\nexports.constructDrinks = constructDrinks;\n"
        },
        {
          "id": 14,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/GlassService.ts",
          "name": "./services/GlassService.ts",
          "index": 40,
          "index2": 36,
          "size": 589,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "issuer": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
          "issuerId": 49,
          "issuerName": "./main.ts",
          "issuerPath": [
            {
              "id": 49,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
              "name": "./main.ts",
              "profile": {
                "factory": 58,
                "building": 1843
              }
            }
          ],
          "profile": {
            "factory": 83,
            "building": 1193,
            "dependencies": 637
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 5,
              "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/SVGService.ts",
              "module": "./services/SVGService.ts",
              "moduleName": "./services/SVGService.ts",
              "type": "cjs require",
              "userRequest": "./GlassService",
              "loc": "14:23-48"
            },
            {
              "moduleId": 49,
              "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
              "module": "./main.ts",
              "moduleName": "./main.ts",
              "type": "cjs require",
              "userRequest": "./services/GlassService",
              "loc": "19:23-57"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 1,
          "source": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst IGlass_1 = require(\"../models/IGlass\");\nfunction constructGlasses(jdrinks) {\n    const ret = jdrinks.map((x) => x.Glass).filter((v, i, s) => { return s.indexOf(v) === i; }).sort();\n    return ret;\n}\nexports.constructGlasses = constructGlasses;\nfunction GlassString2Glass(gstring) {\n    const gs = IGlass_1.Glasses.filter(x => x.Name.toLocaleLowerCase() === gstring.toLocaleLowerCase());\n    if (gs.length > 0) {\n        return gs[0];\n    }\n    return null;\n}\nexports.GlassString2Glass = GlassString2Glass;\n"
        },
        {
          "id": 15,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/models/SelectedDrinkObject.ts",
          "name": "./models/SelectedDrinkObject.ts",
          "index": 34,
          "index2": 30,
          "size": 240,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "issuer": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
          "issuerId": 49,
          "issuerName": "./main.ts",
          "issuerPath": [
            {
              "id": 49,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
              "name": "./main.ts",
              "profile": {
                "factory": 58,
                "building": 1843
              }
            }
          ],
          "profile": {
            "factory": 83,
            "building": 1193,
            "dependencies": 637
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 8,
              "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DrinkDisplayService.ts",
              "module": "./services/DrinkDisplayService.ts",
              "moduleName": "./services/DrinkDisplayService.ts",
              "type": "cjs require",
              "userRequest": "../models/SelectedDrinkObject",
              "loc": "5:30-70"
            },
            {
              "moduleId": 49,
              "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
              "module": "./main.ts",
              "moduleName": "./main.ts",
              "type": "cjs require",
              "userRequest": "./models/SelectedDrinkObject",
              "loc": "24:30-69"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 1,
          "source": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst SelectedDrinkObject = {\n    Drink: null,\n    Optionals: [],\n    Substitutions: {},\n    Builder: false,\n};\nexports.SelectedDrinkObject = SelectedDrinkObject;\n"
        },
        {
          "id": 16,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/utils/number.js",
          "name": "../node_modules/mathjs/lib/utils/number.js",
          "index": 18,
          "index2": 10,
          "size": 16956,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "issuer": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/utils/string.js",
          "issuerId": 28,
          "issuerName": "../node_modules/mathjs/lib/utils/string.js",
          "issuerPath": [
            {
              "id": 49,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
              "name": "./main.ts",
              "profile": {
                "factory": 58,
                "building": 1843
              }
            },
            {
              "id": 18,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DisplayService.ts",
              "name": "./services/DisplayService.ts",
              "profile": {
                "factory": 83,
                "building": 1193,
                "dependencies": 637
              }
            },
            {
              "id": 8,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DrinkDisplayService.ts",
              "name": "./services/DrinkDisplayService.ts",
              "profile": {
                "factory": 735,
                "building": 523,
                "dependencies": 1
              }
            },
            {
              "id": 46,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/MathService.ts",
              "name": "./services/MathService.ts",
              "profile": {
                "factory": 394,
                "building": 17
              }
            },
            {
              "id": 29,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/function/string/format.js",
              "name": "../node_modules/mathjs/lib/function/string/format.js",
              "profile": {
                "factory": 54,
                "building": 107
              }
            },
            {
              "id": 28,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/utils/string.js",
              "name": "../node_modules/mathjs/lib/utils/string.js",
              "profile": {
                "factory": 7,
                "building": 13
              }
            }
          ],
          "profile": {
            "factory": 32,
            "building": 6,
            "dependencies": 1
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 28,
              "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/utils/string.js",
              "module": "../node_modules/mathjs/lib/utils/string.js",
              "moduleName": "../node_modules/mathjs/lib/utils/string.js",
              "type": "cjs require",
              "userRequest": "./number",
              "loc": "5:19-38"
            },
            {
              "moduleId": 42,
              "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/core/typed.js",
              "module": "../node_modules/mathjs/lib/core/typed.js",
              "moduleName": "../node_modules/mathjs/lib/core/typed.js",
              "type": "cjs require",
              "userRequest": "./../utils/number",
              "loc": "7:13-41"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 6,
          "source": "'use strict';\n\nvar objectUtils = require('./object');\n/**\n * @typedef {{sign: '+' | '-' | '', coefficients: number[], exponent: number}} SplitValue\n */\n\n/**\n * Test whether value is a number\n * @param {*} value\n * @return {boolean} isNumber\n */\n\n\nexports.isNumber = function (value) {\n  return typeof value === 'number';\n};\n/**\n * Check if a number is integer\n * @param {number | boolean} value\n * @return {boolean} isInteger\n */\n\n\nexports.isInteger = function (value) {\n  if (typeof value === 'boolean') {\n    return true;\n  }\n\n  return isFinite(value) ? value === Math.round(value) : false; // Note: we use ==, not ===, as we can have Booleans as well\n};\n/**\n * Calculate the sign of a number\n * @param {number} x\n * @returns {*}\n */\n\n\nexports.sign = Math.sign || function (x) {\n  if (x > 0) {\n    return 1;\n  } else if (x < 0) {\n    return -1;\n  } else {\n    return 0;\n  }\n};\n/**\n * Convert a number to a formatted string representation.\n *\n * Syntax:\n *\n *    format(value)\n *    format(value, options)\n *    format(value, precision)\n *    format(value, fn)\n *\n * Where:\n *\n *    {number} value   The value to be formatted\n *    {Object} options An object with formatting options. Available options:\n *                     {string} notation\n *                         Number notation. Choose from:\n *                         'fixed'          Always use regular number notation.\n *                                          For example '123.40' and '14000000'\n *                         'exponential'    Always use exponential notation.\n *                                          For example '1.234e+2' and '1.4e+7'\n *                         'engineering'    Always use engineering notation.\n *                                          For example '123.4e+0' and '14.0e+6'\n *                         'auto' (default) Regular number notation for numbers\n *                                          having an absolute value between\n *                                          `lowerExp` and `upperExp` bounds, and\n *                                          uses exponential notation elsewhere.\n *                                          Lower bound is included, upper bound\n *                                          is excluded.\n *                                          For example '123.4' and '1.4e7'.\n *                     {number} precision   A number between 0 and 16 to round\n *                                          the digits of the number.\n *                                          In case of notations 'exponential',\n *                                          'engineering', and 'auto',\n *                                          `precision` defines the total\n *                                          number of significant digits returned.\n *                                          In case of notation 'fixed',\n *                                          `precision` defines the number of\n *                                          significant digits after the decimal\n *                                          point.\n *                                          `precision` is undefined by default,\n *                                          not rounding any digits.\n *                     {number} lowerExp    Exponent determining the lower boundary\n *                                          for formatting a value with an exponent\n *                                          when `notation='auto`.\n *                                          Default value is `-3`.\n *                     {number} upperExp    Exponent determining the upper boundary\n *                                          for formatting a value with an exponent\n *                                          when `notation='auto`.\n *                                          Default value is `5`.\n *    {Function} fn    A custom formatting function. Can be used to override the\n *                     built-in notations. Function `fn` is called with `value` as\n *                     parameter and must return a string. Is useful for example to\n *                     format all values inside a matrix in a particular way.\n *\n * Examples:\n *\n *    format(6.4)                                        // '6.4'\n *    format(1240000)                                    // '1.24e6'\n *    format(1/3)                                        // '0.3333333333333333'\n *    format(1/3, 3)                                     // '0.333'\n *    format(21385, 2)                                   // '21000'\n *    format(12.071, {notation: 'fixed'})                // '12'\n *    format(2.3,    {notation: 'fixed', precision: 2})  // '2.30'\n *    format(52.8,   {notation: 'exponential'})          // '5.28e+1'\n *    format(12345678, {notation: 'engineering'})        // '12.345678e+6'\n *\n * @param {number} value\n * @param {Object | Function | number} [options]\n * @return {string} str The formatted value\n */\n\n\nexports.format = function (value, options) {\n  if (typeof options === 'function') {\n    // handle format(value, fn)\n    return options(value);\n  } // handle special cases\n\n\n  if (value === Infinity) {\n    return 'Infinity';\n  } else if (value === -Infinity) {\n    return '-Infinity';\n  } else if (isNaN(value)) {\n    return 'NaN';\n  } // default values for options\n\n\n  var notation = 'auto';\n  var precision;\n\n  if (options) {\n    // determine notation from options\n    if (options.notation) {\n      notation = options.notation;\n    } // determine precision from options\n\n\n    if (exports.isNumber(options)) {\n      precision = options;\n    } else if (exports.isNumber(options.precision)) {\n      precision = options.precision;\n    }\n  } // handle the various notations\n\n\n  switch (notation) {\n    case 'fixed':\n      return exports.toFixed(value, precision);\n\n    case 'exponential':\n      return exports.toExponential(value, precision);\n\n    case 'engineering':\n      return exports.toEngineering(value, precision);\n\n    case 'auto':\n      // TODO: clean up some day. Deprecated since: 2018-01-24\n      // @deprecated upper and lower are replaced with upperExp and lowerExp since v4.0.0\n      if (options && options.exponential && (options.exponential.lower !== undefined || options.exponential.upper !== undefined)) {\n        var fixedOptions = objectUtils.map(options, function (x) {\n          return x;\n        });\n        fixedOptions.exponential = undefined;\n\n        if (options.exponential.lower !== undefined) {\n          fixedOptions.lowerExp = Math.round(Math.log(options.exponential.lower) / Math.LN10);\n        }\n\n        if (options.exponential.upper !== undefined) {\n          fixedOptions.upperExp = Math.round(Math.log(options.exponential.upper) / Math.LN10);\n        }\n\n        console.warn('Deprecation warning: Formatting options exponential.lower and exponential.upper ' + '(minimum and maximum value) ' + 'are replaced with exponential.lowerExp and exponential.upperExp ' + '(minimum and maximum exponent) since version 4.0.0. ' + 'Replace ' + JSON.stringify(options) + ' with ' + JSON.stringify(fixedOptions));\n        return exports.toPrecision(value, precision, fixedOptions);\n      }\n\n      return exports.toPrecision(value, precision, options && options) // remove trailing zeros after the decimal point\n      .replace(/((\\.\\d*?)(0+))($|e)/, function () {\n        var digits = arguments[2];\n        var e = arguments[4];\n        return digits !== '.' ? digits + e : e;\n      });\n\n    default:\n      throw new Error('Unknown notation \"' + notation + '\". ' + 'Choose \"auto\", \"exponential\", or \"fixed\".');\n  }\n};\n/**\n * Split a number into sign, coefficients, and exponent\n * @param {number | string} value\n * @return {SplitValue}\n *              Returns an object containing sign, coefficients, and exponent\n */\n\n\nexports.splitNumber = function (value) {\n  // parse the input value\n  var match = String(value).toLowerCase().match(/^0*?(-?)(\\d+\\.?\\d*)(e([+-]?\\d+))?$/);\n\n  if (!match) {\n    throw new SyntaxError('Invalid number ' + value);\n  }\n\n  var sign = match[1];\n  var digits = match[2];\n  var exponent = parseFloat(match[4] || '0');\n  var dot = digits.indexOf('.');\n  exponent += dot !== -1 ? dot - 1 : digits.length - 1;\n  var coefficients = digits.replace('.', '') // remove the dot (must be removed before removing leading zeros)\n  .replace(/^0*/, function (zeros) {\n    // remove leading zeros, add their count to the exponent\n    exponent -= zeros.length;\n    return '';\n  }).replace(/0*$/, '') // remove trailing zeros\n  .split('').map(function (d) {\n    return parseInt(d);\n  });\n\n  if (coefficients.length === 0) {\n    coefficients.push(0);\n    exponent++;\n  }\n\n  return {\n    sign: sign,\n    coefficients: coefficients,\n    exponent: exponent\n  };\n};\n/**\n * Format a number in engineering notation. Like '1.23e+6', '2.3e+0', '3.500e-3'\n * @param {number | string} value\n * @param {number} [precision]        Optional number of significant figures to return.\n */\n\n\nexports.toEngineering = function (value, precision) {\n  if (isNaN(value) || !isFinite(value)) {\n    return String(value);\n  }\n\n  var rounded = exports.roundDigits(exports.splitNumber(value), precision);\n  var e = rounded.exponent;\n  var c = rounded.coefficients; // find nearest lower multiple of 3 for exponent\n\n  var newExp = e % 3 === 0 ? e : e < 0 ? e - 3 - e % 3 : e - e % 3;\n\n  if (exports.isNumber(precision)) {\n    // add zeroes to give correct sig figs\n    if (precision > c.length) c = c.concat(zeros(precision - c.length));\n  } else {\n    // concatenate coefficients with necessary zeros\n    var significandsDiff = e >= 0 ? e : Math.abs(newExp); // add zeros if necessary (for ex: 1e+8)\n\n    if (c.length - 1 < significandsDiff) c = c.concat(zeros(significandsDiff - (c.length - 1)));\n  } // find difference in exponents\n\n\n  var expDiff = Math.abs(e - newExp);\n  var decimalIdx = 1; // push decimal index over by expDiff times\n\n  while (--expDiff >= 0) {\n    decimalIdx++;\n  } // if all coefficient values are zero after the decimal point and precision is unset, don't add a decimal value.\n  // otherwise concat with the rest of the coefficients\n\n\n  var decimals = c.slice(decimalIdx).join('');\n  var decimalVal = exports.isNumber(precision) && decimals.length || decimals.match(/[1-9]/) ? '.' + decimals : '';\n  var str = c.slice(0, decimalIdx).join('') + decimalVal + 'e' + (e >= 0 ? '+' : '') + newExp.toString();\n  return rounded.sign + str;\n};\n/**\n * Format a number with fixed notation.\n * @param {number | string} value\n * @param {number} [precision=undefined]  Optional number of decimals after the\n *                                        decimal point. null by default.\n */\n\n\nexports.toFixed = function (value, precision) {\n  if (isNaN(value) || !isFinite(value)) {\n    return String(value);\n  }\n\n  var splitValue = exports.splitNumber(value);\n  var rounded = typeof precision === 'number' ? exports.roundDigits(splitValue, splitValue.exponent + 1 + precision) : splitValue;\n  var c = rounded.coefficients;\n  var p = rounded.exponent + 1; // exponent may have changed\n  // append zeros if needed\n\n  var pp = p + (precision || 0);\n\n  if (c.length < pp) {\n    c = c.concat(zeros(pp - c.length));\n  } // prepend zeros if needed\n\n\n  if (p < 0) {\n    c = zeros(-p + 1).concat(c);\n    p = 1;\n  } // insert a dot if needed\n\n\n  if (p < c.length) {\n    c.splice(p, 0, p === 0 ? '0.' : '.');\n  }\n\n  return rounded.sign + c.join('');\n};\n/**\n * Format a number in exponential notation. Like '1.23e+5', '2.3e+0', '3.500e-3'\n * @param {number | string} value\n * @param {number} [precision]  Number of digits in formatted output.\n *                              If not provided, the maximum available digits\n *                              is used.\n */\n\n\nexports.toExponential = function (value, precision) {\n  if (isNaN(value) || !isFinite(value)) {\n    return String(value);\n  } // round if needed, else create a clone\n\n\n  var split = exports.splitNumber(value);\n  var rounded = precision ? exports.roundDigits(split, precision) : split;\n  var c = rounded.coefficients;\n  var e = rounded.exponent; // append zeros if needed\n\n  if (c.length < precision) {\n    c = c.concat(zeros(precision - c.length));\n  } // format as `C.CCCe+EEE` or `C.CCCe-EEE`\n\n\n  var first = c.shift();\n  return rounded.sign + first + (c.length > 0 ? '.' + c.join('') : '') + 'e' + (e >= 0 ? '+' : '') + e;\n};\n/**\n * Format a number with a certain precision\n * @param {number | string} value\n * @param {number} [precision=undefined] Optional number of digits.\n * @param {{lowerExp: number | undefined, upperExp: number | undefined}} [options]\n *                                       By default:\n *                                         lowerExp = -3 (incl)\n *                                         upper = +5 (excl)\n * @return {string}\n */\n\n\nexports.toPrecision = function (value, precision, options) {\n  if (isNaN(value) || !isFinite(value)) {\n    return String(value);\n  } // determine lower and upper bound for exponential notation.\n\n\n  var lowerExp = options && options.lowerExp !== undefined ? options.lowerExp : -3;\n  var upperExp = options && options.upperExp !== undefined ? options.upperExp : 5;\n  var split = exports.splitNumber(value);\n\n  if (split.exponent < lowerExp || split.exponent >= upperExp) {\n    // exponential notation\n    return exports.toExponential(value, precision);\n  } else {\n    var rounded = precision ? exports.roundDigits(split, precision) : split;\n    var c = rounded.coefficients;\n    var e = rounded.exponent; // append trailing zeros\n\n    if (c.length < precision) {\n      c = c.concat(zeros(precision - c.length));\n    } // append trailing zeros\n    // TODO: simplify the next statement\n\n\n    c = c.concat(zeros(e - c.length + 1 + (c.length < precision ? precision - c.length : 0))); // prepend zeros\n\n    c = zeros(-e).concat(c);\n    var dot = e > 0 ? e : 0;\n\n    if (dot < c.length - 1) {\n      c.splice(dot + 1, 0, '.');\n    }\n\n    return rounded.sign + c.join('');\n  }\n};\n/**\n * Round the number of digits of a number *\n * @param {SplitValue} split       A value split with .splitNumber(value)\n * @param {number} precision  A positive integer\n * @return {SplitValue}\n *              Returns an object containing sign, coefficients, and exponent\n *              with rounded digits\n */\n\n\nexports.roundDigits = function (split, precision) {\n  // create a clone\n  var rounded = {\n    sign: split.sign,\n    coefficients: split.coefficients,\n    exponent: split.exponent\n  };\n  var c = rounded.coefficients; // prepend zeros if needed\n\n  while (precision <= 0) {\n    c.unshift(0);\n    rounded.exponent++;\n    precision++;\n  }\n\n  if (c.length > precision) {\n    var removed = c.splice(precision, c.length - precision);\n\n    if (removed[0] >= 5) {\n      var i = precision - 1;\n      c[i]++;\n\n      while (c[i] === 10) {\n        c.pop();\n\n        if (i === 0) {\n          c.unshift(0);\n          rounded.exponent++;\n          i++;\n        }\n\n        i--;\n        c[i]++;\n      }\n    }\n  }\n\n  return rounded;\n};\n/**\n * Create an array filled with zeros.\n * @param {number} length\n * @return {Array}\n */\n\n\nfunction zeros(length) {\n  var arr = [];\n\n  for (var i = 0; i < length; i++) {\n    arr.push(0);\n  }\n\n  return arr;\n}\n/**\n * Count the number of significant digits of a number.\n *\n * For example:\n *   2.34 returns 3\n *   0.0034 returns 2\n *   120.5e+30 returns 4\n *\n * @param {number} value\n * @return {number} digits   Number of significant digits\n */\n\n\nexports.digits = function (value) {\n  return value.toExponential().replace(/e.*$/, '') // remove exponential notation\n  .replace(/^0\\.?0*|\\./, '') // remove decimal point and leading zeros\n  .length;\n};\n/**\n * Minimum number added to one that makes the result different than one\n */\n\n\nexports.DBL_EPSILON = Number.EPSILON || 2.2204460492503130808472633361816E-16;\n/**\n * Compares two floating point numbers.\n * @param {number} x          First value to compare\n * @param {number} y          Second value to compare\n * @param {number} [epsilon]  The maximum relative difference between x and y\n *                            If epsilon is undefined or null, the function will\n *                            test whether x and y are exactly equal.\n * @return {boolean} whether the two numbers are nearly equal\n*/\n\nexports.nearlyEqual = function (x, y, epsilon) {\n  // if epsilon is null or undefined, test whether x and y are exactly equal\n  if (epsilon === null || epsilon === undefined) {\n    return x === y;\n  }\n\n  if (x === y) {\n    return true;\n  } // NaN\n\n\n  if (isNaN(x) || isNaN(y)) {\n    return false;\n  } // at this point x and y should be finite\n\n\n  if (isFinite(x) && isFinite(y)) {\n    // check numbers are very close, needed when comparing numbers near zero\n    var diff = Math.abs(x - y);\n\n    if (diff < exports.DBL_EPSILON) {\n      return true;\n    } else {\n      // use relative error\n      return diff <= Math.max(Math.abs(x), Math.abs(y)) * epsilon;\n    }\n  } // Infinite and Number or negative Infinite and positive Infinite cases\n\n\n  return false;\n};"
        },
        {
          "id": 17,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/Utils.ts",
          "name": "./services/Utils.ts",
          "index": 8,
          "index2": 5,
          "size": 368,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "issuer": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/NavigationService.ts",
          "issuerId": 9,
          "issuerName": "./services/NavigationService.ts",
          "issuerPath": [
            {
              "id": 49,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
              "name": "./main.ts",
              "profile": {
                "factory": 58,
                "building": 1843
              }
            },
            {
              "id": 9,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/NavigationService.ts",
              "name": "./services/NavigationService.ts",
              "profile": {
                "factory": 83,
                "building": 1193,
                "dependencies": 637
              }
            }
          ],
          "profile": {
            "factory": 496,
            "building": 197,
            "dependencies": 1
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 9,
              "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/NavigationService.ts",
              "module": "./services/NavigationService.ts",
              "moduleName": "./services/NavigationService.ts",
              "type": "cjs require",
              "userRequest": "./Utils",
              "loc": "3:16-34"
            },
            {
              "moduleId": 23,
              "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/SubstituteService.ts",
              "module": "./services/SubstituteService.ts",
              "moduleName": "./services/SubstituteService.ts",
              "type": "cjs require",
              "userRequest": "./Utils",
              "loc": "4:16-34"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 2,
          "source": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nrequire(\"../extensions/object.extensions\");\n// -- Utility Functions --\\\\\nfunction Any(obj) {\n    return Object.entries(obj).length === 0 && obj.constructor === Object;\n}\nexports.Any = Any;\nfunction IsUndefined(x) {\n    return (typeof x) === 'undefined';\n}\nexports.IsUndefined = IsUndefined;\n"
        },
        {
          "id": 18,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DisplayService.ts",
          "name": "./services/DisplayService.ts",
          "index": 5,
          "index2": 47,
          "size": 13827,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "issuer": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
          "issuerId": 49,
          "issuerName": "./main.ts",
          "issuerPath": [
            {
              "id": 49,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
              "name": "./main.ts",
              "profile": {
                "factory": 58,
                "building": 1843
              }
            }
          ],
          "profile": {
            "factory": 83,
            "building": 1193,
            "dependencies": 637
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 9,
              "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/NavigationService.ts",
              "module": "./services/NavigationService.ts",
              "moduleName": "./services/NavigationService.ts",
              "type": "cjs require",
              "userRequest": "./DisplayService",
              "loc": "4:25-52"
            },
            {
              "moduleId": 49,
              "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
              "module": "./main.ts",
              "moduleName": "./main.ts",
              "type": "cjs require",
              "userRequest": "./services/DisplayService",
              "loc": "15:25-61"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 1,
          "source": "\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst CategoryService_1 = require(\"./CategoryService\");\nexports.makeCategoryId = CategoryService_1.makeCategoryId;\nconst Settings_1 = require(\"../models/Settings\");\nconst NavigationService_1 = require(\"./NavigationService\");\nconst ITree_1 = require(\"../models/ITree\");\nconst DrinkService_1 = require(\"./DrinkService\");\nconst SearchObject_1 = require(\"../models/SearchObject\");\nconst Globals_1 = require(\"./Globals\");\nconst SVGService_1 = require(\"./SVGService\");\nconst StorageService_1 = require(\"./StorageService\");\nconst BuilderService_1 = require(\"./BuilderService\");\nconst DrinkDisplayService_1 = require(\"./DrinkDisplayService\");\nconst QRCodeService_1 = require(\"./QRCodeService\");\n/* Sidebar drawing */\nlet drinkListExpanded = false;\nfunction toggleDrinkList() {\n    drinkListExpanded = !drinkListExpanded;\n    if (drinkListExpanded) {\n        $('#drinkslistcontainer').addClass('collapse');\n        $('#drinklistarrow').text(Settings_1.Settings.symbols.downsymbol);\n    }\n    else {\n        $('#drinkslistcontainer').removeClass('collapse');\n        $('#drinklistarrow').text(Settings_1.Settings.symbols.upsymbol);\n    }\n    Settings_1.Settings.sidebar.expanded = drinkListExpanded;\n}\nexports.toggleDrinkList = toggleDrinkList;\nfunction populateCategories(categories) {\n    categories.forEach((x) => {\n        const catheader = $(`<div id='drink_category_header_${x.id}'>`).addClass('drink_category_header').append('<h3>').text(x.name);\n        const l = catheader.append(`<ul id='drink_category_list_${x.id}'>`);\n        $('#drinkslistcontainer').append(l);\n    });\n}\nfunction populateDrinksMenu(universe) {\n    function whichList(cat) {\n        const ul = $('#drink_category_list_' + CategoryService_1.makeCategoryId(cat));\n        return ul;\n    }\n    universe.forEach((x) => {\n        const a = $('<a>').attr('href', 'drinks.html#' + x.DrinkId).addClass('sidelink');\n        const obj = $('<li>').attr('id', 'li_drink_' + x.DrinkId).append(a);\n        a.text(x.Name);\n        const ul = whichList(x.Category);\n        ul.append(obj);\n    });\n}\nfunction DrawSidebar(categories, drinks) {\n    populateCategories(categories);\n    populateDrinksMenu(drinks);\n    toggleDrinkList();\n}\nexports.DrawSidebar = DrawSidebar;\n/* Ingredient Display */\nfunction populateDrinksWithThisIngredient(drinks) {\n    const drinkListElem = $('#withIngredient');\n    drinkListElem.empty();\n    if (!drinks.any()) {\n        drinkListElem.text('No drinks with this ingredient could be found. Sorry!');\n    }\n    for (let i = 0; i < drinks.length; i++) {\n        const drink = drinks[i];\n        const li = $('<li>').addClass('litext');\n        const sp = $('<a>').attr('href', 'drinks.html#' + drink.DrinkId).text(drink.Name);\n        li.append(sp);\n        drinkListElem.append(li);\n    }\n}\nfunction displayIngredient(ingredient, ingredientUniverse, ingredientUniverseFlat, drinkUniverse) {\n    $('#ingredientHeader').text(ingredient.name);\n    function findBranch(ingredient) {\n        let found = false;\n        let branch = null;\n        for (let i = 0; i < ingredientUniverse.length; i++) {\n            const tbranch = ingredientUniverse[i];\n            if (!found) {\n                ITree_1.DFS(tbranch, (n) => {\n                    if (n.id === ingredient.id) {\n                        found = true;\n                        branch = tbranch;\n                    }\n                });\n            }\n        }\n        return branch;\n    }\n    const branch = findBranch(ingredient);\n    $('#tree').empty();\n    const ns = ITree_1.NoSiblings(branch, ingredient);\n    const TreeOptions = {\n        CollapseDepth: 99,\n        ShowCheckBox: false,\n        ShowCollapse: false,\n        Highlight: [ingredient.id],\n    };\n    populateIngredientTree([ns], SearchObject_1.SearchObject, TreeOptions);\n    const drinks = DrinkService_1.getDrinksForIngredient(ingredient, ingredientUniverseFlat, drinkUniverse, true);\n    populateDrinksWithThisIngredient(drinks);\n    SVGService_1.DrawIngredientSVG(ingredient, ingredientUniverse);\n}\nexports.displayIngredient = displayIngredient;\n/* Ingredient Tree Display */\nfunction clearPantry() {\n    $('#your_pantry').empty();\n}\nfunction EliminatePantry() {\n    clearPantry();\n    StorageService_1.StorageClearPantry();\n    SearchObject_1.SearchObject.Inventory.clear();\n    SearchObject_1.SearchObject._InventoryIds.clear();\n}\nexports.EliminatePantry = EliminatePantry;\nfunction removeFromYourPantry(ing) {\n    for (let i = 0; i < SearchObject_1.SearchObject.Inventory.length; i++) {\n        if (SearchObject_1.SearchObject.Inventory[i].id === ing.id) {\n            // if found, kill it. break.\n            StorageService_1.StorageRemovePantryItem(SearchObject_1.SearchObject.Inventory[i]);\n            SearchObject_1.SearchObject.Inventory.splice(i, 1);\n            SearchObject_1.SearchObject._InventoryIds.splice(i, 1);\n            return true;\n        }\n    }\n    return false;\n}\nfunction redrawPantry() {\n    clearPantry();\n    SearchObject_1.SearchObject.Inventory.forEach((x) => {\n        const button = $('<button>').addClass('pantrytext').addClass('pantrybutton').attr('id', 'pantrybutton_' + x.id).addClass('btn').addClass('btn-xs').text('x').on('click', function () {\n            removeFromYourPantry(x);\n            redrawPantry();\n        });\n        const label = $('<label>').addClass('pantrytext').attr('for', 'pantrybutton_' + x).addClass('pantrylabel').text(x.name);\n        const span = $('<span>').addClass('pantryspan').append(label).append(button);\n        $('#your_pantry').append(span);\n    });\n}\nfunction populateIngredientTree(branches, SearchObject, options = Settings_1.Settings.tree) {\n    redrawPantry();\n    //  clone tree settings\n    options = Object.assign({}, Settings_1.Settings.tree, options);\n    const page = NavigationService_1.findPage().toLocaleLowerCase();\n    if (page !== NavigationService_1.PageTypes.Pantry && page !== NavigationService_1.PageTypes.Ingredient) {\n        return;\n    }\n    function fontCollapseF(depth) {\n        const fs = (options.FontStart);\n        const fc = (options.FontCollapse);\n        const collapse = Math.max(fs - (depth * fc), 12);\n        return collapse;\n    }\n    function ingOncheck(node) {\n        function closure() {\n            // scan yourpanty for this item\n            const canAdd = !removeFromYourPantry(node);\n            // otherwise, add it.\n            if (canAdd) {\n                StorageService_1.StorageAddPantryItem(node);\n                SearchObject.Inventory.push(node);\n                SearchObject._InventoryIds.push(node.id);\n            }\n            // add pantry elements\n            redrawPantry();\n        }\n        return closure;\n    }\n    function makeLabel(node, depth) {\n        const hdiv = $('<div>').attr('id', 'hdiv_' + node.id).addClass('ingredientDiv');\n        const label = $('<label>').addClass('ingredientLabel').css('font-size', fontCollapseF(depth) + 'px');\n        if (options.Highlight.contains(node.id)) {\n            label.addClass('treeMark');\n        }\n        hdiv.append(label);\n        const a = $('<a>').attr('href', 'ingredient.html#' + node.id).text((node.name)).css('margin-left', ((options.DepthMult) * depth) + 'px');\n        const div2 = $('<div>').append(a);\n        // options gets an override\n        if (options.ShowCheckBox) {\n            const check = $('<input>').addClass('ingredientlayout').attr('type', 'checkbox').on('change', ingOncheck(node));\n            if (SearchObject._InventoryIds.contains(node.id)) {\n                check.attr('checked', 'true');\n            }\n            div2.append(check);\n        }\n        const appender = $('<div>').attr('id', 'appender_' + node.id);\n        if (depth >= (options.CollapseDepth)) {\n            appender.addClass('collapse');\n        }\n        if (node.children.length > 0) {\n            const expander = $('<button>').addClass('btn').addClass('btn-md').text(depth >= (options.CollapseDepth) - 1 ? Settings_1.Settings.symbols.upsymbol : Settings_1.Settings.symbols.downsymbol).on('click', function () {\n                if (expander.text() === Settings_1.Settings.symbols.upsymbol) {\n                    expander.text(Settings_1.Settings.symbols.downsymbol);\n                    appender.removeClass('collapse');\n                }\n                else {\n                    expander.text(Settings_1.Settings.symbols.upsymbol);\n                    appender.addClass('collapse');\n                }\n            });\n            div2.append(expander);\n        }\n        label.append(div2);\n        return [hdiv, appender];\n    }\n    const root = {\n        id: -1,\n        distance: -1,\n        name: 'Pantry',\n        children: branches,\n    };\n    function df(node, depth, accumulator) {\n        const l = makeLabel(node, depth);\n        const label = l[0];\n        const appender = l[1];\n        label.append(appender);\n        accumulator.append(label);\n        return appender;\n    }\n    ITree_1.DFS2(root, df, $('#tree'));\n}\nexports.populateIngredientTree = populateIngredientTree;\nfunction DrawIngredient() {\n    const an = parseInt(location.hash.substring(1));\n    if (isNaN(an)) {\n        console.error('failed to parse hash fragment ingredient id for value: ' + location.hash.substring(1));\n        return;\n    }\n    const ingredient = Globals_1.Globals.IngredientFlat[an];\n    displayIngredient(ingredient, Globals_1.Globals.ingredients, Globals_1.Globals.IngredientFlat, Globals_1.Globals.Drinks);\n    window.document.title = ingredient.name + ' - Nondari';\n}\nexports.DrawIngredient = DrawIngredient;\n/* Pantry Display */\nfunction showYourDrinks(drinksResults) {\n    function populateDrinkList(listObject, drinks) {\n        function encodeDrink(drink) {\n            return 'drinks.html?' + drink.anchor;\n        }\n        drinks.forEach((x) => {\n            const li = $('<li>').addClass('drinkFound');\n            const texts = x.drink.Ingredients.filter(x => x.Unit === 'oz').map(x => x.IngredientName).join(', ');\n            const a = $('<a>').attr('href', encodeDrink(x)).text(`${x.name} [${texts}]`); // x.name);\n            li.append(a);\n            listObject.append(li);\n        });\n    }\n    $('#your_drinks').removeClass('collapse');\n    $('#drinks_em').empty();\n    $('#drinks_sub').empty();\n    if (drinksResults && (drinksResults.exact.length > 0 || drinksResults.substitutes.length > 0)) { // not null and at least one set is defined.\n        $('#no_drinks_found').addClass('collapse');\n        $('#drinks_available').removeClass('collapse');\n        if (drinksResults.exact && drinksResults.exact.length > 0) {\n            populateDrinkList($('#drinks_em'), drinksResults.exact);\n        }\n        else {\n            const exactspn = $('<span>').text('Sorry, no exact match drinks could be found');\n            $('#drinks_em').append(exactspn);\n        }\n        if (drinksResults.substitutes.length > 0) {\n            populateDrinkList($('#drinks_sub'), drinksResults.substitutes);\n        }\n        else if (SearchObject_1.SearchObject.ConsiderSubstitutions) {\n            const subspan = $('<span>').text('Sorry, no substite drinks could be found');\n            $('#drinks_sub').append(subspan);\n        }\n    }\n    else {\n        $('#no_drinks_found').removeClass('collapse');\n        $('#drinks_available').addClass('collapse');\n    }\n}\nexports.showYourDrinks = showYourDrinks;\n/* Builder Display */\nfunction DrawBuilder() {\n    $('#qr_limit_max').text(QRCodeService_1.QRDataLimit_AlphaNumeric);\n    const sel_glass = $('#selectGlass');\n    const sel_cat = $('#selectCategory');\n    sel_glass.empty();\n    Globals_1.Globals.Glasses.forEach((x) => {\n        const opt = $('<option>').attr('id', `select_glass_${x.toLocaleLowerCase()}`);\n        opt.val(String(x));\n        opt.text(String(x));\n        sel_glass.append(opt);\n    });\n    Globals_1.Globals.Categories.forEach((x) => {\n        const opt = $('<option>').attr('id', `select_glass_${x.name.toLocaleLowerCase()}`);\n        opt.val(String(x.id));\n        opt.text(String(x.name));\n        sel_cat.append(opt);\n    });\n}\nexports.DrawBuilder = DrawBuilder;\n/* Custom Display */\nfunction DrawCustom() {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (window.location.search.any()) {\n            const drink = BuilderService_1.DecodeDrink(window.location.toString());\n            console.log(drink);\n            const sdo = {\n                Builder: false,\n                Drink: drink,\n                Optionals: [],\n                Substitutions: {},\n            };\n            DrinkDisplayService_1.DisplayDrink(sdo);\n            DisplayQR(window.location.toString());\n            const title = drink.Name + ' - Nondari';\n            console.log(title);\n            document.title = title;\n            console.log(window.document.title);\n        }\n    });\n}\nexports.DrawCustom = DrawCustom;\nfunction DisplayQR(qrdata) {\n    // console.log(qrdata);\n    // const qrcode = new QRCode(document.getElementById('qrcode'), {\n    //     text: qrdata,\n    //     width: 128,\n    //     height: 128,\n    //     colorDark : '#000000',\n    //     colorLight : '#ffffff',\n    //     correctLevel : QRCode.CorrectLevel.L\n    // });\n}\n"
        },
        {
          "id": 19,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/CategoryService.ts",
          "name": "./services/CategoryService.ts",
          "index": 4,
          "index2": 3,
          "size": 727,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "issuer": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
          "issuerId": 49,
          "issuerName": "./main.ts",
          "issuerPath": [
            {
              "id": 49,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
              "name": "./main.ts",
              "profile": {
                "factory": 58,
                "building": 1843
              }
            }
          ],
          "profile": {
            "factory": 83,
            "building": 1193,
            "dependencies": 637
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 18,
              "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DisplayService.ts",
              "module": "./services/DisplayService.ts",
              "moduleName": "./services/DisplayService.ts",
              "type": "cjs require",
              "userRequest": "./CategoryService",
              "loc": "11:26-54"
            },
            {
              "moduleId": 49,
              "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
              "module": "./main.ts",
              "moduleName": "./main.ts",
              "type": "cjs require",
              "userRequest": "./services/CategoryService",
              "loc": "14:26-63"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 1,
          "source": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction makeCategoryId(c) {\n    return c.replace(/ /g, '_');\n}\nexports.makeCategoryId = makeCategoryId;\nfunction constructCategories(jdrinks) {\n    const carr = [];\n    const catids = [];\n    const cats = [];\n    for (let i = 0; i < jdrinks.length; i++) {\n        const cid = makeCategoryId(jdrinks[i].Category);\n        if (!catids.contains(cid)) {\n            const cat = {\n                id: cid,\n                name: jdrinks[i].Category\n            };\n            cats.push(cat);\n            catids.push(cat.id);\n        }\n    }\n    cats.sort().forEach(x => carr.push(x));\n    return carr;\n}\nexports.constructCategories = constructCategories;\n"
        },
        {
          "id": 20,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/extensions/object.extensions.ts",
          "name": "./extensions/object.extensions.ts",
          "index": 2,
          "index2": 1,
          "size": 77,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "issuer": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
          "issuerId": 49,
          "issuerName": "./main.ts",
          "issuerPath": [
            {
              "id": 49,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
              "name": "./main.ts",
              "profile": {
                "factory": 58,
                "building": 1843
              }
            }
          ],
          "profile": {
            "factory": 83,
            "building": 1193,
            "dependencies": 637
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 17,
              "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/Utils.ts",
              "module": "./services/Utils.ts",
              "moduleName": "./services/Utils.ts",
              "type": "cjs require",
              "userRequest": "../extensions/object.extensions",
              "loc": "3:0-42"
            },
            {
              "moduleId": 49,
              "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
              "module": "./main.ts",
              "moduleName": "./main.ts",
              "type": "cjs require",
              "userRequest": "./extensions/object.extensions",
              "loc": "12:0-41"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 1,
          "source": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n"
        },
        {
          "id": 21,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/extensions/array.extensions.ts",
          "name": "./extensions/array.extensions.ts",
          "index": 1,
          "index2": 0,
          "size": 860,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "issuer": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
          "issuerId": 49,
          "issuerName": "./main.ts",
          "issuerPath": [
            {
              "id": 49,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
              "name": "./main.ts",
              "profile": {
                "factory": 58,
                "building": 1843
              }
            }
          ],
          "profile": {
            "factory": 83,
            "building": 1193,
            "dependencies": 637
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 2,
              "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/models/ITree.ts",
              "module": "./models/ITree.ts",
              "moduleName": "./models/ITree.ts",
              "type": "cjs require",
              "userRequest": "../extensions/array.extensions",
              "loc": "3:0-41"
            },
            {
              "moduleId": 49,
              "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
              "module": "./main.ts",
              "moduleName": "./main.ts",
              "type": "cjs require",
              "userRequest": "./extensions/array.extensions",
              "loc": "11:0-40"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 1,
          "source": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nArray.prototype.clear = function () {\n    this.length = 0;\n};\nArray.prototype.contains = function (x) {\n    return this.indexOf(x) > -1;\n};\nArray.prototype.remove = function (x) {\n    const idx = this.indexOf(x);\n    if (idx !== -1) {\n        this.splice(idx, 1);\n    }\n    return idx;\n};\nArray.prototype.removeAt = function (x) {\n    const n = parseInt(x);\n    if (isNaN(n)) {\n        throw 'Array.removeAt() takes an integer, or a integer-like string';\n    }\n    if (this.length > x) {\n        return this.splice(n, 1);\n    }\n    return undefined;\n};\nArray.prototype.any = function (func) {\n    if (!func) {\n        return this.length > 0;\n    }\n    for (let i = 0; i < this.length; i++) {\n        if (func(this[i])) {\n            return true;\n        }\n    }\n    return false;\n};\n"
        },
        {
          "id": 22,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DownloadService.ts",
          "name": "./services/DownloadService.ts",
          "index": 49,
          "index2": 48,
          "size": 887,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "issuer": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
          "issuerId": 49,
          "issuerName": "./main.ts",
          "issuerPath": [
            {
              "id": 49,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
              "name": "./main.ts",
              "profile": {
                "factory": 58,
                "building": 1843
              }
            }
          ],
          "profile": {
            "factory": 83,
            "building": 1193,
            "dependencies": 637
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 49,
              "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
              "module": "./main.ts",
              "moduleName": "./main.ts",
              "type": "cjs require",
              "userRequest": "./services/DownloadService",
              "loc": "25:26-63"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 1,
          "source": "\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction DownloadMainJson() {\n    return __awaiter(this, void 0, void 0, function* () {\n        return (yield (yield fetch('/json/drinks.json')).json());\n    });\n}\nexports.DownloadMainJson = DownloadMainJson;\n"
        },
        {
          "id": 23,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/SubstituteService.ts",
          "name": "./services/SubstituteService.ts",
          "index": 45,
          "index2": 42,
          "size": 2468,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "issuer": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DrinkService.ts",
          "issuerId": 13,
          "issuerName": "./services/DrinkService.ts",
          "issuerPath": [
            {
              "id": 49,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
              "name": "./main.ts",
              "profile": {
                "factory": 58,
                "building": 1843
              }
            },
            {
              "id": 13,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DrinkService.ts",
              "name": "./services/DrinkService.ts",
              "profile": {
                "factory": 83,
                "building": 1193,
                "dependencies": 637
              }
            }
          ],
          "profile": {
            "factory": 639,
            "building": 183,
            "dependencies": 1
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 13,
              "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DrinkService.ts",
              "module": "./services/DrinkService.ts",
              "moduleName": "./services/DrinkService.ts",
              "type": "cjs require",
              "userRequest": "./SubstituteService",
              "loc": "4:28-58"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 2,
          "source": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst ITree_1 = require(\"../models/ITree\");\nconst Utils_1 = require(\"./Utils\");\nfunction findIngredientById(ingid, universe) {\n    let ingredient = null;\n    for (const k in universe) {\n        ITree_1.DFS(universe[k], (n) => {\n            if (n.id === ingid) {\n                ingredient = n;\n            }\n        });\n    }\n    return ingredient;\n}\nfunction fs2(ingredient, available, universe) {\n    const replacements = {\n        any: false,\n        subs: {}\n    };\n    const realIngredient = findIngredientById(ingredient.IngredientId, universe);\n    if (!realIngredient) {\n        return replacements; // no such ingredient could be found.\n    }\n    /* check if eligible for going up */\n    if (realIngredient.distance === -1) {\n        return replacements; // This item is -1, meaning it is not eligible to be substituted by anything.\n    }\n    let ancestor = null;\n    let thisAncestor = null;\n    let mainDistance = 0;\n    let thisDistance = 0;\n    for (let i = 0; i < available.length; i++) {\n        const item = available[i];\n        /* we start over at the beginning of every ingredient check. */\n        ancestor = realIngredient;\n        thisAncestor = universe[item.id];\n        mainDistance = 0;\n        thisDistance = 0;\n        let commonAncestor = true;\n        // we go until the ancestors are common, OR until neither can go up anymore.\n        while (ancestor.id !== thisAncestor.id) {\n            if (ancestor.distance <= -1 && thisAncestor.distance <= -1) {\n                /* ancestors are not common but we can't advance any further. */\n                commonAncestor = false;\n                break;\n            }\n            if (ancestor.distance > -1) {\n                mainDistance += ancestor.distance;\n                ancestor = universe[ancestor.parent];\n            }\n            if (thisAncestor.distance > -1) {\n                thisDistance += thisAncestor.distance;\n                thisAncestor = universe[thisAncestor.parent];\n            }\n        }\n        if (commonAncestor) {\n            const dist = mainDistance + thisDistance;\n            replacements.any = true;\n            if (Utils_1.IsUndefined(replacements.subs[dist])) {\n                replacements.subs[dist] = [item.id];\n            }\n            else {\n                replacements.subs[dist].push(item.id);\n            }\n        }\n    }\n    return replacements;\n}\nexports.fs2 = fs2;\n"
        },
        {
          "id": 24,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/models/WLM.ts",
          "name": "./models/WLM.ts",
          "index": 42,
          "index2": 38,
          "size": 373,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "issuer": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DrinkDisplayService.ts",
          "issuerId": 8,
          "issuerName": "./services/DrinkDisplayService.ts",
          "issuerPath": [
            {
              "id": 49,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
              "name": "./main.ts",
              "profile": {
                "factory": 58,
                "building": 1843
              }
            },
            {
              "id": 18,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DisplayService.ts",
              "name": "./services/DisplayService.ts",
              "profile": {
                "factory": 83,
                "building": 1193,
                "dependencies": 637
              }
            },
            {
              "id": 8,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DrinkDisplayService.ts",
              "name": "./services/DrinkDisplayService.ts",
              "profile": {
                "factory": 735,
                "building": 523,
                "dependencies": 1
              }
            }
          ],
          "profile": {
            "factory": 394,
            "building": 17
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 8,
              "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DrinkDisplayService.ts",
              "module": "./services/DrinkDisplayService.ts",
              "moduleName": "./services/DrinkDisplayService.ts",
              "type": "cjs require",
              "userRequest": "../models/WLM",
              "loc": "8:14-38"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 3,
          "source": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst WeirdnessLevelMap = {\n    '0': 'Specific Variety',\n    '1': 'Barely different',\n    '2': 'Minor differences',\n    '3': 'Noticable differences',\n    '4': 'Large differences',\n    '5': 'Quite different',\n    '6': 'Probably a different drink'\n};\nexports.WeirdnessLevelMap = WeirdnessLevelMap;\n"
        },
        {
          "id": 25,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/models/IGlass.ts",
          "name": "./models/IGlass.ts",
          "index": 41,
          "index2": 35,
          "size": 2792,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "issuer": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/GlassService.ts",
          "issuerId": 14,
          "issuerName": "./services/GlassService.ts",
          "issuerPath": [
            {
              "id": 49,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
              "name": "./main.ts",
              "profile": {
                "factory": 58,
                "building": 1843
              }
            },
            {
              "id": 14,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/GlassService.ts",
              "name": "./services/GlassService.ts",
              "profile": {
                "factory": 83,
                "building": 1193,
                "dependencies": 637
              }
            }
          ],
          "profile": {
            "factory": 17,
            "building": 541
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 14,
              "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/GlassService.ts",
              "module": "./services/GlassService.ts",
              "moduleName": "./services/GlassService.ts",
              "type": "cjs require",
              "userRequest": "../models/IGlass",
              "loc": "3:17-44"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 2,
          "source": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst MartiniGlass = {\n    Name: 'coupe',\n    MaskURL: '/img/glasses/martini_mask.svg',\n    SVGURL: '/img/glasses/martini.svg',\n    AvailableRows: 17,\n    Height: 376,\n    Width: 247,\n};\nconst CoupeGlass = {\n    Name: 'coupe',\n    MaskURL: '/img/glasses/coupe2_mask.svg',\n    SVGURL: '/img/glasses/coupe2.svg',\n    AvailableRows: 13,\n    Height: 336,\n    Width: 247,\n};\nconst OldFashionedGlass = {\n    Name: 'old fashioned',\n    MaskURL: '/img/glasses/rocks2_mask.svg',\n    SVGURL: '/img/glasses/rocks2.svg',\n    AvailableRows: 22,\n    Height: 226,\n    Width: 247,\n};\nconst RocksGlass = {\n    Name: 'rocks',\n    MaskURL: '/img/glasses/rocks2_mask.svg',\n    SVGURL: '/img/glasses/rocks2.svg',\n    AvailableRows: 22,\n    Height: 226,\n    Width: 247,\n};\nconst DoubleRocksGlass = {\n    Name: 'double rocks',\n    MaskURL: '/img/glasses/rocks2_mask.svg',\n    SVGURL: '/img/glasses/rocks2.svg',\n    AvailableRows: 22,\n    Height: 226,\n    Width: 247,\n};\nconst WhiskeyGlass = {\n    Name: 'whiskey',\n    MaskURL: '/img/glasses/whiskey_mask.svg',\n    SVGURL: '/img/glasses/whiskey.svg',\n    AvailableRows: 22,\n    Height: 226,\n    Width: 247,\n};\nconst CollinsGlass = {\n    Name: 'collins',\n    MaskURL: '/img/glasses/collins3_mask.svg',\n    SVGURL: '/img/glasses/collins3.svg',\n    AvailableRows: 36,\n    Height: 376,\n    Width: 129,\n};\nconst FluteGlass = {\n    Name: 'flute',\n    MaskURL: '/img/glasses/flute_mask.svg',\n    SVGURL: '/img/glasses/flute.svg',\n    AvailableRows: 20,\n    Height: 376,\n    Width: 247,\n};\nconst SourGlass = {\n    Name: 'sour',\n    MaskURL: '/img/glasses/sour_mask.svg',\n    SVGURL: '/img/glasses/sour.svg',\n    AvailableRows: 30,\n    Height: 376,\n    Width: 247,\n};\nconst IrishMug = {\n    Name: 'irish mug',\n    MaskURL: '/img/glasses/irish_mug_mask.svg',\n    SVGURL: '/img/glasses/irish_mug.svg',\n    AvailableRows: 55,\n    Height: 376,\n    Width: 247,\n};\nconst Stout = {\n    Name: 'stout',\n    MaskURL: '/img/glasses/stout_mask.svg',\n    SVGURL: '/img/glasses/stout.svg',\n    AvailableRows: 36,\n    Height: 376,\n    Width: 247,\n};\nconst ImperialPint = {\n    Name: 'imperial pint',\n    MaskURL: '/img/glasses/imperial_pint_mask.svg',\n    SVGURL: '/img/glasses/imperial_pint.svg',\n    AvailableRows: 36,\n    Height: 376,\n    Width: 209,\n};\nconst Highball = {\n    Name: 'highball',\n    MaskURL: '/img/glasses/highball2_mask.svg',\n    SVGURL: '/img/glasses/highball2.svg',\n    AvailableRows: 29,\n    Height: 296,\n    Width: 169\n};\nconst Glasses = [\n    CoupeGlass,\n    RocksGlass,\n    DoubleRocksGlass,\n    WhiskeyGlass,\n    CollinsGlass,\n    FluteGlass,\n    OldFashionedGlass,\n    SourGlass,\n    IrishMug,\n    Stout,\n    ImperialPint,\n    Highball,\n    MartiniGlass,\n];\nexports.Glasses = Glasses;\n"
        },
        {
          "id": 26,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/svg.js/dist/svg.js",
          "name": "../node_modules/svg.js/dist/svg.js",
          "index": 38,
          "index2": 33,
          "size": 149105,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "issuer": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/SVGService.ts",
          "issuerId": 5,
          "issuerName": "./services/SVGService.ts",
          "issuerPath": [
            {
              "id": 49,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
              "name": "./main.ts",
              "profile": {
                "factory": 58,
                "building": 1843
              }
            },
            {
              "id": 18,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DisplayService.ts",
              "name": "./services/DisplayService.ts",
              "profile": {
                "factory": 83,
                "building": 1193,
                "dependencies": 637
              }
            },
            {
              "id": 5,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/SVGService.ts",
              "name": "./services/SVGService.ts",
              "profile": {
                "factory": 735,
                "building": 523,
                "dependencies": 1
              }
            }
          ],
          "profile": {
            "factory": 59,
            "building": 128
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 5,
              "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/SVGService.ts",
              "module": "./services/SVGService.ts",
              "moduleName": "./services/SVGService.ts",
              "type": "cjs require",
              "userRequest": "svg.js",
              "loc": "11:12-29"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 3,
          "source": "/*!\n* svg.js - A lightweight library for manipulating and animating SVG.\n* @version 2.7.1\n* https://svgdotjs.github.io/\n*\n* @copyright Wout Fierens <wout@mick-wout.com>\n* @license MIT\n*\n* BUILT: Fri Nov 30 2018 10:01:55 GMT+0100 (GMT+01:00)\n*/;\n(function(root, factory) {\r\n  /* istanbul ignore next */\r\n  if (typeof define === 'function' && define.amd) {\r\n    define(function(){\r\n      return factory(root, root.document)\r\n    })\r\n  } else if (typeof exports === 'object') {\r\n    module.exports = root.document ? factory(root, root.document) : function(w){ return factory(w, w.document) }\r\n  } else {\r\n    root.SVG = factory(root, root.document)\r\n  }\r\n}(typeof window !== \"undefined\" ? window : this, function(window, document) {\r\n\r\n// Find global reference - uses 'this' by default when available,\r\n// falls back to 'window' otherwise (for bundlers like Webpack)\r\nvar globalRef = (typeof this !== \"undefined\") ? this : window;\r\n\r\n// The main wrapping element\r\nvar SVG = globalRef.SVG = function(element) {\r\n  if (SVG.supported) {\r\n    element = new SVG.Doc(element)\r\n\r\n    if(!SVG.parser.draw)\r\n      SVG.prepare()\r\n\r\n    return element\r\n  }\r\n}\r\n\r\n// Default namespaces\r\nSVG.ns    = 'http://www.w3.org/2000/svg'\r\nSVG.xmlns = 'http://www.w3.org/2000/xmlns/'\r\nSVG.xlink = 'http://www.w3.org/1999/xlink'\r\nSVG.svgjs = 'http://svgjs.com/svgjs'\r\n\r\n// Svg support test\r\nSVG.supported = (function() {\r\n  return !! document.createElementNS &&\r\n         !! document.createElementNS(SVG.ns,'svg').createSVGRect\r\n})()\r\n\r\n// Don't bother to continue if SVG is not supported\r\nif (!SVG.supported) return false\r\n\r\n// Element id sequence\r\nSVG.did  = 1000\r\n\r\n// Get next named element id\r\nSVG.eid = function(name) {\r\n  return 'Svgjs' + capitalize(name) + (SVG.did++)\r\n}\r\n\r\n// Method for element creation\r\nSVG.create = function(name) {\r\n  // create element\r\n  var element = document.createElementNS(this.ns, name)\r\n\r\n  // apply unique id\r\n  element.setAttribute('id', this.eid(name))\r\n\r\n  return element\r\n}\r\n\r\n// Method for extending objects\r\nSVG.extend = function() {\r\n  var modules, methods, key, i\r\n\r\n  // Get list of modules\r\n  modules = [].slice.call(arguments)\r\n\r\n  // Get object with extensions\r\n  methods = modules.pop()\r\n\r\n  for (i = modules.length - 1; i >= 0; i--)\r\n    if (modules[i])\r\n      for (key in methods)\r\n        modules[i].prototype[key] = methods[key]\r\n\r\n  // Make sure SVG.Set inherits any newly added methods\r\n  if (SVG.Set && SVG.Set.inherit)\r\n    SVG.Set.inherit()\r\n}\r\n\r\n// Invent new element\r\nSVG.invent = function(config) {\r\n  // Create element initializer\r\n  var initializer = typeof config.create == 'function' ?\r\n    config.create :\r\n    function() {\r\n      this.constructor.call(this, SVG.create(config.create))\r\n    }\r\n\r\n  // Inherit prototype\r\n  if (config.inherit)\r\n    initializer.prototype = new config.inherit\r\n\r\n  // Extend with methods\r\n  if (config.extend)\r\n    SVG.extend(initializer, config.extend)\r\n\r\n  // Attach construct method to parent\r\n  if (config.construct)\r\n    SVG.extend(config.parent || SVG.Container, config.construct)\r\n\r\n  return initializer\r\n}\r\n\r\n// Adopt existing svg elements\r\nSVG.adopt = function(node) {\r\n  // check for presence of node\r\n  if (!node) return null\r\n\r\n  // make sure a node isn't already adopted\r\n  if (node.instance) return node.instance\r\n\r\n  // initialize variables\r\n  var element\r\n\r\n  // adopt with element-specific settings\r\n  if (node.nodeName == 'svg')\r\n    element = node.parentNode instanceof window.SVGElement ? new SVG.Nested : new SVG.Doc\r\n  else if (node.nodeName == 'linearGradient')\r\n    element = new SVG.Gradient('linear')\r\n  else if (node.nodeName == 'radialGradient')\r\n    element = new SVG.Gradient('radial')\r\n  else if (SVG[capitalize(node.nodeName)])\r\n    element = new SVG[capitalize(node.nodeName)]\r\n  else\r\n    element = new SVG.Element(node)\r\n\r\n  // ensure references\r\n  element.type  = node.nodeName\r\n  element.node  = node\r\n  node.instance = element\r\n\r\n  // SVG.Class specific preparations\r\n  if (element instanceof SVG.Doc)\r\n    element.namespace().defs()\r\n\r\n  // pull svgjs data from the dom (getAttributeNS doesn't work in html5)\r\n  element.setData(JSON.parse(node.getAttribute('svgjs:data')) || {})\r\n\r\n  return element\r\n}\r\n\r\n// Initialize parsing element\r\nSVG.prepare = function() {\r\n  // Select document body and create invisible svg element\r\n  var body = document.getElementsByTagName('body')[0]\r\n    , draw = (body ? new SVG.Doc(body) : SVG.adopt(document.documentElement).nested()).size(2, 0)\r\n\r\n  // Create parser object\r\n  SVG.parser = {\r\n    body: body || document.documentElement\r\n  , draw: draw.style('opacity:0;position:absolute;left:-100%;top:-100%;overflow:hidden').attr('focusable', 'false').node\r\n  , poly: draw.polyline().node\r\n  , path: draw.path().node\r\n  , native: SVG.create('svg')\r\n  }\r\n}\r\n\r\nSVG.parser = {\r\n  native: SVG.create('svg')\r\n}\r\n\r\ndocument.addEventListener('DOMContentLoaded', function() {\r\n  if(!SVG.parser.draw)\r\n    SVG.prepare()\r\n}, false)\r\n\n// Storage for regular expressions\r\nSVG.regex = {\r\n  // Parse unit value\r\n  numberAndUnit:    /^([+-]?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?)([a-z%]*)$/i\r\n\r\n  // Parse hex value\r\n, hex:              /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i\r\n\r\n  // Parse rgb value\r\n, rgb:              /rgb\\((\\d+),(\\d+),(\\d+)\\)/\r\n\r\n  // Parse reference id\r\n, reference:        /#([a-z0-9\\-_]+)/i\r\n\r\n  // splits a transformation chain\r\n, transforms:       /\\)\\s*,?\\s*/\r\n\r\n  // Whitespace\r\n, whitespace:       /\\s/g\r\n\r\n  // Test hex value\r\n, isHex:            /^#[a-f0-9]{3,6}$/i\r\n\r\n  // Test rgb value\r\n, isRgb:            /^rgb\\(/\r\n\r\n  // Test css declaration\r\n, isCss:            /[^:]+:[^;]+;?/\r\n\r\n  // Test for blank string\r\n, isBlank:          /^(\\s+)?$/\r\n\r\n  // Test for numeric string\r\n, isNumber:         /^[+-]?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i\r\n\r\n  // Test for percent value\r\n, isPercent:        /^-?[\\d\\.]+%$/\r\n\r\n  // Test for image url\r\n, isImage:          /\\.(jpg|jpeg|png|gif|svg)(\\?[^=]+.*)?/i\r\n\r\n  // split at whitespace and comma\r\n, delimiter:        /[\\s,]+/\r\n\r\n  // The following regex are used to parse the d attribute of a path\r\n\r\n  // Matches all hyphens which are not after an exponent\r\n, hyphen:           /([^e])\\-/gi\r\n\r\n  // Replaces and tests for all path letters\r\n, pathLetters:      /[MLHVCSQTAZ]/gi\r\n\r\n  // yes we need this one, too\r\n, isPathLetter:     /[MLHVCSQTAZ]/i\r\n\r\n  // matches 0.154.23.45\r\n, numbersWithDots:  /((\\d?\\.\\d+(?:e[+-]?\\d+)?)((?:\\.\\d+(?:e[+-]?\\d+)?)+))+/gi\r\n\r\n  // matches .\r\n, dots:             /\\./g\r\n}\r\n\nSVG.utils = {\r\n  // Map function\r\n  map: function(array, block) {\r\n    var i\r\n      , il = array.length\r\n      , result = []\r\n\r\n    for (i = 0; i < il; i++)\r\n      result.push(block(array[i]))\r\n\r\n    return result\r\n  }\r\n\r\n  // Filter function\r\n, filter: function(array, block) {\r\n    var i\r\n      , il = array.length\r\n      , result = []\r\n\r\n    for (i = 0; i < il; i++)\r\n      if (block(array[i]))\r\n        result.push(array[i])\r\n\r\n    return result\r\n  }\r\n\r\n  // Degrees to radians\r\n, radians: function(d) {\r\n    return d % 360 * Math.PI / 180\r\n  }\r\n\r\n  // Radians to degrees\r\n, degrees: function(r) {\r\n    return r * 180 / Math.PI % 360\r\n  }\r\n\r\n, filterSVGElements: function(nodes) {\r\n    return this.filter( nodes, function(el) { return el instanceof window.SVGElement })\r\n  }\r\n\r\n}\n\r\nSVG.defaults = {\r\n  // Default attribute values\r\n  attrs: {\r\n    // fill and stroke\r\n    'fill-opacity':     1\r\n  , 'stroke-opacity':   1\r\n  , 'stroke-width':     0\r\n  , 'stroke-linejoin':  'miter'\r\n  , 'stroke-linecap':   'butt'\r\n  , fill:               '#000000'\r\n  , stroke:             '#000000'\r\n  , opacity:            1\r\n    // position\r\n  , x:                  0\r\n  , y:                  0\r\n  , cx:                 0\r\n  , cy:                 0\r\n    // size\r\n  , width:              0\r\n  , height:             0\r\n    // radius\r\n  , r:                  0\r\n  , rx:                 0\r\n  , ry:                 0\r\n    // gradient\r\n  , offset:             0\r\n  , 'stop-opacity':     1\r\n  , 'stop-color':       '#000000'\r\n    // text\r\n  , 'font-size':        16\r\n  , 'font-family':      'Helvetica, Arial, sans-serif'\r\n  , 'text-anchor':      'start'\r\n  }\r\n\r\n}\n// Module for color convertions\r\nSVG.Color = function(color) {\r\n  var match\r\n\r\n  // initialize defaults\r\n  this.r = 0\r\n  this.g = 0\r\n  this.b = 0\r\n\r\n  if(!color) return\r\n\r\n  // parse color\r\n  if (typeof color === 'string') {\r\n    if (SVG.regex.isRgb.test(color)) {\r\n      // get rgb values\r\n      match = SVG.regex.rgb.exec(color.replace(SVG.regex.whitespace,''))\r\n\r\n      // parse numeric values\r\n      this.r = parseInt(match[1])\r\n      this.g = parseInt(match[2])\r\n      this.b = parseInt(match[3])\r\n\r\n    } else if (SVG.regex.isHex.test(color)) {\r\n      // get hex values\r\n      match = SVG.regex.hex.exec(fullHex(color))\r\n\r\n      // parse numeric values\r\n      this.r = parseInt(match[1], 16)\r\n      this.g = parseInt(match[2], 16)\r\n      this.b = parseInt(match[3], 16)\r\n\r\n    }\r\n\r\n  } else if (typeof color === 'object') {\r\n    this.r = color.r\r\n    this.g = color.g\r\n    this.b = color.b\r\n\r\n  }\r\n\r\n}\r\n\r\nSVG.extend(SVG.Color, {\r\n  // Default to hex conversion\r\n  toString: function() {\r\n    return this.toHex()\r\n  }\r\n  // Build hex value\r\n, toHex: function() {\r\n    return '#'\r\n      + compToHex(this.r)\r\n      + compToHex(this.g)\r\n      + compToHex(this.b)\r\n  }\r\n  // Build rgb value\r\n, toRgb: function() {\r\n    return 'rgb(' + [this.r, this.g, this.b].join() + ')'\r\n  }\r\n  // Calculate true brightness\r\n, brightness: function() {\r\n    return (this.r / 255 * 0.30)\r\n         + (this.g / 255 * 0.59)\r\n         + (this.b / 255 * 0.11)\r\n  }\r\n  // Make color morphable\r\n, morph: function(color) {\r\n    this.destination = new SVG.Color(color)\r\n\r\n    return this\r\n  }\r\n  // Get morphed color at given position\r\n, at: function(pos) {\r\n    // make sure a destination is defined\r\n    if (!this.destination) return this\r\n\r\n    // normalise pos\r\n    pos = pos < 0 ? 0 : pos > 1 ? 1 : pos\r\n\r\n    // generate morphed color\r\n    return new SVG.Color({\r\n      r: ~~(this.r + (this.destination.r - this.r) * pos)\r\n    , g: ~~(this.g + (this.destination.g - this.g) * pos)\r\n    , b: ~~(this.b + (this.destination.b - this.b) * pos)\r\n    })\r\n  }\r\n\r\n})\r\n\r\n// Testers\r\n\r\n// Test if given value is a color string\r\nSVG.Color.test = function(color) {\r\n  color += ''\r\n  return SVG.regex.isHex.test(color)\r\n      || SVG.regex.isRgb.test(color)\r\n}\r\n\r\n// Test if given value is a rgb object\r\nSVG.Color.isRgb = function(color) {\r\n  return color && typeof color.r == 'number'\r\n               && typeof color.g == 'number'\r\n               && typeof color.b == 'number'\r\n}\r\n\r\n// Test if given value is a color\r\nSVG.Color.isColor = function(color) {\r\n  return SVG.Color.isRgb(color) || SVG.Color.test(color)\r\n}\n// Module for array conversion\r\nSVG.Array = function(array, fallback) {\r\n  array = (array || []).valueOf()\r\n\r\n  // if array is empty and fallback is provided, use fallback\r\n  if (array.length == 0 && fallback)\r\n    array = fallback.valueOf()\r\n\r\n  // parse array\r\n  this.value = this.parse(array)\r\n}\r\n\r\nSVG.extend(SVG.Array, {\r\n  // Make array morphable\r\n  morph: function(array) {\r\n    this.destination = this.parse(array)\r\n\r\n    // normalize length of arrays\r\n    if (this.value.length != this.destination.length) {\r\n      var lastValue       = this.value[this.value.length - 1]\r\n        , lastDestination = this.destination[this.destination.length - 1]\r\n\r\n      while(this.value.length > this.destination.length)\r\n        this.destination.push(lastDestination)\r\n      while(this.value.length < this.destination.length)\r\n        this.value.push(lastValue)\r\n    }\r\n\r\n    return this\r\n  }\r\n  // Clean up any duplicate points\r\n, settle: function() {\r\n    // find all unique values\r\n    for (var i = 0, il = this.value.length, seen = []; i < il; i++)\r\n      if (seen.indexOf(this.value[i]) == -1)\r\n        seen.push(this.value[i])\r\n\r\n    // set new value\r\n    return this.value = seen\r\n  }\r\n  // Get morphed array at given position\r\n, at: function(pos) {\r\n    // make sure a destination is defined\r\n    if (!this.destination) return this\r\n\r\n    // generate morphed array\r\n    for (var i = 0, il = this.value.length, array = []; i < il; i++)\r\n      array.push(this.value[i] + (this.destination[i] - this.value[i]) * pos)\r\n\r\n    return new SVG.Array(array)\r\n  }\r\n  // Convert array to string\r\n, toString: function() {\r\n    return this.value.join(' ')\r\n  }\r\n  // Real value\r\n, valueOf: function() {\r\n    return this.value\r\n  }\r\n  // Parse whitespace separated string\r\n, parse: function(array) {\r\n    array = array.valueOf()\r\n\r\n    // if already is an array, no need to parse it\r\n    if (Array.isArray(array)) return array\r\n\r\n    return this.split(array)\r\n  }\r\n  // Strip unnecessary whitespace\r\n, split: function(string) {\r\n    return string.trim().split(SVG.regex.delimiter).map(parseFloat)\r\n  }\r\n  // Reverse array\r\n, reverse: function() {\r\n    this.value.reverse()\r\n\r\n    return this\r\n  }\r\n, clone: function() {\r\n    var clone = new this.constructor()\r\n    clone.value = array_clone(this.value)\r\n    return clone\r\n  }\r\n})\n// Poly points array\r\nSVG.PointArray = function(array, fallback) {\r\n  SVG.Array.call(this, array, fallback || [[0,0]])\r\n}\r\n\r\n// Inherit from SVG.Array\r\nSVG.PointArray.prototype = new SVG.Array\r\nSVG.PointArray.prototype.constructor = SVG.PointArray\r\n\r\nSVG.extend(SVG.PointArray, {\r\n  // Convert array to string\r\n  toString: function() {\r\n    // convert to a poly point string\r\n    for (var i = 0, il = this.value.length, array = []; i < il; i++)\r\n      array.push(this.value[i].join(','))\r\n\r\n    return array.join(' ')\r\n  }\r\n  // Convert array to line object\r\n, toLine: function() {\r\n    return {\r\n      x1: this.value[0][0]\r\n    , y1: this.value[0][1]\r\n    , x2: this.value[1][0]\r\n    , y2: this.value[1][1]\r\n    }\r\n  }\r\n  // Get morphed array at given position\r\n, at: function(pos) {\r\n    // make sure a destination is defined\r\n    if (!this.destination) return this\r\n\r\n    // generate morphed point string\r\n    for (var i = 0, il = this.value.length, array = []; i < il; i++)\r\n      array.push([\r\n        this.value[i][0] + (this.destination[i][0] - this.value[i][0]) * pos\r\n      , this.value[i][1] + (this.destination[i][1] - this.value[i][1]) * pos\r\n      ])\r\n\r\n    return new SVG.PointArray(array)\r\n  }\r\n  // Parse point string and flat array\r\n, parse: function(array) {\r\n    var points = []\r\n\r\n    array = array.valueOf()\r\n\r\n    // if it is an array\r\n    if (Array.isArray(array)) {\r\n      // and it is not flat, there is no need to parse it\r\n      if(Array.isArray(array[0])) {\r\n        // make sure to use a clone\r\n        return array.map(function (el) { return el.slice() })\r\n      } else if (array[0].x != null){\r\n        // allow point objects to be passed\r\n        return array.map(function (el) { return [el.x, el.y] })\r\n      }\r\n    } else { // Else, it is considered as a string\r\n      // parse points\r\n      array = array.trim().split(SVG.regex.delimiter).map(parseFloat)\r\n    }\r\n\r\n    // validate points - https://svgwg.org/svg2-draft/shapes.html#DataTypePoints\r\n    // Odd number of coordinates is an error. In such cases, drop the last odd coordinate.\r\n    if (array.length % 2 !== 0) array.pop()\r\n\r\n    // wrap points in two-tuples and parse points as floats\r\n    for(var i = 0, len = array.length; i < len; i = i + 2)\r\n      points.push([ array[i], array[i+1] ])\r\n\r\n    return points\r\n  }\r\n  // Move point string\r\n, move: function(x, y) {\r\n    var box = this.bbox()\r\n\r\n    // get relative offset\r\n    x -= box.x\r\n    y -= box.y\r\n\r\n    // move every point\r\n    if (!isNaN(x) && !isNaN(y))\r\n      for (var i = this.value.length - 1; i >= 0; i--)\r\n        this.value[i] = [this.value[i][0] + x, this.value[i][1] + y]\r\n\r\n    return this\r\n  }\r\n  // Resize poly string\r\n, size: function(width, height) {\r\n    var i, box = this.bbox()\r\n\r\n    // recalculate position of all points according to new size\r\n    for (i = this.value.length - 1; i >= 0; i--) {\r\n      if(box.width) this.value[i][0] = ((this.value[i][0] - box.x) * width)  / box.width  + box.x\r\n      if(box.height) this.value[i][1] = ((this.value[i][1] - box.y) * height) / box.height + box.y\r\n    }\r\n\r\n    return this\r\n  }\r\n  // Get bounding box of points\r\n, bbox: function() {\r\n    SVG.parser.poly.setAttribute('points', this.toString())\r\n\r\n    return SVG.parser.poly.getBBox()\r\n  }\r\n})\r\n\nvar pathHandlers = {\r\n  M: function(c, p, p0) {\r\n    p.x = p0.x = c[0]\r\n    p.y = p0.y = c[1]\r\n\r\n    return ['M', p.x, p.y]\r\n  },\r\n  L: function(c, p) {\r\n    p.x = c[0]\r\n    p.y = c[1]\r\n    return ['L', c[0], c[1]]\r\n  },\r\n  H: function(c, p) {\r\n    p.x = c[0]\r\n    return ['H', c[0]]\r\n  },\r\n  V: function(c, p) {\r\n    p.y = c[0]\r\n    return ['V', c[0]]\r\n  },\r\n  C: function(c, p) {\r\n    p.x = c[4]\r\n    p.y = c[5]\r\n    return ['C', c[0], c[1], c[2], c[3], c[4], c[5]]\r\n  },\r\n  S: function(c, p) {\r\n    p.x = c[2]\r\n    p.y = c[3]\r\n    return ['S', c[0], c[1], c[2], c[3]]\r\n  },\r\n  Q: function(c, p) {\r\n    p.x = c[2]\r\n    p.y = c[3]\r\n    return ['Q', c[0], c[1], c[2], c[3]]\r\n  },\r\n  T: function(c, p) {\r\n    p.x = c[0]\r\n    p.y = c[1]\r\n    return ['T', c[0], c[1]]\r\n  },\r\n  Z: function(c, p, p0) {\r\n    p.x = p0.x\r\n    p.y = p0.y\r\n    return ['Z']\r\n  },\r\n  A: function(c, p) {\r\n    p.x = c[5]\r\n    p.y = c[6]\r\n    return ['A', c[0], c[1], c[2], c[3], c[4], c[5], c[6]]\r\n  }\r\n}\r\n\r\nvar mlhvqtcsa = 'mlhvqtcsaz'.split('')\r\n\r\nfor(var i = 0, il = mlhvqtcsa.length; i < il; ++i){\r\n  pathHandlers[mlhvqtcsa[i]] = (function(i){\r\n    return function(c, p, p0) {\r\n      if(i == 'H') c[0] = c[0] + p.x\r\n      else if(i == 'V') c[0] = c[0] + p.y\r\n      else if(i == 'A'){\r\n        c[5] = c[5] + p.x,\r\n        c[6] = c[6] + p.y\r\n      }\r\n      else\r\n        for(var j = 0, jl = c.length; j < jl; ++j) {\r\n          c[j] = c[j] + (j%2 ? p.y : p.x)\r\n        }\r\n\r\n      return pathHandlers[i](c, p, p0)\r\n    }\r\n  })(mlhvqtcsa[i].toUpperCase())\r\n}\r\n\r\n// Path points array\r\nSVG.PathArray = function(array, fallback) {\r\n  SVG.Array.call(this, array, fallback || [['M', 0, 0]])\r\n}\r\n\r\n// Inherit from SVG.Array\r\nSVG.PathArray.prototype = new SVG.Array\r\nSVG.PathArray.prototype.constructor = SVG.PathArray\r\n\r\nSVG.extend(SVG.PathArray, {\r\n  // Convert array to string\r\n  toString: function() {\r\n    return arrayToString(this.value)\r\n  }\r\n  // Move path string\r\n, move: function(x, y) {\r\n    // get bounding box of current situation\r\n    var box = this.bbox()\r\n\r\n    // get relative offset\r\n    x -= box.x\r\n    y -= box.y\r\n\r\n    if (!isNaN(x) && !isNaN(y)) {\r\n      // move every point\r\n      for (var l, i = this.value.length - 1; i >= 0; i--) {\r\n        l = this.value[i][0]\r\n\r\n        if (l == 'M' || l == 'L' || l == 'T')  {\r\n          this.value[i][1] += x\r\n          this.value[i][2] += y\r\n\r\n        } else if (l == 'H')  {\r\n          this.value[i][1] += x\r\n\r\n        } else if (l == 'V')  {\r\n          this.value[i][1] += y\r\n\r\n        } else if (l == 'C' || l == 'S' || l == 'Q')  {\r\n          this.value[i][1] += x\r\n          this.value[i][2] += y\r\n          this.value[i][3] += x\r\n          this.value[i][4] += y\r\n\r\n          if (l == 'C')  {\r\n            this.value[i][5] += x\r\n            this.value[i][6] += y\r\n          }\r\n\r\n        } else if (l == 'A')  {\r\n          this.value[i][6] += x\r\n          this.value[i][7] += y\r\n        }\r\n\r\n      }\r\n    }\r\n\r\n    return this\r\n  }\r\n  // Resize path string\r\n, size: function(width, height) {\r\n    // get bounding box of current situation\r\n    var i, l, box = this.bbox()\r\n\r\n    // recalculate position of all points according to new size\r\n    for (i = this.value.length - 1; i >= 0; i--) {\r\n      l = this.value[i][0]\r\n\r\n      if (l == 'M' || l == 'L' || l == 'T')  {\r\n        this.value[i][1] = ((this.value[i][1] - box.x) * width)  / box.width  + box.x\r\n        this.value[i][2] = ((this.value[i][2] - box.y) * height) / box.height + box.y\r\n\r\n      } else if (l == 'H')  {\r\n        this.value[i][1] = ((this.value[i][1] - box.x) * width)  / box.width  + box.x\r\n\r\n      } else if (l == 'V')  {\r\n        this.value[i][1] = ((this.value[i][1] - box.y) * height) / box.height + box.y\r\n\r\n      } else if (l == 'C' || l == 'S' || l == 'Q')  {\r\n        this.value[i][1] = ((this.value[i][1] - box.x) * width)  / box.width  + box.x\r\n        this.value[i][2] = ((this.value[i][2] - box.y) * height) / box.height + box.y\r\n        this.value[i][3] = ((this.value[i][3] - box.x) * width)  / box.width  + box.x\r\n        this.value[i][4] = ((this.value[i][4] - box.y) * height) / box.height + box.y\r\n\r\n        if (l == 'C')  {\r\n          this.value[i][5] = ((this.value[i][5] - box.x) * width)  / box.width  + box.x\r\n          this.value[i][6] = ((this.value[i][6] - box.y) * height) / box.height + box.y\r\n        }\r\n\r\n      } else if (l == 'A')  {\r\n        // resize radii\r\n        this.value[i][1] = (this.value[i][1] * width)  / box.width\r\n        this.value[i][2] = (this.value[i][2] * height) / box.height\r\n\r\n        // move position values\r\n        this.value[i][6] = ((this.value[i][6] - box.x) * width)  / box.width  + box.x\r\n        this.value[i][7] = ((this.value[i][7] - box.y) * height) / box.height + box.y\r\n      }\r\n\r\n    }\r\n\r\n    return this\r\n  }\r\n  // Test if the passed path array use the same path data commands as this path array\r\n, equalCommands: function(pathArray) {\r\n    var i, il, equalCommands\r\n\r\n    pathArray = new SVG.PathArray(pathArray)\r\n\r\n    equalCommands = this.value.length === pathArray.value.length\r\n    for(i = 0, il = this.value.length; equalCommands && i < il; i++) {\r\n      equalCommands = this.value[i][0] === pathArray.value[i][0]\r\n    }\r\n\r\n    return equalCommands\r\n  }\r\n  // Make path array morphable\r\n, morph: function(pathArray) {\r\n    pathArray = new SVG.PathArray(pathArray)\r\n\r\n    if(this.equalCommands(pathArray)) {\r\n      this.destination = pathArray\r\n    } else {\r\n      this.destination = null\r\n    }\r\n\r\n    return this\r\n  }\r\n  // Get morphed path array at given position\r\n, at: function(pos) {\r\n    // make sure a destination is defined\r\n    if (!this.destination) return this\r\n\r\n    var sourceArray = this.value\r\n      , destinationArray = this.destination.value\r\n      , array = [], pathArray = new SVG.PathArray()\r\n      , i, il, j, jl\r\n\r\n    // Animate has specified in the SVG spec\r\n    // See: https://www.w3.org/TR/SVG11/paths.html#PathElement\r\n    for (i = 0, il = sourceArray.length; i < il; i++) {\r\n      array[i] = [sourceArray[i][0]]\r\n      for(j = 1, jl = sourceArray[i].length; j < jl; j++) {\r\n        array[i][j] = sourceArray[i][j] + (destinationArray[i][j] - sourceArray[i][j]) * pos\r\n      }\r\n      // For the two flags of the elliptical arc command, the SVG spec say:\r\n      // Flags and booleans are interpolated as fractions between zero and one, with any non-zero value considered to be a value of one/true\r\n      // Elliptical arc command as an array followed by corresponding indexes:\r\n      // ['A', rx, ry, x-axis-rotation, large-arc-flag, sweep-flag, x, y]\r\n      //   0    1   2        3                 4             5      6  7\r\n      if(array[i][0] === 'A') {\r\n        array[i][4] = +(array[i][4] != 0)\r\n        array[i][5] = +(array[i][5] != 0)\r\n      }\r\n    }\r\n\r\n    // Directly modify the value of a path array, this is done this way for performance\r\n    pathArray.value = array\r\n    return pathArray\r\n  }\r\n  // Absolutize and parse path to array\r\n, parse: function(array) {\r\n    // if it's already a patharray, no need to parse it\r\n    if (array instanceof SVG.PathArray) return array.valueOf()\r\n\r\n    // prepare for parsing\r\n    var i, x0, y0, s, seg, arr\r\n      , x = 0\r\n      , y = 0\r\n      , paramCnt = { 'M':2, 'L':2, 'H':1, 'V':1, 'C':6, 'S':4, 'Q':4, 'T':2, 'A':7, 'Z':0 }\r\n\r\n    if(typeof array == 'string'){\r\n\r\n      array = array\r\n        .replace(SVG.regex.numbersWithDots, pathRegReplace) // convert 45.123.123 to 45.123 .123\r\n        .replace(SVG.regex.pathLetters, ' $& ') // put some room between letters and numbers\r\n        .replace(SVG.regex.hyphen, '$1 -')      // add space before hyphen\r\n        .trim()                                 // trim\r\n        .split(SVG.regex.delimiter)   // split into array\r\n\r\n    }else{\r\n      array = array.reduce(function(prev, curr){\r\n        return [].concat.call(prev, curr)\r\n      }, [])\r\n    }\r\n\r\n    // array now is an array containing all parts of a path e.g. ['M', '0', '0', 'L', '30', '30' ...]\r\n    var arr = []\r\n      , p = new SVG.Point()\r\n      , p0 = new SVG.Point()\r\n      , index = 0\r\n      , len = array.length\r\n\r\n    do{\r\n      // Test if we have a path letter\r\n      if(SVG.regex.isPathLetter.test(array[index])){\r\n        s = array[index]\r\n        ++index\r\n      // If last letter was a move command and we got no new, it defaults to [L]ine\r\n      }else if(s == 'M'){\r\n        s = 'L'\r\n      }else if(s == 'm'){\r\n        s = 'l'\r\n      }\r\n\r\n      arr.push(pathHandlers[s].call(null,\r\n          array.slice(index, (index = index + paramCnt[s.toUpperCase()])).map(parseFloat),\r\n          p, p0\r\n        )\r\n      )\r\n\r\n    }while(len > index)\r\n\r\n    return arr\r\n\r\n  }\r\n  // Get bounding box of path\r\n, bbox: function() {\r\n    SVG.parser.path.setAttribute('d', this.toString())\r\n\r\n    return SVG.parser.path.getBBox()\r\n  }\r\n\r\n})\r\n\n// Module for unit convertions\r\nSVG.Number = SVG.invent({\r\n  // Initialize\r\n  create: function(value, unit) {\r\n    // initialize defaults\r\n    this.value = 0\r\n    this.unit  = unit || ''\r\n\r\n    // parse value\r\n    if (typeof value === 'number') {\r\n      // ensure a valid numeric value\r\n      this.value = isNaN(value) ? 0 : !isFinite(value) ? (value < 0 ? -3.4e+38 : +3.4e+38) : value\r\n\r\n    } else if (typeof value === 'string') {\r\n      unit = value.match(SVG.regex.numberAndUnit)\r\n\r\n      if (unit) {\r\n        // make value numeric\r\n        this.value = parseFloat(unit[1])\r\n\r\n        // normalize\r\n        if (unit[5] == '%')\r\n          this.value /= 100\r\n        else if (unit[5] == 's')\r\n          this.value *= 1000\r\n\r\n        // store unit\r\n        this.unit = unit[5]\r\n      }\r\n\r\n    } else {\r\n      if (value instanceof SVG.Number) {\r\n        this.value = value.valueOf()\r\n        this.unit  = value.unit\r\n      }\r\n    }\r\n\r\n  }\r\n  // Add methods\r\n, extend: {\r\n    // Stringalize\r\n    toString: function() {\r\n      return (\r\n        this.unit == '%' ?\r\n          ~~(this.value * 1e8) / 1e6:\r\n        this.unit == 's' ?\r\n          this.value / 1e3 :\r\n          this.value\r\n      ) + this.unit\r\n    }\r\n  , toJSON: function() {\r\n      return this.toString()\r\n    }\r\n  , // Convert to primitive\r\n    valueOf: function() {\r\n      return this.value\r\n    }\r\n    // Add number\r\n  , plus: function(number) {\r\n      number = new SVG.Number(number)\r\n      return new SVG.Number(this + number, this.unit || number.unit)\r\n    }\r\n    // Subtract number\r\n  , minus: function(number) {\r\n      number = new SVG.Number(number)\r\n      return new SVG.Number(this - number, this.unit || number.unit)\r\n    }\r\n    // Multiply number\r\n  , times: function(number) {\r\n      number = new SVG.Number(number)\r\n      return new SVG.Number(this * number, this.unit || number.unit)\r\n    }\r\n    // Divide number\r\n  , divide: function(number) {\r\n      number = new SVG.Number(number)\r\n      return new SVG.Number(this / number, this.unit || number.unit)\r\n    }\r\n    // Convert to different unit\r\n  , to: function(unit) {\r\n      var number = new SVG.Number(this)\r\n\r\n      if (typeof unit === 'string')\r\n        number.unit = unit\r\n\r\n      return number\r\n    }\r\n    // Make number morphable\r\n  , morph: function(number) {\r\n      this.destination = new SVG.Number(number)\r\n\r\n      if(number.relative) {\r\n        this.destination.value += this.value\r\n      }\r\n\r\n      return this\r\n    }\r\n    // Get morphed number at given position\r\n  , at: function(pos) {\r\n      // Make sure a destination is defined\r\n      if (!this.destination) return this\r\n\r\n      // Generate new morphed number\r\n      return new SVG.Number(this.destination)\r\n          .minus(this)\r\n          .times(pos)\r\n          .plus(this)\r\n    }\r\n\r\n  }\r\n})\r\n\n\r\nSVG.Element = SVG.invent({\r\n  // Initialize node\r\n  create: function(node) {\r\n    // make stroke value accessible dynamically\r\n    this._stroke = SVG.defaults.attrs.stroke\r\n    this._event = null\r\n    this._events = {}\r\n\r\n    // initialize data object\r\n    this.dom = {}\r\n\r\n    // create circular reference\r\n    if (this.node = node) {\r\n      this.type = node.nodeName\r\n      this.node.instance = this\r\n      this._events = node._events || {}\r\n\r\n      // store current attribute value\r\n      this._stroke = node.getAttribute('stroke') || this._stroke\r\n    }\r\n  }\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Move over x-axis\r\n    x: function(x) {\r\n      return this.attr('x', x)\r\n    }\r\n    // Move over y-axis\r\n  , y: function(y) {\r\n      return this.attr('y', y)\r\n    }\r\n    // Move by center over x-axis\r\n  , cx: function(x) {\r\n      return x == null ? this.x() + this.width() / 2 : this.x(x - this.width() / 2)\r\n    }\r\n    // Move by center over y-axis\r\n  , cy: function(y) {\r\n      return y == null ? this.y() + this.height() / 2 : this.y(y - this.height() / 2)\r\n    }\r\n    // Move element to given x and y values\r\n  , move: function(x, y) {\r\n      return this.x(x).y(y)\r\n    }\r\n    // Move element by its center\r\n  , center: function(x, y) {\r\n      return this.cx(x).cy(y)\r\n    }\r\n    // Set width of element\r\n  , width: function(width) {\r\n      return this.attr('width', width)\r\n    }\r\n    // Set height of element\r\n  , height: function(height) {\r\n      return this.attr('height', height)\r\n    }\r\n    // Set element size to given width and height\r\n  , size: function(width, height) {\r\n      var p = proportionalSize(this, width, height)\r\n\r\n      return this\r\n        .width(new SVG.Number(p.width))\r\n        .height(new SVG.Number(p.height))\r\n    }\r\n    // Clone element\r\n  , clone: function(parent) {\r\n      // write dom data to the dom so the clone can pickup the data\r\n      this.writeDataToDom()\r\n\r\n      // clone element and assign new id\r\n      var clone = assignNewId(this.node.cloneNode(true))\r\n\r\n      // insert the clone in the given parent or after myself\r\n      if(parent) parent.add(clone)\r\n      else this.after(clone)\r\n\r\n      return clone\r\n    }\r\n    // Remove element\r\n  , remove: function() {\r\n      if (this.parent())\r\n        this.parent().removeElement(this)\r\n\r\n      return this\r\n    }\r\n    // Replace element\r\n  , replace: function(element) {\r\n      this.after(element).remove()\r\n\r\n      return element\r\n    }\r\n    // Add element to given container and return self\r\n  , addTo: function(parent) {\r\n      return parent.put(this)\r\n    }\r\n    // Add element to given container and return container\r\n  , putIn: function(parent) {\r\n      return parent.add(this)\r\n    }\r\n    // Get / set id\r\n  , id: function(id) {\r\n      return this.attr('id', id)\r\n    }\r\n    // Checks whether the given point inside the bounding box of the element\r\n  , inside: function(x, y) {\r\n      var box = this.bbox()\r\n\r\n      return x > box.x\r\n          && y > box.y\r\n          && x < box.x + box.width\r\n          && y < box.y + box.height\r\n    }\r\n    // Show element\r\n  , show: function() {\r\n      return this.style('display', '')\r\n    }\r\n    // Hide element\r\n  , hide: function() {\r\n      return this.style('display', 'none')\r\n    }\r\n    // Is element visible?\r\n  , visible: function() {\r\n      return this.style('display') != 'none'\r\n    }\r\n    // Return id on string conversion\r\n  , toString: function() {\r\n      return this.attr('id')\r\n    }\r\n    // Return array of classes on the node\r\n  , classes: function() {\r\n      var attr = this.attr('class')\r\n\r\n      return attr == null ? [] : attr.trim().split(SVG.regex.delimiter)\r\n    }\r\n    // Return true if class exists on the node, false otherwise\r\n  , hasClass: function(name) {\r\n      return this.classes().indexOf(name) != -1\r\n    }\r\n    // Add class to the node\r\n  , addClass: function(name) {\r\n      if (!this.hasClass(name)) {\r\n        var array = this.classes()\r\n        array.push(name)\r\n        this.attr('class', array.join(' '))\r\n      }\r\n\r\n      return this\r\n    }\r\n    // Remove class from the node\r\n  , removeClass: function(name) {\r\n      if (this.hasClass(name)) {\r\n        this.attr('class', this.classes().filter(function(c) {\r\n          return c != name\r\n        }).join(' '))\r\n      }\r\n\r\n      return this\r\n    }\r\n    // Toggle the presence of a class on the node\r\n  , toggleClass: function(name) {\r\n      return this.hasClass(name) ? this.removeClass(name) : this.addClass(name)\r\n    }\r\n    // Get referenced element form attribute value\r\n  , reference: function(attr) {\r\n      return SVG.get(this.attr(attr))\r\n    }\r\n    // Returns the parent element instance\r\n  , parent: function(type) {\r\n      var parent = this\r\n\r\n      // check for parent\r\n      if(!parent.node.parentNode) return null\r\n\r\n      // get parent element\r\n      parent = SVG.adopt(parent.node.parentNode)\r\n\r\n      if(!type) return parent\r\n\r\n      // loop trough ancestors if type is given\r\n      while(parent && parent.node instanceof window.SVGElement){\r\n        if(typeof type === 'string' ? parent.matches(type) : parent instanceof type) return parent\r\n        if(!parent.node.parentNode || parent.node.parentNode.nodeName == '#document' || parent.node.parentNode.nodeName == '#document-fragment') return null // #759, #720\r\n        parent = SVG.adopt(parent.node.parentNode)\r\n      }\r\n    }\r\n    // Get parent document\r\n  , doc: function() {\r\n      return this instanceof SVG.Doc ? this : this.parent(SVG.Doc)\r\n    }\r\n    // return array of all ancestors of given type up to the root svg\r\n  , parents: function(type) {\r\n      var parents = [], parent = this\r\n\r\n      do{\r\n        parent = parent.parent(type)\r\n        if(!parent || !parent.node) break\r\n\r\n        parents.push(parent)\r\n      } while(parent.parent)\r\n\r\n      return parents\r\n    }\r\n    // matches the element vs a css selector\r\n  , matches: function(selector){\r\n      return matches(this.node, selector)\r\n    }\r\n    // Returns the svg node to call native svg methods on it\r\n  , native: function() {\r\n      return this.node\r\n    }\r\n    // Import raw svg\r\n  , svg: function(svg) {\r\n      // create temporary holder\r\n      var well = document.createElement('svg')\r\n\r\n      // act as a setter if svg is given\r\n      if (svg && this instanceof SVG.Parent) {\r\n        // dump raw svg\r\n        well.innerHTML = '<svg>' + svg.replace(/\\n/, '').replace(/<([\\w:-]+)([^<]+?)\\/>/g, '<$1$2></$1>') + '</svg>'\r\n\r\n        // transplant nodes\r\n        for (var i = 0, il = well.firstChild.childNodes.length; i < il; i++)\r\n          this.node.appendChild(well.firstChild.firstChild)\r\n\r\n      // otherwise act as a getter\r\n      } else {\r\n        // create a wrapping svg element in case of partial content\r\n        well.appendChild(svg = document.createElement('svg'))\r\n\r\n        // write svgjs data to the dom\r\n        this.writeDataToDom()\r\n\r\n        // insert a copy of this node\r\n        svg.appendChild(this.node.cloneNode(true))\r\n\r\n        // return target element\r\n        return well.innerHTML.replace(/^<svg>/, '').replace(/<\\/svg>$/, '')\r\n      }\r\n\r\n      return this\r\n    }\r\n  // write svgjs data to the dom\r\n  , writeDataToDom: function() {\r\n\r\n      // dump variables recursively\r\n      if(this.each || this.lines){\r\n        var fn = this.each ? this : this.lines();\r\n        fn.each(function(){\r\n          this.writeDataToDom()\r\n        })\r\n      }\r\n\r\n      // remove previously set data\r\n      this.node.removeAttribute('svgjs:data')\r\n\r\n      if(Object.keys(this.dom).length)\r\n        this.node.setAttribute('svgjs:data', JSON.stringify(this.dom)) // see #428\r\n\r\n      return this\r\n    }\r\n  // set given data to the elements data property\r\n  , setData: function(o){\r\n      this.dom = o\r\n      return this\r\n    }\r\n  , is: function(obj){\r\n      return is(this, obj)\r\n    }\r\n  }\r\n})\r\n\nSVG.easing = {\r\n  '-': function(pos){return pos}\r\n, '<>':function(pos){return -Math.cos(pos * Math.PI) / 2 + 0.5}\r\n, '>': function(pos){return  Math.sin(pos * Math.PI / 2)}\r\n, '<': function(pos){return -Math.cos(pos * Math.PI / 2) + 1}\r\n}\r\n\r\nSVG.morph = function(pos){\r\n  return function(from, to) {\r\n    return new SVG.MorphObj(from, to).at(pos)\r\n  }\r\n}\r\n\r\nSVG.Situation = SVG.invent({\r\n\r\n  create: function(o){\r\n    this.init = false\r\n    this.reversed = false\r\n    this.reversing = false\r\n\r\n    this.duration = new SVG.Number(o.duration).valueOf()\r\n    this.delay = new SVG.Number(o.delay).valueOf()\r\n\r\n    this.start = +new Date() + this.delay\r\n    this.finish = this.start + this.duration\r\n    this.ease = o.ease\r\n\r\n    // this.loop is incremented from 0 to this.loops\r\n    // it is also incremented when in an infinite loop (when this.loops is true)\r\n    this.loop = 0\r\n    this.loops = false\r\n\r\n    this.animations = {\r\n      // functionToCall: [list of morphable objects]\r\n      // e.g. move: [SVG.Number, SVG.Number]\r\n    }\r\n\r\n    this.attrs = {\r\n      // holds all attributes which are not represented from a function svg.js provides\r\n      // e.g. someAttr: SVG.Number\r\n    }\r\n\r\n    this.styles = {\r\n      // holds all styles which should be animated\r\n      // e.g. fill-color: SVG.Color\r\n    }\r\n\r\n    this.transforms = [\r\n      // holds all transformations as transformation objects\r\n      // e.g. [SVG.Rotate, SVG.Translate, SVG.Matrix]\r\n    ]\r\n\r\n    this.once = {\r\n      // functions to fire at a specific position\r\n      // e.g. \"0.5\": function foo(){}\r\n    }\r\n\r\n  }\r\n\r\n})\r\n\r\n\r\nSVG.FX = SVG.invent({\r\n\r\n  create: function(element) {\r\n    this._target = element\r\n    this.situations = []\r\n    this.active = false\r\n    this.situation = null\r\n    this.paused = false\r\n    this.lastPos = 0\r\n    this.pos = 0\r\n    // The absolute position of an animation is its position in the context of its complete duration (including delay and loops)\r\n    // When performing a delay, absPos is below 0 and when performing a loop, its value is above 1\r\n    this.absPos = 0\r\n    this._speed = 1\r\n  }\r\n\r\n, extend: {\r\n\r\n    /**\r\n     * sets or returns the target of this animation\r\n     * @param o object || number In case of Object it holds all parameters. In case of number its the duration of the animation\r\n     * @param ease function || string Function which should be used for easing or easing keyword\r\n     * @param delay Number indicating the delay before the animation starts\r\n     * @return target || this\r\n     */\r\n    animate: function(o, ease, delay){\r\n\r\n      if(typeof o == 'object'){\r\n        ease = o.ease\r\n        delay = o.delay\r\n        o = o.duration\r\n      }\r\n\r\n      var situation = new SVG.Situation({\r\n        duration: o || 1000,\r\n        delay: delay || 0,\r\n        ease: SVG.easing[ease || '-'] || ease\r\n      })\r\n\r\n      this.queue(situation)\r\n\r\n      return this\r\n    }\r\n\r\n    /**\r\n     * sets a delay before the next element of the queue is called\r\n     * @param delay Duration of delay in milliseconds\r\n     * @return this.target()\r\n     */\r\n  , delay: function(delay){\r\n      // The delay is performed by an empty situation with its duration\r\n      // attribute set to the duration of the delay\r\n      var situation = new SVG.Situation({\r\n        duration: delay,\r\n        delay: 0,\r\n        ease: SVG.easing['-']\r\n      })\r\n\r\n      return this.queue(situation)\r\n    }\r\n\r\n    /**\r\n     * sets or returns the target of this animation\r\n     * @param null || target SVG.Element which should be set as new target\r\n     * @return target || this\r\n     */\r\n  , target: function(target){\r\n      if(target && target instanceof SVG.Element){\r\n        this._target = target\r\n        return this\r\n      }\r\n\r\n      return this._target\r\n    }\r\n\r\n    // returns the absolute position at a given time\r\n  , timeToAbsPos: function(timestamp){\r\n      return (timestamp - this.situation.start) / (this.situation.duration/this._speed)\r\n    }\r\n\r\n    // returns the timestamp from a given absolute positon\r\n  , absPosToTime: function(absPos){\r\n      return this.situation.duration/this._speed * absPos + this.situation.start\r\n    }\r\n\r\n    // starts the animationloop\r\n  , startAnimFrame: function(){\r\n      this.stopAnimFrame()\r\n      this.animationFrame = window.requestAnimationFrame(function(){ this.step() }.bind(this))\r\n    }\r\n\r\n    // cancels the animationframe\r\n  , stopAnimFrame: function(){\r\n      window.cancelAnimationFrame(this.animationFrame)\r\n    }\r\n\r\n    // kicks off the animation - only does something when the queue is currently not active and at least one situation is set\r\n  , start: function(){\r\n      // dont start if already started\r\n      if(!this.active && this.situation){\r\n        this.active = true\r\n        this.startCurrent()\r\n      }\r\n\r\n      return this\r\n    }\r\n\r\n    // start the current situation\r\n  , startCurrent: function(){\r\n      this.situation.start = +new Date + this.situation.delay/this._speed\r\n      this.situation.finish = this.situation.start + this.situation.duration/this._speed\r\n      return this.initAnimations().step()\r\n    }\r\n\r\n    /**\r\n     * adds a function / Situation to the animation queue\r\n     * @param fn function / situation to add\r\n     * @return this\r\n     */\r\n  , queue: function(fn){\r\n      if(typeof fn == 'function' || fn instanceof SVG.Situation)\r\n        this.situations.push(fn)\r\n\r\n      if(!this.situation) this.situation = this.situations.shift()\r\n\r\n      return this\r\n    }\r\n\r\n    /**\r\n     * pulls next element from the queue and execute it\r\n     * @return this\r\n     */\r\n  , dequeue: function(){\r\n      // stop current animation\r\n      this.stop()\r\n\r\n      // get next animation from queue\r\n      this.situation = this.situations.shift()\r\n\r\n      if(this.situation){\r\n        if(this.situation instanceof SVG.Situation) {\r\n          this.start()\r\n        } else {\r\n          // If it is not a SVG.Situation, then it is a function, we execute it\r\n          this.situation.call(this)\r\n        }\r\n      }\r\n\r\n      return this\r\n    }\r\n\r\n    // updates all animations to the current state of the element\r\n    // this is important when one property could be changed from another property\r\n  , initAnimations: function() {\r\n      var i, j, source\r\n      var s = this.situation\r\n\r\n      if(s.init) return this\r\n\r\n      for(i in s.animations){\r\n        source = this.target()[i]()\r\n\r\n        if(!Array.isArray(source)) {\r\n          source = [source]\r\n        }\r\n\r\n        if(!Array.isArray(s.animations[i])) {\r\n          s.animations[i] = [s.animations[i]]\r\n        }\r\n\r\n        //if(s.animations[i].length > source.length) {\r\n        //  source.concat = source.concat(s.animations[i].slice(source.length, s.animations[i].length))\r\n        //}\r\n\r\n        for(j = source.length; j--;) {\r\n          // The condition is because some methods return a normal number instead\r\n          // of a SVG.Number\r\n          if(s.animations[i][j] instanceof SVG.Number)\r\n            source[j] = new SVG.Number(source[j])\r\n\r\n          s.animations[i][j] = source[j].morph(s.animations[i][j])\r\n        }\r\n      }\r\n\r\n      for(i in s.attrs){\r\n        s.attrs[i] = new SVG.MorphObj(this.target().attr(i), s.attrs[i])\r\n      }\r\n\r\n      for(i in s.styles){\r\n        s.styles[i] = new SVG.MorphObj(this.target().style(i), s.styles[i])\r\n      }\r\n\r\n      s.initialTransformation = this.target().matrixify()\r\n\r\n      s.init = true\r\n      return this\r\n    }\r\n  , clearQueue: function(){\r\n      this.situations = []\r\n      return this\r\n    }\r\n  , clearCurrent: function(){\r\n      this.situation = null\r\n      return this\r\n    }\r\n    /** stops the animation immediately\r\n     * @param jumpToEnd A Boolean indicating whether to complete the current animation immediately.\r\n     * @param clearQueue A Boolean indicating whether to remove queued animation as well.\r\n     * @return this\r\n     */\r\n  , stop: function(jumpToEnd, clearQueue){\r\n      var active = this.active\r\n      this.active = false\r\n\r\n      if(clearQueue){\r\n        this.clearQueue()\r\n      }\r\n\r\n      if(jumpToEnd && this.situation){\r\n        // initialize the situation if it was not\r\n        !active && this.startCurrent()\r\n        this.atEnd()\r\n      }\r\n\r\n      this.stopAnimFrame()\r\n\r\n      return this.clearCurrent()\r\n    }\r\n\r\n    /** resets the element to the state where the current element has started\r\n     * @return this\r\n     */\r\n  , reset: function(){\r\n      if(this.situation){\r\n        var temp = this.situation\r\n        this.stop()\r\n        this.situation = temp\r\n        this.atStart()\r\n      }\r\n      return this\r\n    }\r\n\r\n    // Stop the currently-running animation, remove all queued animations, and complete all animations for the element.\r\n  , finish: function(){\r\n\r\n      this.stop(true, false)\r\n\r\n      while(this.dequeue().situation && this.stop(true, false));\r\n\r\n      this.clearQueue().clearCurrent()\r\n\r\n      return this\r\n    }\r\n\r\n    // set the internal animation pointer at the start position, before any loops, and updates the visualisation\r\n  , atStart: function() {\r\n      return this.at(0, true)\r\n    }\r\n\r\n    // set the internal animation pointer at the end position, after all the loops, and updates the visualisation\r\n  , atEnd: function() {\r\n      if (this.situation.loops === true) {\r\n        // If in a infinite loop, we end the current iteration\r\n        this.situation.loops = this.situation.loop + 1\r\n      }\r\n\r\n      if(typeof this.situation.loops == 'number') {\r\n        // If performing a finite number of loops, we go after all the loops\r\n        return this.at(this.situation.loops, true)\r\n      } else {\r\n        // If no loops, we just go at the end\r\n        return this.at(1, true)\r\n      }\r\n    }\r\n\r\n    // set the internal animation pointer to the specified position and updates the visualisation\r\n    // if isAbsPos is true, pos is treated as an absolute position\r\n  , at: function(pos, isAbsPos){\r\n      var durDivSpd = this.situation.duration/this._speed\r\n\r\n      this.absPos = pos\r\n      // If pos is not an absolute position, we convert it into one\r\n      if (!isAbsPos) {\r\n        if (this.situation.reversed) this.absPos = 1 - this.absPos\r\n        this.absPos += this.situation.loop\r\n      }\r\n\r\n      this.situation.start = +new Date - this.absPos * durDivSpd\r\n      this.situation.finish = this.situation.start + durDivSpd\r\n\r\n      return this.step(true)\r\n    }\r\n\r\n    /**\r\n     * sets or returns the speed of the animations\r\n     * @param speed null || Number The new speed of the animations\r\n     * @return Number || this\r\n     */\r\n  , speed: function(speed){\r\n      if (speed === 0) return this.pause()\r\n\r\n      if (speed) {\r\n        this._speed = speed\r\n        // We use an absolute position here so that speed can affect the delay before the animation\r\n        return this.at(this.absPos, true)\r\n      } else return this._speed\r\n    }\r\n\r\n    // Make loopable\r\n  , loop: function(times, reverse) {\r\n      var c = this.last()\r\n\r\n      // store total loops\r\n      c.loops = (times != null) ? times : true\r\n      c.loop = 0\r\n\r\n      if(reverse) c.reversing = true\r\n      return this\r\n    }\r\n\r\n    // pauses the animation\r\n  , pause: function(){\r\n      this.paused = true\r\n      this.stopAnimFrame()\r\n\r\n      return this\r\n    }\r\n\r\n    // unpause the animation\r\n  , play: function(){\r\n      if(!this.paused) return this\r\n      this.paused = false\r\n      // We use an absolute position here so that the delay before the animation can be paused\r\n      return this.at(this.absPos, true)\r\n    }\r\n\r\n    /**\r\n     * toggle or set the direction of the animation\r\n     * true sets direction to backwards while false sets it to forwards\r\n     * @param reversed Boolean indicating whether to reverse the animation or not (default: toggle the reverse status)\r\n     * @return this\r\n     */\r\n  , reverse: function(reversed){\r\n      var c = this.last()\r\n\r\n      if(typeof reversed == 'undefined') c.reversed = !c.reversed\r\n      else c.reversed = reversed\r\n\r\n      return this\r\n    }\r\n\r\n\r\n    /**\r\n     * returns a float from 0-1 indicating the progress of the current animation\r\n     * @param eased Boolean indicating whether the returned position should be eased or not\r\n     * @return number\r\n     */\r\n  , progress: function(easeIt){\r\n      return easeIt ? this.situation.ease(this.pos) : this.pos\r\n    }\r\n\r\n    /**\r\n     * adds a callback function which is called when the current animation is finished\r\n     * @param fn Function which should be executed as callback\r\n     * @return number\r\n     */\r\n  , after: function(fn){\r\n      var c = this.last()\r\n        , wrapper = function wrapper(e){\r\n            if(e.detail.situation == c){\r\n              fn.call(this, c)\r\n              this.off('finished.fx', wrapper) // prevent memory leak\r\n            }\r\n          }\r\n\r\n      this.target().on('finished.fx', wrapper)\r\n\r\n      return this._callStart()\r\n    }\r\n\r\n    // adds a callback which is called whenever one animation step is performed\r\n  , during: function(fn){\r\n      var c = this.last()\r\n        , wrapper = function(e){\r\n            if(e.detail.situation == c){\r\n              fn.call(this, e.detail.pos, SVG.morph(e.detail.pos), e.detail.eased, c)\r\n            }\r\n          }\r\n\r\n      // see above\r\n      this.target().off('during.fx', wrapper).on('during.fx', wrapper)\r\n\r\n      this.after(function(){\r\n        this.off('during.fx', wrapper)\r\n      })\r\n\r\n      return this._callStart()\r\n    }\r\n\r\n    // calls after ALL animations in the queue are finished\r\n  , afterAll: function(fn){\r\n      var wrapper = function wrapper(e){\r\n            fn.call(this)\r\n            this.off('allfinished.fx', wrapper)\r\n          }\r\n\r\n      // see above\r\n      this.target().off('allfinished.fx', wrapper).on('allfinished.fx', wrapper)\r\n\r\n      return this._callStart()\r\n    }\r\n\r\n    // calls on every animation step for all animations\r\n  , duringAll: function(fn){\r\n      var wrapper = function(e){\r\n            fn.call(this, e.detail.pos, SVG.morph(e.detail.pos), e.detail.eased, e.detail.situation)\r\n          }\r\n\r\n      this.target().off('during.fx', wrapper).on('during.fx', wrapper)\r\n\r\n      this.afterAll(function(){\r\n        this.off('during.fx', wrapper)\r\n      })\r\n\r\n      return this._callStart()\r\n    }\r\n\r\n  , last: function(){\r\n      return this.situations.length ? this.situations[this.situations.length-1] : this.situation\r\n    }\r\n\r\n    // adds one property to the animations\r\n  , add: function(method, args, type){\r\n      this.last()[type || 'animations'][method] = args\r\n      return this._callStart()\r\n    }\r\n\r\n    /** perform one step of the animation\r\n     *  @param ignoreTime Boolean indicating whether to ignore time and use position directly or recalculate position based on time\r\n     *  @return this\r\n     */\r\n  , step: function(ignoreTime){\r\n\r\n      // convert current time to an absolute position\r\n      if(!ignoreTime) this.absPos = this.timeToAbsPos(+new Date)\r\n\r\n      // This part convert an absolute position to a position\r\n      if(this.situation.loops !== false) {\r\n        var absPos, absPosInt, lastLoop\r\n\r\n        // If the absolute position is below 0, we just treat it as if it was 0\r\n        absPos = Math.max(this.absPos, 0)\r\n        absPosInt = Math.floor(absPos)\r\n\r\n        if(this.situation.loops === true || absPosInt < this.situation.loops) {\r\n          this.pos = absPos - absPosInt\r\n          lastLoop = this.situation.loop\r\n          this.situation.loop = absPosInt\r\n        } else {\r\n          this.absPos = this.situation.loops\r\n          this.pos = 1\r\n          // The -1 here is because we don't want to toggle reversed when all the loops have been completed\r\n          lastLoop = this.situation.loop - 1\r\n          this.situation.loop = this.situation.loops\r\n        }\r\n\r\n        if(this.situation.reversing) {\r\n          // Toggle reversed if an odd number of loops as occured since the last call of step\r\n          this.situation.reversed = this.situation.reversed != Boolean((this.situation.loop - lastLoop) % 2)\r\n        }\r\n\r\n      } else {\r\n        // If there are no loop, the absolute position must not be above 1\r\n        this.absPos = Math.min(this.absPos, 1)\r\n        this.pos = this.absPos\r\n      }\r\n\r\n      // while the absolute position can be below 0, the position must not be below 0\r\n      if(this.pos < 0) this.pos = 0\r\n\r\n      if(this.situation.reversed) this.pos = 1 - this.pos\r\n\r\n\r\n      // apply easing\r\n      var eased = this.situation.ease(this.pos)\r\n\r\n      // call once-callbacks\r\n      for(var i in this.situation.once){\r\n        if(i > this.lastPos && i <= eased){\r\n          this.situation.once[i].call(this.target(), this.pos, eased)\r\n          delete this.situation.once[i]\r\n        }\r\n      }\r\n\r\n      // fire during callback with position, eased position and current situation as parameter\r\n      if(this.active) this.target().fire('during', {pos: this.pos, eased: eased, fx: this, situation: this.situation})\r\n\r\n      // the user may call stop or finish in the during callback\r\n      // so make sure that we still have a valid situation\r\n      if(!this.situation){\r\n        return this\r\n      }\r\n\r\n      // apply the actual animation to every property\r\n      this.eachAt()\r\n\r\n      // do final code when situation is finished\r\n      if((this.pos == 1 && !this.situation.reversed) || (this.situation.reversed && this.pos == 0)){\r\n\r\n        // stop animation callback\r\n        this.stopAnimFrame()\r\n\r\n        // fire finished callback with current situation as parameter\r\n        this.target().fire('finished', {fx:this, situation: this.situation})\r\n\r\n        if(!this.situations.length){\r\n          this.target().fire('allfinished')\r\n\r\n          // Recheck the length since the user may call animate in the afterAll callback\r\n          if(!this.situations.length){\r\n            this.target().off('.fx') // there shouldnt be any binding left, but to make sure...\r\n            this.active = false\r\n          }\r\n        }\r\n\r\n        // start next animation\r\n        if(this.active) this.dequeue()\r\n        else this.clearCurrent()\r\n\r\n      }else if(!this.paused && this.active){\r\n        // we continue animating when we are not at the end\r\n        this.startAnimFrame()\r\n      }\r\n\r\n      // save last eased position for once callback triggering\r\n      this.lastPos = eased\r\n      return this\r\n\r\n    }\r\n\r\n    // calculates the step for every property and calls block with it\r\n  , eachAt: function(){\r\n      var i, len, at, self = this, target = this.target(), s = this.situation\r\n\r\n      // apply animations which can be called trough a method\r\n      for(i in s.animations){\r\n\r\n        at = [].concat(s.animations[i]).map(function(el){\r\n          return typeof el !== 'string' && el.at ? el.at(s.ease(self.pos), self.pos) : el\r\n        })\r\n\r\n        target[i].apply(target, at)\r\n\r\n      }\r\n\r\n      // apply animation which has to be applied with attr()\r\n      for(i in s.attrs){\r\n\r\n        at = [i].concat(s.attrs[i]).map(function(el){\r\n          return typeof el !== 'string' && el.at ? el.at(s.ease(self.pos), self.pos) : el\r\n        })\r\n\r\n        target.attr.apply(target, at)\r\n\r\n      }\r\n\r\n      // apply animation which has to be applied with style()\r\n      for(i in s.styles){\r\n\r\n        at = [i].concat(s.styles[i]).map(function(el){\r\n          return typeof el !== 'string' && el.at ? el.at(s.ease(self.pos), self.pos) : el\r\n        })\r\n\r\n        target.style.apply(target, at)\r\n\r\n      }\r\n\r\n      // animate initialTransformation which has to be chained\r\n      if(s.transforms.length){\r\n\r\n        // get initial initialTransformation\r\n        at = s.initialTransformation\r\n        for(i = 0, len = s.transforms.length; i < len; i++){\r\n\r\n          // get next transformation in chain\r\n          var a = s.transforms[i]\r\n\r\n          // multiply matrix directly\r\n          if(a instanceof SVG.Matrix){\r\n\r\n            if(a.relative){\r\n              at = at.multiply(new SVG.Matrix().morph(a).at(s.ease(this.pos)))\r\n            }else{\r\n              at = at.morph(a).at(s.ease(this.pos))\r\n            }\r\n            continue\r\n          }\r\n\r\n          // when transformation is absolute we have to reset the needed transformation first\r\n          if(!a.relative)\r\n            a.undo(at.extract())\r\n\r\n          // and reapply it after\r\n          at = at.multiply(a.at(s.ease(this.pos)))\r\n\r\n        }\r\n\r\n        // set new matrix on element\r\n        target.matrix(at)\r\n      }\r\n\r\n      return this\r\n\r\n    }\r\n\r\n\r\n    // adds an once-callback which is called at a specific position and never again\r\n  , once: function(pos, fn, isEased){\r\n      var c = this.last()\r\n      if(!isEased) pos = c.ease(pos)\r\n\r\n      c.once[pos] = fn\r\n\r\n      return this\r\n    }\r\n\r\n  , _callStart: function() {\r\n      setTimeout(function(){this.start()}.bind(this), 0)\r\n      return this\r\n    }\r\n\r\n  }\r\n\r\n, parent: SVG.Element\r\n\r\n  // Add method to parent elements\r\n, construct: {\r\n    // Get fx module or create a new one, then animate with given duration and ease\r\n    animate: function(o, ease, delay) {\r\n      return (this.fx || (this.fx = new SVG.FX(this))).animate(o, ease, delay)\r\n    }\r\n  , delay: function(delay){\r\n      return (this.fx || (this.fx = new SVG.FX(this))).delay(delay)\r\n    }\r\n  , stop: function(jumpToEnd, clearQueue) {\r\n      if (this.fx)\r\n        this.fx.stop(jumpToEnd, clearQueue)\r\n\r\n      return this\r\n    }\r\n  , finish: function() {\r\n      if (this.fx)\r\n        this.fx.finish()\r\n\r\n      return this\r\n    }\r\n    // Pause current animation\r\n  , pause: function() {\r\n      if (this.fx)\r\n        this.fx.pause()\r\n\r\n      return this\r\n    }\r\n    // Play paused current animation\r\n  , play: function() {\r\n      if (this.fx)\r\n        this.fx.play()\r\n\r\n      return this\r\n    }\r\n    // Set/Get the speed of the animations\r\n  , speed: function(speed) {\r\n      if (this.fx)\r\n        if (speed == null)\r\n          return this.fx.speed()\r\n        else\r\n          this.fx.speed(speed)\r\n\r\n      return this\r\n    }\r\n  }\r\n\r\n})\r\n\r\n// MorphObj is used whenever no morphable object is given\r\nSVG.MorphObj = SVG.invent({\r\n\r\n  create: function(from, to){\r\n    // prepare color for morphing\r\n    if(SVG.Color.isColor(to)) return new SVG.Color(from).morph(to)\r\n    // check if we have a list of values\r\n    if(SVG.regex.delimiter.test(from)) {\r\n      // prepare path for morphing\r\n      if(SVG.regex.pathLetters.test(from)) return new SVG.PathArray(from).morph(to)\r\n      // prepare value list for morphing\r\n      else return new SVG.Array(from).morph(to)\r\n    }\r\n    // prepare number for morphing\r\n    if(SVG.regex.numberAndUnit.test(to)) return new SVG.Number(from).morph(to)\r\n\r\n    // prepare for plain morphing\r\n    this.value = from\r\n    this.destination = to\r\n  }\r\n\r\n, extend: {\r\n    at: function(pos, real){\r\n      return real < 1 ? this.value : this.destination\r\n    },\r\n\r\n    valueOf: function(){\r\n      return this.value\r\n    }\r\n  }\r\n\r\n})\r\n\r\nSVG.extend(SVG.FX, {\r\n  // Add animatable attributes\r\n  attr: function(a, v, relative) {\r\n    // apply attributes individually\r\n    if (typeof a == 'object') {\r\n      for (var key in a)\r\n        this.attr(key, a[key])\r\n\r\n    } else {\r\n      this.add(a, v, 'attrs')\r\n    }\r\n\r\n    return this\r\n  }\r\n  // Add animatable styles\r\n, style: function(s, v) {\r\n    if (typeof s == 'object')\r\n      for (var key in s)\r\n        this.style(key, s[key])\r\n\r\n    else\r\n      this.add(s, v, 'styles')\r\n\r\n    return this\r\n  }\r\n  // Animatable x-axis\r\n, x: function(x, relative) {\r\n    if(this.target() instanceof SVG.G){\r\n      this.transform({x:x}, relative)\r\n      return this\r\n    }\r\n\r\n    var num = new SVG.Number(x)\r\n    num.relative = relative\r\n    return this.add('x', num)\r\n  }\r\n  // Animatable y-axis\r\n, y: function(y, relative) {\r\n    if(this.target() instanceof SVG.G){\r\n      this.transform({y:y}, relative)\r\n      return this\r\n    }\r\n\r\n    var num = new SVG.Number(y)\r\n    num.relative = relative\r\n    return this.add('y', num)\r\n  }\r\n  // Animatable center x-axis\r\n, cx: function(x) {\r\n    return this.add('cx', new SVG.Number(x))\r\n  }\r\n  // Animatable center y-axis\r\n, cy: function(y) {\r\n    return this.add('cy', new SVG.Number(y))\r\n  }\r\n  // Add animatable move\r\n, move: function(x, y) {\r\n    return this.x(x).y(y)\r\n  }\r\n  // Add animatable center\r\n, center: function(x, y) {\r\n    return this.cx(x).cy(y)\r\n  }\r\n  // Add animatable size\r\n, size: function(width, height) {\r\n    if (this.target() instanceof SVG.Text) {\r\n      // animate font size for Text elements\r\n      this.attr('font-size', width)\r\n\r\n    } else {\r\n      // animate bbox based size for all other elements\r\n      var box\r\n\r\n      if(!width || !height){\r\n        box = this.target().bbox()\r\n      }\r\n\r\n      if(!width){\r\n        width = box.width / box.height  * height\r\n      }\r\n\r\n      if(!height){\r\n        height = box.height / box.width  * width\r\n      }\r\n\r\n      this.add('width' , new SVG.Number(width))\r\n          .add('height', new SVG.Number(height))\r\n\r\n    }\r\n\r\n    return this\r\n  }\r\n  // Add animatable width\r\n, width: function(width) {\r\n    return this.add('width', new SVG.Number(width))\r\n  }\r\n  // Add animatable height\r\n, height: function(height) {\r\n    return this.add('height', new SVG.Number(height))\r\n  }\r\n  // Add animatable plot\r\n, plot: function(a, b, c, d) {\r\n    // Lines can be plotted with 4 arguments\r\n    if(arguments.length == 4) {\r\n      return this.plot([a, b, c, d])\r\n    }\r\n\r\n    return this.add('plot', new (this.target().morphArray)(a))\r\n  }\r\n  // Add leading method\r\n, leading: function(value) {\r\n    return this.target().leading ?\r\n      this.add('leading', new SVG.Number(value)) :\r\n      this\r\n  }\r\n  // Add animatable viewbox\r\n, viewbox: function(x, y, width, height) {\r\n    if (this.target() instanceof SVG.Container) {\r\n      this.add('viewbox', new SVG.ViewBox(x, y, width, height))\r\n    }\r\n\r\n    return this\r\n  }\r\n, update: function(o) {\r\n    if (this.target() instanceof SVG.Stop) {\r\n      if (typeof o == 'number' || o instanceof SVG.Number) {\r\n        return this.update({\r\n          offset:  arguments[0]\r\n        , color:   arguments[1]\r\n        , opacity: arguments[2]\r\n        })\r\n      }\r\n\r\n      if (o.opacity != null) this.attr('stop-opacity', o.opacity)\r\n      if (o.color   != null) this.attr('stop-color', o.color)\r\n      if (o.offset  != null) this.attr('offset', o.offset)\r\n    }\r\n\r\n    return this\r\n  }\r\n})\r\n\nSVG.Box = SVG.invent({\r\n  create: function(x, y, width, height) {\r\n    if (typeof x == 'object' && !(x instanceof SVG.Element)) {\r\n      // chromes getBoundingClientRect has no x and y property\r\n      return SVG.Box.call(this, x.left != null ? x.left : x.x , x.top != null ? x.top : x.y, x.width, x.height)\r\n    } else if (arguments.length == 4) {\r\n      this.x = x\r\n      this.y = y\r\n      this.width = width\r\n      this.height = height\r\n    }\r\n\r\n    // add center, right, bottom...\r\n    fullBox(this)\r\n  }\r\n, extend: {\r\n    // Merge rect box with another, return a new instance\r\n    merge: function(box) {\r\n      var b = new this.constructor()\r\n\r\n      // merge boxes\r\n      b.x      = Math.min(this.x, box.x)\r\n      b.y      = Math.min(this.y, box.y)\r\n      b.width  = Math.max(this.x + this.width,  box.x + box.width)  - b.x\r\n      b.height = Math.max(this.y + this.height, box.y + box.height) - b.y\r\n\r\n      return fullBox(b)\r\n    }\r\n\r\n  , transform: function(m) {\r\n      var xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, p, bbox\r\n\r\n      var pts = [\r\n        new SVG.Point(this.x, this.y),\r\n        new SVG.Point(this.x2, this.y),\r\n        new SVG.Point(this.x, this.y2),\r\n        new SVG.Point(this.x2, this.y2)\r\n      ]\r\n\r\n      pts.forEach(function(p) {\r\n        p = p.transform(m)\r\n        xMin = Math.min(xMin,p.x)\r\n        xMax = Math.max(xMax,p.x)\r\n        yMin = Math.min(yMin,p.y)\r\n        yMax = Math.max(yMax,p.y)\r\n      })\r\n\r\n      bbox = new this.constructor()\r\n      bbox.x = xMin\r\n      bbox.width = xMax-xMin\r\n      bbox.y = yMin\r\n      bbox.height = yMax-yMin\r\n\r\n      fullBox(bbox)\r\n\r\n      return bbox\r\n    }\r\n  }\r\n})\r\n\r\nSVG.BBox = SVG.invent({\r\n  // Initialize\r\n  create: function(element) {\r\n    SVG.Box.apply(this, [].slice.call(arguments))\r\n\r\n    // get values if element is given\r\n    if (element instanceof SVG.Element) {\r\n      var box\r\n\r\n      // yes this is ugly, but Firefox can be a pain when it comes to elements that are not yet rendered\r\n      try {\r\n\r\n        if (!document.documentElement.contains){\r\n          // This is IE - it does not support contains() for top-level SVGs\r\n          var topParent = element.node\r\n          while (topParent.parentNode){\r\n            topParent = topParent.parentNode\r\n          }\r\n          if (topParent != document) throw new Exception('Element not in the dom')\r\n        } else {\r\n          // the element is NOT in the dom, throw error\r\n          if(!document.documentElement.contains(element.node)) throw new Exception('Element not in the dom')\r\n        }\r\n\r\n        // find native bbox\r\n        box = element.node.getBBox()\r\n      } catch(e) {\r\n        if(element instanceof SVG.Shape){\r\n          var clone = element.clone(SVG.parser.draw.instance).show()\r\n          box = clone.node.getBBox()\r\n          clone.remove()\r\n        }else{\r\n          box = {\r\n            x:      element.node.clientLeft\r\n          , y:      element.node.clientTop\r\n          , width:  element.node.clientWidth\r\n          , height: element.node.clientHeight\r\n          }\r\n        }\r\n      }\r\n\r\n      SVG.Box.call(this, box)\r\n    }\r\n\r\n  }\r\n\r\n  // Define ancestor\r\n, inherit: SVG.Box\r\n\r\n  // Define Parent\r\n, parent: SVG.Element\r\n\r\n  // Constructor\r\n, construct: {\r\n    // Get bounding box\r\n    bbox: function() {\r\n      return new SVG.BBox(this)\r\n    }\r\n  }\r\n\r\n})\r\n\r\nSVG.BBox.prototype.constructor = SVG.BBox\r\n\r\n\r\nSVG.extend(SVG.Element, {\r\n  tbox: function(){\r\n    console.warn('Use of TBox is deprecated and mapped to RBox. Use .rbox() instead.')\r\n    return this.rbox(this.doc())\r\n  }\r\n})\r\n\r\nSVG.RBox = SVG.invent({\r\n  // Initialize\r\n  create: function(element) {\r\n    SVG.Box.apply(this, [].slice.call(arguments))\r\n\r\n    if (element instanceof SVG.Element) {\r\n      SVG.Box.call(this, element.node.getBoundingClientRect())\r\n    }\r\n  }\r\n\r\n, inherit: SVG.Box\r\n\r\n  // define Parent\r\n, parent: SVG.Element\r\n\r\n, extend: {\r\n    addOffset: function() {\r\n      // offset by window scroll position, because getBoundingClientRect changes when window is scrolled\r\n      this.x += window.pageXOffset\r\n      this.y += window.pageYOffset\r\n      return this\r\n    }\r\n  }\r\n\r\n  // Constructor\r\n, construct: {\r\n    // Get rect box\r\n    rbox: function(el) {\r\n      if (el) return new SVG.RBox(this).transform(el.screenCTM().inverse())\r\n      return new SVG.RBox(this).addOffset()\r\n    }\r\n  }\r\n\r\n})\r\n\r\nSVG.RBox.prototype.constructor = SVG.RBox\r\n\nSVG.Matrix = SVG.invent({\r\n  // Initialize\r\n  create: function(source) {\r\n    var i, base = arrayToMatrix([1, 0, 0, 1, 0, 0])\r\n\r\n    // ensure source as object\r\n    source = source instanceof SVG.Element ?\r\n      source.matrixify() :\r\n    typeof source === 'string' ?\r\n      arrayToMatrix(source.split(SVG.regex.delimiter).map(parseFloat)) :\r\n    arguments.length == 6 ?\r\n      arrayToMatrix([].slice.call(arguments)) :\r\n    Array.isArray(source) ?\r\n      arrayToMatrix(source) :\r\n    typeof source === 'object' ?\r\n      source : base\r\n\r\n    // merge source\r\n    for (i = abcdef.length - 1; i >= 0; --i)\r\n      this[abcdef[i]] = source[abcdef[i]] != null ?\r\n        source[abcdef[i]] : base[abcdef[i]]\r\n  }\r\n\r\n  // Add methods\r\n, extend: {\r\n    // Extract individual transformations\r\n    extract: function() {\r\n      // find delta transform points\r\n      var px    = deltaTransformPoint(this, 0, 1)\r\n        , py    = deltaTransformPoint(this, 1, 0)\r\n        , skewX = 180 / Math.PI * Math.atan2(px.y, px.x) - 90\r\n\r\n      return {\r\n        // translation\r\n        x:        this.e\r\n      , y:        this.f\r\n      , transformedX:(this.e * Math.cos(skewX * Math.PI / 180) + this.f * Math.sin(skewX * Math.PI / 180)) / Math.sqrt(this.a * this.a + this.b * this.b)\r\n      , transformedY:(this.f * Math.cos(skewX * Math.PI / 180) + this.e * Math.sin(-skewX * Math.PI / 180)) / Math.sqrt(this.c * this.c + this.d * this.d)\r\n        // skew\r\n      , skewX:    -skewX\r\n      , skewY:    180 / Math.PI * Math.atan2(py.y, py.x)\r\n        // scale\r\n      , scaleX:   Math.sqrt(this.a * this.a + this.b * this.b)\r\n      , scaleY:   Math.sqrt(this.c * this.c + this.d * this.d)\r\n        // rotation\r\n      , rotation: skewX\r\n      , a: this.a\r\n      , b: this.b\r\n      , c: this.c\r\n      , d: this.d\r\n      , e: this.e\r\n      , f: this.f\r\n      , matrix: new SVG.Matrix(this)\r\n      }\r\n    }\r\n    // Clone matrix\r\n  , clone: function() {\r\n      return new SVG.Matrix(this)\r\n    }\r\n    // Morph one matrix into another\r\n  , morph: function(matrix) {\r\n      // store new destination\r\n      this.destination = new SVG.Matrix(matrix)\r\n\r\n      return this\r\n    }\r\n    // Get morphed matrix at a given position\r\n  , at: function(pos) {\r\n      // make sure a destination is defined\r\n      if (!this.destination) return this\r\n\r\n      // calculate morphed matrix at a given position\r\n      var matrix = new SVG.Matrix({\r\n        a: this.a + (this.destination.a - this.a) * pos\r\n      , b: this.b + (this.destination.b - this.b) * pos\r\n      , c: this.c + (this.destination.c - this.c) * pos\r\n      , d: this.d + (this.destination.d - this.d) * pos\r\n      , e: this.e + (this.destination.e - this.e) * pos\r\n      , f: this.f + (this.destination.f - this.f) * pos\r\n      })\r\n\r\n      return matrix\r\n    }\r\n    // Multiplies by given matrix\r\n  , multiply: function(matrix) {\r\n      return new SVG.Matrix(this.native().multiply(parseMatrix(matrix).native()))\r\n    }\r\n    // Inverses matrix\r\n  , inverse: function() {\r\n      return new SVG.Matrix(this.native().inverse())\r\n    }\r\n    // Translate matrix\r\n  , translate: function(x, y) {\r\n      return new SVG.Matrix(this.native().translate(x || 0, y || 0))\r\n    }\r\n    // Scale matrix\r\n  , scale: function(x, y, cx, cy) {\r\n      // support uniformal scale\r\n      if (arguments.length == 1) {\r\n        y = x\r\n      } else if (arguments.length == 3) {\r\n        cy = cx\r\n        cx = y\r\n        y = x\r\n      }\r\n\r\n      return this.around(cx, cy, new SVG.Matrix(x, 0, 0, y, 0, 0))\r\n    }\r\n    // Rotate matrix\r\n  , rotate: function(r, cx, cy) {\r\n      // convert degrees to radians\r\n      r = SVG.utils.radians(r)\r\n\r\n      return this.around(cx, cy, new SVG.Matrix(Math.cos(r), Math.sin(r), -Math.sin(r), Math.cos(r), 0, 0))\r\n    }\r\n    // Flip matrix on x or y, at a given offset\r\n  , flip: function(a, o) {\r\n      return a == 'x' ?\r\n          this.scale(-1, 1, o, 0) :\r\n        a == 'y' ?\r\n          this.scale(1, -1, 0, o) :\r\n          this.scale(-1, -1, a, o != null ? o : a)\r\n    }\r\n    // Skew\r\n  , skew: function(x, y, cx, cy) {\r\n      // support uniformal skew\r\n      if (arguments.length == 1) {\r\n        y = x\r\n      } else if (arguments.length == 3) {\r\n        cy = cx\r\n        cx = y\r\n        y = x\r\n      }\r\n\r\n      // convert degrees to radians\r\n      x = SVG.utils.radians(x)\r\n      y = SVG.utils.radians(y)\r\n\r\n      return this.around(cx, cy, new SVG.Matrix(1, Math.tan(y), Math.tan(x), 1, 0, 0))\r\n    }\r\n    // SkewX\r\n  , skewX: function(x, cx, cy) {\r\n      return this.skew(x, 0, cx, cy)\r\n    }\r\n    // SkewY\r\n  , skewY: function(y, cx, cy) {\r\n      return this.skew(0, y, cx, cy)\r\n    }\r\n    // Transform around a center point\r\n  , around: function(cx, cy, matrix) {\r\n      return this\r\n        .multiply(new SVG.Matrix(1, 0, 0, 1, cx || 0, cy || 0))\r\n        .multiply(matrix)\r\n        .multiply(new SVG.Matrix(1, 0, 0, 1, -cx || 0, -cy || 0))\r\n    }\r\n    // Convert to native SVGMatrix\r\n  , native: function() {\r\n      // create new matrix\r\n      var matrix = SVG.parser.native.createSVGMatrix()\r\n\r\n      // update with current values\r\n      for (var i = abcdef.length - 1; i >= 0; i--)\r\n        matrix[abcdef[i]] = this[abcdef[i]]\r\n\r\n      return matrix\r\n    }\r\n    // Convert matrix to string\r\n  , toString: function() {\r\n      // Construct the matrix directly, avoid values that are too small\r\n      return 'matrix(' + float32String(this.a) + ',' + float32String(this.b)\r\n        + ',' + float32String(this.c) + ',' + float32String(this.d)\r\n        + ',' + float32String(this.e) + ',' + float32String(this.f)\r\n        + ')'\r\n    }\r\n  }\r\n\r\n  // Define parent\r\n, parent: SVG.Element\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Get current matrix\r\n    ctm: function() {\r\n      return new SVG.Matrix(this.node.getCTM())\r\n    },\r\n    // Get current screen matrix\r\n    screenCTM: function() {\r\n      /* https://bugzilla.mozilla.org/show_bug.cgi?id=1344537\r\n         This is needed because FF does not return the transformation matrix\r\n         for the inner coordinate system when getScreenCTM() is called on nested svgs.\r\n         However all other Browsers do that */\r\n      if(this instanceof SVG.Nested) {\r\n        var rect = this.rect(1,1)\r\n        var m = rect.node.getScreenCTM()\r\n        rect.remove()\r\n        return new SVG.Matrix(m)\r\n      }\r\n      return new SVG.Matrix(this.node.getScreenCTM())\r\n    }\r\n\r\n  }\r\n\r\n})\r\n\nSVG.Point = SVG.invent({\r\n  // Initialize\r\n  create: function(x,y) {\r\n    var i, source, base = {x:0, y:0}\r\n\r\n    // ensure source as object\r\n    source = Array.isArray(x) ?\r\n      {x:x[0], y:x[1]} :\r\n    typeof x === 'object' ?\r\n      {x:x.x, y:x.y} :\r\n    x != null ?\r\n      {x:x, y:(y != null ? y : x)} : base // If y has no value, then x is used has its value\r\n\r\n    // merge source\r\n    this.x = source.x\r\n    this.y = source.y\r\n  }\r\n\r\n  // Add methods\r\n, extend: {\r\n    // Clone point\r\n    clone: function() {\r\n      return new SVG.Point(this)\r\n    }\r\n    // Morph one point into another\r\n  , morph: function(x, y) {\r\n      // store new destination\r\n      this.destination = new SVG.Point(x, y)\r\n\r\n      return this\r\n    }\r\n    // Get morphed point at a given position\r\n  , at: function(pos) {\r\n      // make sure a destination is defined\r\n      if (!this.destination) return this\r\n\r\n      // calculate morphed matrix at a given position\r\n      var point = new SVG.Point({\r\n        x: this.x + (this.destination.x - this.x) * pos\r\n      , y: this.y + (this.destination.y - this.y) * pos\r\n      })\r\n\r\n      return point\r\n    }\r\n    // Convert to native SVGPoint\r\n  , native: function() {\r\n      // create new point\r\n      var point = SVG.parser.native.createSVGPoint()\r\n\r\n      // update with current values\r\n      point.x = this.x\r\n      point.y = this.y\r\n\r\n      return point\r\n    }\r\n    // transform point with matrix\r\n  , transform: function(matrix) {\r\n      return new SVG.Point(this.native().matrixTransform(matrix.native()))\r\n    }\r\n\r\n  }\r\n\r\n})\r\n\r\nSVG.extend(SVG.Element, {\r\n\r\n  // Get point\r\n  point: function(x, y) {\r\n    return new SVG.Point(x,y).transform(this.screenCTM().inverse());\r\n  }\r\n\r\n})\r\n\nSVG.extend(SVG.Element, {\r\n  // Set svg element attribute\r\n  attr: function(a, v, n) {\r\n    // act as full getter\r\n    if (a == null) {\r\n      // get an object of attributes\r\n      a = {}\r\n      v = this.node.attributes\r\n      for (n = v.length - 1; n >= 0; n--)\r\n        a[v[n].nodeName] = SVG.regex.isNumber.test(v[n].nodeValue) ? parseFloat(v[n].nodeValue) : v[n].nodeValue\r\n\r\n      return a\r\n\r\n    } else if (typeof a == 'object') {\r\n      // apply every attribute individually if an object is passed\r\n      for (v in a) this.attr(v, a[v])\r\n\r\n    } else if (v === null) {\r\n        // remove value\r\n        this.node.removeAttribute(a)\r\n\r\n    } else if (v == null) {\r\n      // act as a getter if the first and only argument is not an object\r\n      v = this.node.getAttribute(a)\r\n      return v == null ?\r\n        SVG.defaults.attrs[a] :\r\n      SVG.regex.isNumber.test(v) ?\r\n        parseFloat(v) : v\r\n\r\n    } else {\r\n      // BUG FIX: some browsers will render a stroke if a color is given even though stroke width is 0\r\n      if (a == 'stroke-width')\r\n        this.attr('stroke', parseFloat(v) > 0 ? this._stroke : null)\r\n      else if (a == 'stroke')\r\n        this._stroke = v\r\n\r\n      // convert image fill and stroke to patterns\r\n      if (a == 'fill' || a == 'stroke') {\r\n        if (SVG.regex.isImage.test(v))\r\n          v = this.doc().defs().image(v, 0, 0)\r\n\r\n        if (v instanceof SVG.Image)\r\n          v = this.doc().defs().pattern(0, 0, function() {\r\n            this.add(v)\r\n          })\r\n      }\r\n\r\n      // ensure correct numeric values (also accepts NaN and Infinity)\r\n      if (typeof v === 'number')\r\n        v = new SVG.Number(v)\r\n\r\n      // ensure full hex color\r\n      else if (SVG.Color.isColor(v))\r\n        v = new SVG.Color(v)\r\n\r\n      // parse array values\r\n      else if (Array.isArray(v))\r\n        v = new SVG.Array(v)\r\n\r\n      // if the passed attribute is leading...\r\n      if (a == 'leading') {\r\n        // ... call the leading method instead\r\n        if (this.leading)\r\n          this.leading(v)\r\n      } else {\r\n        // set given attribute on node\r\n        typeof n === 'string' ?\r\n          this.node.setAttributeNS(n, a, v.toString()) :\r\n          this.node.setAttribute(a, v.toString())\r\n      }\r\n\r\n      // rebuild if required\r\n      if (this.rebuild && (a == 'font-size' || a == 'x'))\r\n        this.rebuild(a, v)\r\n    }\r\n\r\n    return this\r\n  }\r\n})\nSVG.extend(SVG.Element, {\r\n  // Add transformations\r\n  transform: function(o, relative) {\r\n    // get target in case of the fx module, otherwise reference this\r\n    var target = this\r\n      , matrix, bbox\r\n\r\n    // act as a getter\r\n    if (typeof o !== 'object') {\r\n      // get current matrix\r\n      matrix = new SVG.Matrix(target).extract()\r\n\r\n      return typeof o === 'string' ? matrix[o] : matrix\r\n    }\r\n\r\n    // get current matrix\r\n    matrix = new SVG.Matrix(target)\r\n\r\n    // ensure relative flag\r\n    relative = !!relative || !!o.relative\r\n\r\n    // act on matrix\r\n    if (o.a != null) {\r\n      matrix = relative ?\r\n        // relative\r\n        matrix.multiply(new SVG.Matrix(o)) :\r\n        // absolute\r\n        new SVG.Matrix(o)\r\n\r\n    // act on rotation\r\n    } else if (o.rotation != null) {\r\n      // ensure centre point\r\n      ensureCentre(o, target)\r\n\r\n      // apply transformation\r\n      matrix = relative ?\r\n        // relative\r\n        matrix.rotate(o.rotation, o.cx, o.cy) :\r\n        // absolute\r\n        matrix.rotate(o.rotation - matrix.extract().rotation, o.cx, o.cy)\r\n\r\n    // act on scale\r\n    } else if (o.scale != null || o.scaleX != null || o.scaleY != null) {\r\n      // ensure centre point\r\n      ensureCentre(o, target)\r\n\r\n      // ensure scale values on both axes\r\n      o.scaleX = o.scale != null ? o.scale : o.scaleX != null ? o.scaleX : 1\r\n      o.scaleY = o.scale != null ? o.scale : o.scaleY != null ? o.scaleY : 1\r\n\r\n      if (!relative) {\r\n        // absolute; multiply inversed values\r\n        var e = matrix.extract()\r\n        o.scaleX = o.scaleX * 1 / e.scaleX\r\n        o.scaleY = o.scaleY * 1 / e.scaleY\r\n      }\r\n\r\n      matrix = matrix.scale(o.scaleX, o.scaleY, o.cx, o.cy)\r\n\r\n    // act on skew\r\n    } else if (o.skew != null || o.skewX != null || o.skewY != null) {\r\n      // ensure centre point\r\n      ensureCentre(o, target)\r\n\r\n      // ensure skew values on both axes\r\n      o.skewX = o.skew != null ? o.skew : o.skewX != null ? o.skewX : 0\r\n      o.skewY = o.skew != null ? o.skew : o.skewY != null ? o.skewY : 0\r\n\r\n      if (!relative) {\r\n        // absolute; reset skew values\r\n        var e = matrix.extract()\r\n        matrix = matrix.multiply(new SVG.Matrix().skew(e.skewX, e.skewY, o.cx, o.cy).inverse())\r\n      }\r\n\r\n      matrix = matrix.skew(o.skewX, o.skewY, o.cx, o.cy)\r\n\r\n    // act on flip\r\n    } else if (o.flip) {\r\n      if(o.flip == 'x' || o.flip == 'y') {\r\n        o.offset = o.offset == null ? target.bbox()['c' + o.flip] : o.offset\r\n      } else {\r\n        if(o.offset == null) {\r\n          bbox = target.bbox()\r\n          o.flip = bbox.cx\r\n          o.offset = bbox.cy\r\n        } else {\r\n          o.flip = o.offset\r\n        }\r\n      }\r\n\r\n      matrix = new SVG.Matrix().flip(o.flip, o.offset)\r\n\r\n    // act on translate\r\n    } else if (o.x != null || o.y != null) {\r\n      if (relative) {\r\n        // relative\r\n        matrix = matrix.translate(o.x, o.y)\r\n      } else {\r\n        // absolute\r\n        if (o.x != null) matrix.e = o.x\r\n        if (o.y != null) matrix.f = o.y\r\n      }\r\n    }\r\n\r\n    return this.attr('transform', matrix)\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.FX, {\r\n  transform: function(o, relative) {\r\n    // get target in case of the fx module, otherwise reference this\r\n    var target = this.target()\r\n      , matrix, bbox\r\n\r\n    // act as a getter\r\n    if (typeof o !== 'object') {\r\n      // get current matrix\r\n      matrix = new SVG.Matrix(target).extract()\r\n\r\n      return typeof o === 'string' ? matrix[o] : matrix\r\n    }\r\n\r\n    // ensure relative flag\r\n    relative = !!relative || !!o.relative\r\n\r\n    // act on matrix\r\n    if (o.a != null) {\r\n      matrix = new SVG.Matrix(o)\r\n\r\n    // act on rotation\r\n    } else if (o.rotation != null) {\r\n      // ensure centre point\r\n      ensureCentre(o, target)\r\n\r\n      // apply transformation\r\n      matrix = new SVG.Rotate(o.rotation, o.cx, o.cy)\r\n\r\n    // act on scale\r\n    } else if (o.scale != null || o.scaleX != null || o.scaleY != null) {\r\n      // ensure centre point\r\n      ensureCentre(o, target)\r\n\r\n      // ensure scale values on both axes\r\n      o.scaleX = o.scale != null ? o.scale : o.scaleX != null ? o.scaleX : 1\r\n      o.scaleY = o.scale != null ? o.scale : o.scaleY != null ? o.scaleY : 1\r\n\r\n      matrix = new SVG.Scale(o.scaleX, o.scaleY, o.cx, o.cy)\r\n\r\n    // act on skew\r\n    } else if (o.skewX != null || o.skewY != null) {\r\n      // ensure centre point\r\n      ensureCentre(o, target)\r\n\r\n      // ensure skew values on both axes\r\n      o.skewX = o.skewX != null ? o.skewX : 0\r\n      o.skewY = o.skewY != null ? o.skewY : 0\r\n\r\n      matrix = new SVG.Skew(o.skewX, o.skewY, o.cx, o.cy)\r\n\r\n    // act on flip\r\n    } else if (o.flip) {\r\n      if(o.flip == 'x' || o.flip == 'y') {\r\n        o.offset = o.offset == null ? target.bbox()['c' + o.flip] : o.offset\r\n      } else {\r\n        if(o.offset == null) {\r\n          bbox = target.bbox()\r\n          o.flip = bbox.cx\r\n          o.offset = bbox.cy\r\n        } else {\r\n          o.flip = o.offset\r\n        }\r\n      }\r\n\r\n      matrix = new SVG.Matrix().flip(o.flip, o.offset)\r\n\r\n    // act on translate\r\n    } else if (o.x != null || o.y != null) {\r\n      matrix = new SVG.Translate(o.x, o.y)\r\n    }\r\n\r\n    if(!matrix) return this\r\n\r\n    matrix.relative = relative\r\n\r\n    this.last().transforms.push(matrix)\r\n\r\n    return this._callStart()\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.Element, {\r\n  // Reset all transformations\r\n  untransform: function() {\r\n    return this.attr('transform', null)\r\n  },\r\n  // merge the whole transformation chain into one matrix and returns it\r\n  matrixify: function() {\r\n\r\n    var matrix = (this.attr('transform') || '')\r\n      // split transformations\r\n      .split(SVG.regex.transforms).slice(0,-1).map(function(str){\r\n        // generate key => value pairs\r\n        var kv = str.trim().split('(')\r\n        return [kv[0], kv[1].split(SVG.regex.delimiter).map(function(str){ return parseFloat(str) })]\r\n      })\r\n      // merge every transformation into one matrix\r\n      .reduce(function(matrix, transform){\r\n\r\n        if(transform[0] == 'matrix') return matrix.multiply(arrayToMatrix(transform[1]))\r\n        return matrix[transform[0]].apply(matrix, transform[1])\r\n\r\n      }, new SVG.Matrix())\r\n\r\n    return matrix\r\n  },\r\n  // add an element to another parent without changing the visual representation on the screen\r\n  toParent: function(parent) {\r\n    if(this == parent) return this\r\n    var ctm = this.screenCTM()\r\n    var pCtm = parent.screenCTM().inverse()\r\n\r\n    this.addTo(parent).untransform().transform(pCtm.multiply(ctm))\r\n\r\n    return this\r\n  },\r\n  // same as above with parent equals root-svg\r\n  toDoc: function() {\r\n    return this.toParent(this.doc())\r\n  }\r\n\r\n})\r\n\r\nSVG.Transformation = SVG.invent({\r\n\r\n  create: function(source, inversed){\r\n\r\n    if(arguments.length > 1 && typeof inversed != 'boolean'){\r\n      return this.constructor.call(this, [].slice.call(arguments))\r\n    }\r\n\r\n    if(Array.isArray(source)){\r\n      for(var i = 0, len = this.arguments.length; i < len; ++i){\r\n        this[this.arguments[i]] = source[i]\r\n      }\r\n    } else if(typeof source == 'object'){\r\n      for(var i = 0, len = this.arguments.length; i < len; ++i){\r\n        this[this.arguments[i]] = source[this.arguments[i]]\r\n      }\r\n    }\r\n\r\n    this.inversed = false\r\n\r\n    if(inversed === true){\r\n      this.inversed = true\r\n    }\r\n\r\n  }\r\n\r\n, extend: {\r\n\r\n    arguments: []\r\n  , method: ''\r\n\r\n  , at: function(pos){\r\n\r\n      var params = []\r\n\r\n      for(var i = 0, len = this.arguments.length; i < len; ++i){\r\n        params.push(this[this.arguments[i]])\r\n      }\r\n\r\n      var m = this._undo || new SVG.Matrix()\r\n\r\n      m = new SVG.Matrix().morph(SVG.Matrix.prototype[this.method].apply(m, params)).at(pos)\r\n\r\n      return this.inversed ? m.inverse() : m\r\n\r\n    }\r\n\r\n  , undo: function(o){\r\n      for(var i = 0, len = this.arguments.length; i < len; ++i){\r\n        o[this.arguments[i]] = typeof this[this.arguments[i]] == 'undefined' ? 0 : o[this.arguments[i]]\r\n      }\r\n\r\n      // The method SVG.Matrix.extract which was used before calling this\r\n      // method to obtain a value for the parameter o doesn't return a cx and\r\n      // a cy so we use the ones that were provided to this object at its creation\r\n      o.cx = this.cx\r\n      o.cy = this.cy\r\n\r\n      this._undo = new SVG[capitalize(this.method)](o, true).at(1)\r\n\r\n      return this\r\n    }\r\n\r\n  }\r\n\r\n})\r\n\r\nSVG.Translate = SVG.invent({\r\n\r\n  parent: SVG.Matrix\r\n, inherit: SVG.Transformation\r\n\r\n, create: function(source, inversed){\r\n    this.constructor.apply(this, [].slice.call(arguments))\r\n  }\r\n\r\n, extend: {\r\n    arguments: ['transformedX', 'transformedY']\r\n  , method: 'translate'\r\n  }\r\n\r\n})\r\n\r\nSVG.Rotate = SVG.invent({\r\n\r\n  parent: SVG.Matrix\r\n, inherit: SVG.Transformation\r\n\r\n, create: function(source, inversed){\r\n    this.constructor.apply(this, [].slice.call(arguments))\r\n  }\r\n\r\n, extend: {\r\n    arguments: ['rotation', 'cx', 'cy']\r\n  , method: 'rotate'\r\n  , at: function(pos){\r\n      var m = new SVG.Matrix().rotate(new SVG.Number().morph(this.rotation - (this._undo ? this._undo.rotation : 0)).at(pos), this.cx, this.cy)\r\n      return this.inversed ? m.inverse() : m\r\n    }\r\n  , undo: function(o){\r\n      this._undo = o\r\n      return this\r\n    }\r\n  }\r\n\r\n})\r\n\r\nSVG.Scale = SVG.invent({\r\n\r\n  parent: SVG.Matrix\r\n, inherit: SVG.Transformation\r\n\r\n, create: function(source, inversed){\r\n    this.constructor.apply(this, [].slice.call(arguments))\r\n  }\r\n\r\n, extend: {\r\n    arguments: ['scaleX', 'scaleY', 'cx', 'cy']\r\n  , method: 'scale'\r\n  }\r\n\r\n})\r\n\r\nSVG.Skew = SVG.invent({\r\n\r\n  parent: SVG.Matrix\r\n, inherit: SVG.Transformation\r\n\r\n, create: function(source, inversed){\r\n    this.constructor.apply(this, [].slice.call(arguments))\r\n  }\r\n\r\n, extend: {\r\n    arguments: ['skewX', 'skewY', 'cx', 'cy']\r\n  , method: 'skew'\r\n  }\r\n\r\n})\r\n\nSVG.extend(SVG.Element, {\r\n  // Dynamic style generator\r\n  style: function(s, v) {\r\n    if (arguments.length == 0) {\r\n      // get full style\r\n      return this.node.style.cssText || ''\r\n\r\n    } else if (arguments.length < 2) {\r\n      // apply every style individually if an object is passed\r\n      if (typeof s == 'object') {\r\n        for (v in s) this.style(v, s[v])\r\n\r\n      } else if (SVG.regex.isCss.test(s)) {\r\n        // parse css string\r\n        s = s.split(/\\s*;\\s*/)\r\n          // filter out suffix ; and stuff like ;;\r\n          .filter(function(e) { return !!e })\r\n          .map(function(e){ return e.split(/\\s*:\\s*/) })\r\n\r\n        // apply every definition individually\r\n        while (v = s.pop()) {\r\n          this.style(v[0], v[1])\r\n        }\r\n      } else {\r\n        // act as a getter if the first and only argument is not an object\r\n        return this.node.style[camelCase(s)]\r\n      }\r\n\r\n    } else {\r\n      this.node.style[camelCase(s)] = v === null || SVG.regex.isBlank.test(v) ? '' : v\r\n    }\r\n\r\n    return this\r\n  }\r\n})\nSVG.Parent = SVG.invent({\r\n  // Initialize node\r\n  create: function(element) {\r\n    this.constructor.call(this, element)\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Element\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Returns all child elements\r\n    children: function() {\r\n      return SVG.utils.map(SVG.utils.filterSVGElements(this.node.childNodes), function(node) {\r\n        return SVG.adopt(node)\r\n      })\r\n    }\r\n    // Add given element at a position\r\n  , add: function(element, i) {\r\n      if (i == null)\r\n        this.node.appendChild(element.node)\r\n      else if (element.node != this.node.childNodes[i])\r\n        this.node.insertBefore(element.node, this.node.childNodes[i])\r\n\r\n      return this\r\n    }\r\n    // Basically does the same as `add()` but returns the added element instead\r\n  , put: function(element, i) {\r\n      this.add(element, i)\r\n      return element\r\n    }\r\n    // Checks if the given element is a child\r\n  , has: function(element) {\r\n      return this.index(element) >= 0\r\n    }\r\n    // Gets index of given element\r\n  , index: function(element) {\r\n      return [].slice.call(this.node.childNodes).indexOf(element.node)\r\n    }\r\n    // Get a element at the given index\r\n  , get: function(i) {\r\n      return SVG.adopt(this.node.childNodes[i])\r\n    }\r\n    // Get first child\r\n  , first: function() {\r\n      return this.get(0)\r\n    }\r\n    // Get the last child\r\n  , last: function() {\r\n      return this.get(this.node.childNodes.length - 1)\r\n    }\r\n    // Iterates over all children and invokes a given block\r\n  , each: function(block, deep) {\r\n      var i, il\r\n        , children = this.children()\r\n\r\n      for (i = 0, il = children.length; i < il; i++) {\r\n        if (children[i] instanceof SVG.Element)\r\n          block.apply(children[i], [i, children])\r\n\r\n        if (deep && (children[i] instanceof SVG.Container))\r\n          children[i].each(block, deep)\r\n      }\r\n\r\n      return this\r\n    }\r\n    // Remove a given child\r\n  , removeElement: function(element) {\r\n      this.node.removeChild(element.node)\r\n\r\n      return this\r\n    }\r\n    // Remove all elements in this container\r\n  , clear: function() {\r\n      // remove children\r\n      while(this.node.hasChildNodes())\r\n        this.node.removeChild(this.node.lastChild)\r\n\r\n      // remove defs reference\r\n      delete this._defs\r\n\r\n      return this\r\n    }\r\n  , // Get defs\r\n    defs: function() {\r\n      return this.doc().defs()\r\n    }\r\n  }\r\n\r\n})\r\n\nSVG.extend(SVG.Parent, {\r\n\r\n  ungroup: function(parent, depth) {\r\n    if(depth === 0 || this instanceof SVG.Defs || this.node == SVG.parser.draw) return this\r\n\r\n    parent = parent || (this instanceof SVG.Doc ? this : this.parent(SVG.Parent))\r\n    depth = depth || Infinity\r\n\r\n    this.each(function(){\r\n      if(this instanceof SVG.Defs) return this\r\n      if(this instanceof SVG.Parent) return this.ungroup(parent, depth-1)\r\n      return this.toParent(parent)\r\n    })\r\n\r\n    this.node.firstChild || this.remove()\r\n\r\n    return this\r\n  },\r\n\r\n  flatten: function(parent, depth) {\r\n    return this.ungroup(parent, depth)\r\n  }\r\n\r\n})\nSVG.Container = SVG.invent({\r\n  // Initialize node\r\n  create: function(element) {\r\n    this.constructor.call(this, element)\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Parent\r\n\r\n})\n\r\nSVG.ViewBox = SVG.invent({\r\n\r\n  create: function(source) {\r\n    var i, base = [0, 0, 0, 0]\r\n\r\n    var x, y, width, height, box, view, we, he\r\n      , wm   = 1 // width multiplier\r\n      , hm   = 1 // height multiplier\r\n      , reg  = /[+-]?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?/gi\r\n\r\n    if(source instanceof SVG.Element){\r\n\r\n      we = source\r\n      he = source\r\n      view = (source.attr('viewBox') || '').match(reg)\r\n      box = source.bbox\r\n\r\n      // get dimensions of current node\r\n      width  = new SVG.Number(source.width())\r\n      height = new SVG.Number(source.height())\r\n\r\n      // find nearest non-percentual dimensions\r\n      while (width.unit == '%') {\r\n        wm *= width.value\r\n        width = new SVG.Number(we instanceof SVG.Doc ? we.parent().offsetWidth : we.parent().width())\r\n        we = we.parent()\r\n      }\r\n      while (height.unit == '%') {\r\n        hm *= height.value\r\n        height = new SVG.Number(he instanceof SVG.Doc ? he.parent().offsetHeight : he.parent().height())\r\n        he = he.parent()\r\n      }\r\n\r\n      // ensure defaults\r\n      this.x      = 0\r\n      this.y      = 0\r\n      this.width  = width  * wm\r\n      this.height = height * hm\r\n      this.zoom   = 1\r\n\r\n      if (view) {\r\n        // get width and height from viewbox\r\n        x      = parseFloat(view[0])\r\n        y      = parseFloat(view[1])\r\n        width  = parseFloat(view[2])\r\n        height = parseFloat(view[3])\r\n\r\n        // calculate zoom accoring to viewbox\r\n        this.zoom = ((this.width / this.height) > (width / height)) ?\r\n          this.height / height :\r\n          this.width  / width\r\n\r\n        // calculate real pixel dimensions on parent SVG.Doc element\r\n        this.x      = x\r\n        this.y      = y\r\n        this.width  = width\r\n        this.height = height\r\n\r\n      }\r\n\r\n    }else{\r\n\r\n      // ensure source as object\r\n      source = typeof source === 'string' ?\r\n        source.match(reg).map(function(el){ return parseFloat(el) }) :\r\n      Array.isArray(source) ?\r\n        source :\r\n      typeof source == 'object' ?\r\n        [source.x, source.y, source.width, source.height] :\r\n      arguments.length == 4 ?\r\n        [].slice.call(arguments) :\r\n        base\r\n\r\n      this.x = source[0]\r\n      this.y = source[1]\r\n      this.width = source[2]\r\n      this.height = source[3]\r\n    }\r\n\r\n\r\n  }\r\n\r\n, extend: {\r\n\r\n    toString: function() {\r\n      return this.x + ' ' + this.y + ' ' + this.width + ' ' + this.height\r\n    }\r\n  , morph: function(x, y, width, height){\r\n      this.destination = new SVG.ViewBox(x, y, width, height)\r\n      return this\r\n    }\r\n\r\n  , at: function(pos) {\r\n\r\n      if(!this.destination) return this\r\n\r\n      return new SVG.ViewBox([\r\n          this.x + (this.destination.x - this.x) * pos\r\n        , this.y + (this.destination.y - this.y) * pos\r\n        , this.width + (this.destination.width - this.width) * pos\r\n        , this.height + (this.destination.height - this.height) * pos\r\n      ])\r\n\r\n    }\r\n\r\n  }\r\n\r\n  // Define parent\r\n, parent: SVG.Container\r\n\r\n  // Add parent method\r\n, construct: {\r\n\r\n    // get/set viewbox\r\n    viewbox: function(x, y, width, height) {\r\n      if (arguments.length == 0)\r\n        // act as a getter if there are no arguments\r\n        return new SVG.ViewBox(this)\r\n\r\n      // otherwise act as a setter\r\n      return this.attr('viewBox', new SVG.ViewBox(x, y, width, height))\r\n    }\r\n\r\n  }\r\n\r\n})\n// Add events to elements\r\n\r\n;[ 'click',\r\n  'dblclick',\r\n  'mousedown',\r\n  'mouseup',\r\n  'mouseover',\r\n  'mouseout',\r\n  'mousemove',\r\n  'mouseenter',\r\n  'mouseleave',\r\n  'touchstart',\r\n  'touchmove',\r\n  'touchleave',\r\n  'touchend',\r\n  'touchcancel' ].forEach(function (event) {\r\n    // add event to SVG.Element\r\n    SVG.Element.prototype[event] = function (f) {\r\n      // bind event to element rather than element node\r\n      if (f == null) {\r\n        SVG.off(this, event)\r\n      } else {\r\n        SVG.on(this, event, f)\r\n      }\r\n      return this\r\n    }\r\n  })\r\n\r\nSVG.listenerId = 0\r\n\r\n// Add event binder in the SVG namespace\r\nSVG.on = function (node, events, listener, binding, options) {\r\n  var l = listener.bind(binding || node)\r\n  var n = node instanceof SVG.Element ? node.node : node\r\n\r\n  // ensure instance object for nodes which are not adopted\r\n  n.instance = n.instance || {_events: {}}\r\n\r\n  var bag = n.instance._events\r\n\r\n  // add id to listener\r\n  if (!listener._svgjsListenerId) { listener._svgjsListenerId = ++SVG.listenerId }\r\n\r\n  events.split(SVG.regex.delimiter).forEach(function (event) {\r\n    var ev = event.split('.')[0]\r\n    var ns = event.split('.')[1] || '*'\r\n\r\n    // ensure valid object\r\n    bag[ev] = bag[ev] || {}\r\n    bag[ev][ns] = bag[ev][ns] || {}\r\n\r\n    // reference listener\r\n    bag[ev][ns][listener._svgjsListenerId] = l\r\n\r\n    // add listener\r\n    n.addEventListener(ev, l, options || false)\r\n  })\r\n}\r\n\r\n// Add event unbinder in the SVG namespace\r\nSVG.off = function (node, events, listener, options) {\r\n  var n = node instanceof SVG.Element ? node.node : node\r\n  if (!n.instance) return\r\n\r\n  // listener can be a function or a number\r\n  if (typeof listener === 'function') {\r\n    listener = listener._svgjsListenerId\r\n    if (!listener) return\r\n  }\r\n\r\n  var bag = n.instance._events\r\n\r\n  ;(events || '').split(SVG.regex.delimiter).forEach(function (event) {\r\n    var ev = event && event.split('.')[0]\r\n    var ns = event && event.split('.')[1]\r\n    var namespace, l\r\n\r\n    if (listener) {\r\n      // remove listener reference\r\n      if (bag[ev] && bag[ev][ns || '*']) {\r\n        // removeListener\r\n        n.removeEventListener(ev, bag[ev][ns || '*'][listener], options || false)\r\n\r\n        delete bag[ev][ns || '*'][listener]\r\n      }\r\n    } else if (ev && ns) {\r\n      // remove all listeners for a namespaced event\r\n      if (bag[ev] && bag[ev][ns]) {\r\n        for (l in bag[ev][ns]) { SVG.off(n, [ev, ns].join('.'), l) }\r\n\r\n        delete bag[ev][ns]\r\n      }\r\n    } else if (ns) {\r\n      // remove all listeners for a specific namespace\r\n      for (event in bag) {\r\n        for (namespace in bag[event]) {\r\n          if (ns === namespace) { SVG.off(n, [event, ns].join('.')) }\r\n        }\r\n      }\r\n    } else if (ev) {\r\n      // remove all listeners for the event\r\n      if (bag[ev]) {\r\n        for (namespace in bag[ev]) { SVG.off(n, [ev, namespace].join('.')) }\r\n\r\n        delete bag[ev]\r\n      }\r\n    } else {\r\n      // remove all listeners on a given node\r\n      for (event in bag) { SVG.off(n, event) }\r\n\r\n      n.instance._events = {}\r\n    }\r\n  })\r\n}\r\n\r\nSVG.extend(SVG.Element, {\r\n  // Bind given event to listener\r\n  on: function (event, listener, binding, options) {\r\n    SVG.on(this, event, listener, binding, options)\r\n    return this\r\n  },\r\n  // Unbind event from listener\r\n  off: function (event, listener) {\r\n    SVG.off(this.node, event, listener)\r\n    return this\r\n  },\r\n  fire: function (event, data) {\r\n    // Dispatch event\r\n    if (event instanceof window.Event) {\r\n      this.node.dispatchEvent(event)\r\n    } else {\r\n      this.node.dispatchEvent(event = new SVG.CustomEvent(event, {detail: data, cancelable: true}))\r\n    }\r\n    this._event = event\r\n    return this\r\n  },\r\n  event: function() {\r\n    return this._event\r\n  }\r\n})\r\n\n\r\nSVG.Defs = SVG.invent({\r\n  // Initialize node\r\n  create: 'defs'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n})\nSVG.G = SVG.invent({\r\n  // Initialize node\r\n  create: 'g'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Move over x-axis\r\n    x: function(x) {\r\n      return x == null ? this.transform('x') : this.transform({ x: x - this.x() }, true)\r\n    }\r\n    // Move over y-axis\r\n  , y: function(y) {\r\n      return y == null ? this.transform('y') : this.transform({ y: y - this.y() }, true)\r\n    }\r\n    // Move by center over x-axis\r\n  , cx: function(x) {\r\n      return x == null ? this.gbox().cx : this.x(x - this.gbox().width / 2)\r\n    }\r\n    // Move by center over y-axis\r\n  , cy: function(y) {\r\n      return y == null ? this.gbox().cy : this.y(y - this.gbox().height / 2)\r\n    }\r\n  , gbox: function() {\r\n\r\n      var bbox  = this.bbox()\r\n        , trans = this.transform()\r\n\r\n      bbox.x  += trans.x\r\n      bbox.x2 += trans.x\r\n      bbox.cx += trans.x\r\n\r\n      bbox.y  += trans.y\r\n      bbox.y2 += trans.y\r\n      bbox.cy += trans.y\r\n\r\n      return bbox\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a group element\r\n    group: function() {\r\n      return this.put(new SVG.G)\r\n    }\r\n  }\r\n})\r\n\nSVG.Doc = SVG.invent({\r\n  // Initialize node\r\n  create: function(element) {\r\n    if (element) {\r\n      // ensure the presence of a dom element\r\n      element = typeof element == 'string' ?\r\n        document.getElementById(element) :\r\n        element\r\n\r\n      // If the target is an svg element, use that element as the main wrapper.\r\n      // This allows svg.js to work with svg documents as well.\r\n      if (element.nodeName == 'svg') {\r\n        this.constructor.call(this, element)\r\n      } else {\r\n        this.constructor.call(this, SVG.create('svg'))\r\n        element.appendChild(this.node)\r\n        this.size('100%', '100%')\r\n      }\r\n\r\n      // set svg element attributes and ensure defs node\r\n      this.namespace().defs()\r\n    }\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Add namespaces\r\n    namespace: function() {\r\n      return this\r\n        .attr({ xmlns: SVG.ns, version: '1.1' })\r\n        .attr('xmlns:xlink', SVG.xlink, SVG.xmlns)\r\n        .attr('xmlns:svgjs', SVG.svgjs, SVG.xmlns)\r\n    }\r\n    // Creates and returns defs element\r\n  , defs: function() {\r\n      if (!this._defs) {\r\n        var defs\r\n\r\n        // Find or create a defs element in this instance\r\n        if (defs = this.node.getElementsByTagName('defs')[0])\r\n          this._defs = SVG.adopt(defs)\r\n        else\r\n          this._defs = new SVG.Defs\r\n\r\n        // Make sure the defs node is at the end of the stack\r\n        this.node.appendChild(this._defs.node)\r\n      }\r\n\r\n      return this._defs\r\n    }\r\n    // custom parent method\r\n  , parent: function() {\r\n      if(!this.node.parentNode || this.node.parentNode.nodeName == '#document' || this.node.parentNode.nodeName == '#document-fragment') return null\r\n      return this.node.parentNode\r\n    }\r\n    // Fix for possible sub-pixel offset. See:\r\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=608812\r\n  , spof: function() {\r\n      var pos = this.node.getScreenCTM()\r\n\r\n      if (pos)\r\n        this\r\n          .style('left', (-pos.e % 1) + 'px')\r\n          .style('top',  (-pos.f % 1) + 'px')\r\n\r\n      return this\r\n    }\r\n\r\n      // Removes the doc from the DOM\r\n  , remove: function() {\r\n      if(this.parent()) {\r\n        this.parent().removeChild(this.node)\r\n      }\r\n\r\n      return this\r\n    }\r\n  , clear: function() {\r\n      // remove children\r\n      while(this.node.hasChildNodes())\r\n        this.node.removeChild(this.node.lastChild)\r\n\r\n      // remove defs reference\r\n      delete this._defs\r\n\r\n      // add back parser\r\n      if(!SVG.parser.draw.parentNode)\r\n        this.node.appendChild(SVG.parser.draw)\r\n\r\n      return this\r\n    }\r\n  , clone: function (parent) {\r\n      // write dom data to the dom so the clone can pickup the data\r\n      this.writeDataToDom()\r\n\r\n      // get reference to node\r\n      var node = this.node\r\n\r\n      // clone element and assign new id\r\n      var clone = assignNewId(node.cloneNode(true))\r\n\r\n      // insert the clone in the given parent or after myself\r\n      if(parent) {\r\n        (parent.node || parent).appendChild(clone.node)\r\n      } else {\r\n        node.parentNode.insertBefore(clone.node, node.nextSibling)\r\n      }\r\n\r\n      return clone\r\n    }\r\n  }\r\n\r\n})\r\n\n// ### This module adds backward / forward functionality to elements.\r\n\r\n//\r\nSVG.extend(SVG.Element, {\r\n  // Get all siblings, including myself\r\n  siblings: function() {\r\n    return this.parent().children()\r\n  }\r\n  // Get the curent position siblings\r\n, position: function() {\r\n    return this.parent().index(this)\r\n  }\r\n  // Get the next element (will return null if there is none)\r\n, next: function() {\r\n    return this.siblings()[this.position() + 1]\r\n  }\r\n  // Get the next element (will return null if there is none)\r\n, previous: function() {\r\n    return this.siblings()[this.position() - 1]\r\n  }\r\n  // Send given element one step forward\r\n, forward: function() {\r\n    var i = this.position() + 1\r\n      , p = this.parent()\r\n\r\n    // move node one step forward\r\n    p.removeElement(this).add(this, i)\r\n\r\n    // make sure defs node is always at the top\r\n    if (p instanceof SVG.Doc)\r\n      p.node.appendChild(p.defs().node)\r\n\r\n    return this\r\n  }\r\n  // Send given element one step backward\r\n, backward: function() {\r\n    var i = this.position()\r\n\r\n    if (i > 0)\r\n      this.parent().removeElement(this).add(this, i - 1)\r\n\r\n    return this\r\n  }\r\n  // Send given element all the way to the front\r\n, front: function() {\r\n    var p = this.parent()\r\n\r\n    // Move node forward\r\n    p.node.appendChild(this.node)\r\n\r\n    // Make sure defs node is always at the top\r\n    if (p instanceof SVG.Doc)\r\n      p.node.appendChild(p.defs().node)\r\n\r\n    return this\r\n  }\r\n  // Send given element all the way to the back\r\n, back: function() {\r\n    if (this.position() > 0)\r\n      this.parent().removeElement(this).add(this, 0)\r\n\r\n    return this\r\n  }\r\n  // Inserts a given element before the targeted element\r\n, before: function(element) {\r\n    element.remove()\r\n\r\n    var i = this.position()\r\n\r\n    this.parent().add(element, i)\r\n\r\n    return this\r\n  }\r\n  // Insters a given element after the targeted element\r\n, after: function(element) {\r\n    element.remove()\r\n\r\n    var i = this.position()\r\n\r\n    this.parent().add(element, i + 1)\r\n\r\n    return this\r\n  }\r\n\r\n})\nSVG.Mask = SVG.invent({\r\n  // Initialize node\r\n  create: function() {\r\n    this.constructor.call(this, SVG.create('mask'))\r\n\r\n    // keep references to masked elements\r\n    this.targets = []\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Unmask all masked elements and remove itself\r\n    remove: function() {\r\n      // unmask all targets\r\n      for (var i = this.targets.length - 1; i >= 0; i--)\r\n        if (this.targets[i])\r\n          this.targets[i].unmask()\r\n      this.targets = []\r\n\r\n      // remove mask from parent\r\n      SVG.Element.prototype.remove.call(this)\r\n\r\n      return this\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create masking element\r\n    mask: function() {\r\n      return this.defs().put(new SVG.Mask)\r\n    }\r\n  }\r\n})\r\n\r\n\r\nSVG.extend(SVG.Element, {\r\n  // Distribute mask to svg element\r\n  maskWith: function(element) {\r\n    // use given mask or create a new one\r\n    this.masker = element instanceof SVG.Mask ? element : this.parent().mask().add(element)\r\n\r\n    // store reverence on self in mask\r\n    this.masker.targets.push(this)\r\n\r\n    // apply mask\r\n    return this.attr('mask', 'url(\"#' + this.masker.attr('id') + '\")')\r\n  }\r\n  // Unmask element\r\n, unmask: function() {\r\n    delete this.masker\r\n    return this.attr('mask', null)\r\n  }\r\n\r\n})\r\n\nSVG.ClipPath = SVG.invent({\r\n  // Initialize node\r\n  create: function() {\r\n    this.constructor.call(this, SVG.create('clipPath'))\r\n\r\n    // keep references to clipped elements\r\n    this.targets = []\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Unclip all clipped elements and remove itself\r\n    remove: function() {\r\n      // unclip all targets\r\n      for (var i = this.targets.length - 1; i >= 0; i--)\r\n        if (this.targets[i])\r\n          this.targets[i].unclip()\r\n      this.targets = []\r\n\r\n      // remove clipPath from parent\r\n      this.parent().removeElement(this)\r\n\r\n      return this\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create clipping element\r\n    clip: function() {\r\n      return this.defs().put(new SVG.ClipPath)\r\n    }\r\n  }\r\n})\r\n\r\n//\r\nSVG.extend(SVG.Element, {\r\n  // Distribute clipPath to svg element\r\n  clipWith: function(element) {\r\n    // use given clip or create a new one\r\n    this.clipper = element instanceof SVG.ClipPath ? element : this.parent().clip().add(element)\r\n\r\n    // store reverence on self in mask\r\n    this.clipper.targets.push(this)\r\n\r\n    // apply mask\r\n    return this.attr('clip-path', 'url(\"#' + this.clipper.attr('id') + '\")')\r\n  }\r\n  // Unclip element\r\n, unclip: function() {\r\n    delete this.clipper\r\n    return this.attr('clip-path', null)\r\n  }\r\n\r\n})\nSVG.Gradient = SVG.invent({\r\n  // Initialize node\r\n  create: function(type) {\r\n    this.constructor.call(this, SVG.create(type + 'Gradient'))\r\n\r\n    // store type\r\n    this.type = type\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Add a color stop\r\n    at: function(offset, color, opacity) {\r\n      return this.put(new SVG.Stop).update(offset, color, opacity)\r\n    }\r\n    // Update gradient\r\n  , update: function(block) {\r\n      // remove all stops\r\n      this.clear()\r\n\r\n      // invoke passed block\r\n      if (typeof block == 'function')\r\n        block.call(this, this)\r\n\r\n      return this\r\n    }\r\n    // Return the fill id\r\n  , fill: function() {\r\n      return 'url(#' + this.id() + ')'\r\n    }\r\n    // Alias string convertion to fill\r\n  , toString: function() {\r\n      return this.fill()\r\n    }\r\n    // custom attr to handle transform\r\n  , attr: function(a, b, c) {\r\n      if(a == 'transform') a = 'gradientTransform'\r\n      return SVG.Container.prototype.attr.call(this, a, b, c)\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create gradient element in defs\r\n    gradient: function(type, block) {\r\n      return this.defs().gradient(type, block)\r\n    }\r\n  }\r\n})\r\n\r\n// Add animatable methods to both gradient and fx module\r\nSVG.extend(SVG.Gradient, SVG.FX, {\r\n  // From position\r\n  from: function(x, y) {\r\n    return (this._target || this).type == 'radial' ?\r\n      this.attr({ fx: new SVG.Number(x), fy: new SVG.Number(y) }) :\r\n      this.attr({ x1: new SVG.Number(x), y1: new SVG.Number(y) })\r\n  }\r\n  // To position\r\n, to: function(x, y) {\r\n    return (this._target || this).type == 'radial' ?\r\n      this.attr({ cx: new SVG.Number(x), cy: new SVG.Number(y) }) :\r\n      this.attr({ x2: new SVG.Number(x), y2: new SVG.Number(y) })\r\n  }\r\n})\r\n\r\n// Base gradient generation\r\nSVG.extend(SVG.Defs, {\r\n  // define gradient\r\n  gradient: function(type, block) {\r\n    return this.put(new SVG.Gradient(type)).update(block)\r\n  }\r\n\r\n})\r\n\r\nSVG.Stop = SVG.invent({\r\n  // Initialize node\r\n  create: 'stop'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Element\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // add color stops\r\n    update: function(o) {\r\n      if (typeof o == 'number' || o instanceof SVG.Number) {\r\n        o = {\r\n          offset:  arguments[0]\r\n        , color:   arguments[1]\r\n        , opacity: arguments[2]\r\n        }\r\n      }\r\n\r\n      // set attributes\r\n      if (o.opacity != null) this.attr('stop-opacity', o.opacity)\r\n      if (o.color   != null) this.attr('stop-color', o.color)\r\n      if (o.offset  != null) this.attr('offset', new SVG.Number(o.offset))\r\n\r\n      return this\r\n    }\r\n  }\r\n\r\n})\r\n\nSVG.Pattern = SVG.invent({\r\n  // Initialize node\r\n  create: 'pattern'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Return the fill id\r\n    fill: function() {\r\n      return 'url(#' + this.id() + ')'\r\n    }\r\n    // Update pattern by rebuilding\r\n  , update: function(block) {\r\n      // remove content\r\n      this.clear()\r\n\r\n      // invoke passed block\r\n      if (typeof block == 'function')\r\n        block.call(this, this)\r\n\r\n      return this\r\n    }\r\n    // Alias string convertion to fill\r\n  , toString: function() {\r\n      return this.fill()\r\n    }\r\n    // custom attr to handle transform\r\n  , attr: function(a, b, c) {\r\n      if(a == 'transform') a = 'patternTransform'\r\n      return SVG.Container.prototype.attr.call(this, a, b, c)\r\n    }\r\n\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create pattern element in defs\r\n    pattern: function(width, height, block) {\r\n      return this.defs().pattern(width, height, block)\r\n    }\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.Defs, {\r\n  // Define gradient\r\n  pattern: function(width, height, block) {\r\n    return this.put(new SVG.Pattern).update(block).attr({\r\n      x:            0\r\n    , y:            0\r\n    , width:        width\r\n    , height:       height\r\n    , patternUnits: 'userSpaceOnUse'\r\n    })\r\n  }\r\n\r\n})\nSVG.Shape = SVG.invent({\r\n  // Initialize node\r\n  create: function(element) {\r\n    this.constructor.call(this, element)\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Element\r\n\r\n})\n\r\nSVG.Bare = SVG.invent({\r\n  // Initialize\r\n  create: function(element, inherit) {\r\n    // construct element\r\n    this.constructor.call(this, SVG.create(element))\r\n\r\n    // inherit custom methods\r\n    if (inherit)\r\n      for (var method in inherit.prototype)\r\n        if (typeof inherit.prototype[method] === 'function')\r\n          this[method] = inherit.prototype[method]\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Element\r\n\r\n  // Add methods\r\n, extend: {\r\n    // Insert some plain text\r\n    words: function(text) {\r\n      // remove contents\r\n      while (this.node.hasChildNodes())\r\n        this.node.removeChild(this.node.lastChild)\r\n\r\n      // create text node\r\n      this.node.appendChild(document.createTextNode(text))\r\n\r\n      return this\r\n    }\r\n  }\r\n})\r\n\r\n\r\nSVG.extend(SVG.Parent, {\r\n  // Create an element that is not described by SVG.js\r\n  element: function(element, inherit) {\r\n    return this.put(new SVG.Bare(element, inherit))\r\n  }\r\n})\r\n\nSVG.Symbol = SVG.invent({\r\n  // Initialize node\r\n  create: 'symbol'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n, construct: {\r\n    // create symbol\r\n    symbol: function() {\r\n      return this.put(new SVG.Symbol)\r\n    }\r\n  }\r\n})\r\n\nSVG.Use = SVG.invent({\r\n  // Initialize node\r\n  create: 'use'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Use element as a reference\r\n    element: function(element, file) {\r\n      // Set lined element\r\n      return this.attr('href', (file || '') + '#' + element, SVG.xlink)\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a use element\r\n    use: function(element, file) {\r\n      return this.put(new SVG.Use).element(element, file)\r\n    }\r\n  }\r\n})\nSVG.Rect = SVG.invent({\r\n  // Initialize node\r\n  create: 'rect'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a rect element\r\n    rect: function(width, height) {\r\n      return this.put(new SVG.Rect()).size(width, height)\r\n    }\r\n  }\r\n})\nSVG.Circle = SVG.invent({\r\n  // Initialize node\r\n  create: 'circle'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create circle element, based on ellipse\r\n    circle: function(size) {\r\n      return this.put(new SVG.Circle).rx(new SVG.Number(size).divide(2)).move(0, 0)\r\n    }\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.Circle, SVG.FX, {\r\n  // Radius x value\r\n  rx: function(rx) {\r\n    return this.attr('r', rx)\r\n  }\r\n  // Alias radius x value\r\n, ry: function(ry) {\r\n    return this.rx(ry)\r\n  }\r\n})\r\n\r\nSVG.Ellipse = SVG.invent({\r\n  // Initialize node\r\n  create: 'ellipse'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create an ellipse\r\n    ellipse: function(width, height) {\r\n      return this.put(new SVG.Ellipse).size(width, height).move(0, 0)\r\n    }\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.Ellipse, SVG.Rect, SVG.FX, {\r\n  // Radius x value\r\n  rx: function(rx) {\r\n    return this.attr('rx', rx)\r\n  }\r\n  // Radius y value\r\n, ry: function(ry) {\r\n    return this.attr('ry', ry)\r\n  }\r\n})\r\n\r\n// Add common method\r\nSVG.extend(SVG.Circle, SVG.Ellipse, {\r\n    // Move over x-axis\r\n    x: function(x) {\r\n      return x == null ? this.cx() - this.rx() : this.cx(x + this.rx())\r\n    }\r\n    // Move over y-axis\r\n  , y: function(y) {\r\n      return y == null ? this.cy() - this.ry() : this.cy(y + this.ry())\r\n    }\r\n    // Move by center over x-axis\r\n  , cx: function(x) {\r\n      return x == null ? this.attr('cx') : this.attr('cx', x)\r\n    }\r\n    // Move by center over y-axis\r\n  , cy: function(y) {\r\n      return y == null ? this.attr('cy') : this.attr('cy', y)\r\n    }\r\n    // Set width of element\r\n  , width: function(width) {\r\n      return width == null ? this.rx() * 2 : this.rx(new SVG.Number(width).divide(2))\r\n    }\r\n    // Set height of element\r\n  , height: function(height) {\r\n      return height == null ? this.ry() * 2 : this.ry(new SVG.Number(height).divide(2))\r\n    }\r\n    // Custom size function\r\n  , size: function(width, height) {\r\n      var p = proportionalSize(this, width, height)\r\n\r\n      return this\r\n        .rx(new SVG.Number(p.width).divide(2))\r\n        .ry(new SVG.Number(p.height).divide(2))\r\n    }\r\n})\nSVG.Line = SVG.invent({\r\n  // Initialize node\r\n  create: 'line'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Get array\r\n    array: function() {\r\n      return new SVG.PointArray([\r\n        [ this.attr('x1'), this.attr('y1') ]\r\n      , [ this.attr('x2'), this.attr('y2') ]\r\n      ])\r\n    }\r\n    // Overwrite native plot() method\r\n  , plot: function(x1, y1, x2, y2) {\r\n      if (x1 == null)\r\n        return this.array()\r\n      else if (typeof y1 !== 'undefined')\r\n        x1 = { x1: x1, y1: y1, x2: x2, y2: y2 }\r\n      else\r\n        x1 = new SVG.PointArray(x1).toLine()\r\n\r\n      return this.attr(x1)\r\n    }\r\n    // Move by left top corner\r\n  , move: function(x, y) {\r\n      return this.attr(this.array().move(x, y).toLine())\r\n    }\r\n    // Set element size to given width and height\r\n  , size: function(width, height) {\r\n      var p = proportionalSize(this, width, height)\r\n\r\n      return this.attr(this.array().size(p.width, p.height).toLine())\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a line element\r\n    line: function(x1, y1, x2, y2) {\r\n      // make sure plot is called as a setter\r\n      // x1 is not necessarily a number, it can also be an array, a string and a SVG.PointArray\r\n      return SVG.Line.prototype.plot.apply(\r\n        this.put(new SVG.Line)\r\n      , x1 != null ? [x1, y1, x2, y2] : [0, 0, 0, 0]\r\n      )\r\n    }\r\n  }\r\n})\r\n\nSVG.Polyline = SVG.invent({\r\n  // Initialize node\r\n  create: 'polyline'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a wrapped polyline element\r\n    polyline: function(p) {\r\n      // make sure plot is called as a setter\r\n      return this.put(new SVG.Polyline).plot(p || new SVG.PointArray)\r\n    }\r\n  }\r\n})\r\n\r\nSVG.Polygon = SVG.invent({\r\n  // Initialize node\r\n  create: 'polygon'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a wrapped polygon element\r\n    polygon: function(p) {\r\n      // make sure plot is called as a setter\r\n      return this.put(new SVG.Polygon).plot(p || new SVG.PointArray)\r\n    }\r\n  }\r\n})\r\n\r\n// Add polygon-specific functions\r\nSVG.extend(SVG.Polyline, SVG.Polygon, {\r\n  // Get array\r\n  array: function() {\r\n    return this._array || (this._array = new SVG.PointArray(this.attr('points')))\r\n  }\r\n  // Plot new path\r\n, plot: function(p) {\r\n    return (p == null) ?\r\n      this.array() :\r\n      this.clear().attr('points', typeof p == 'string' ? p : (this._array = new SVG.PointArray(p)))\r\n  }\r\n  // Clear array cache\r\n, clear: function() {\r\n    delete this._array\r\n    return this\r\n  }\r\n  // Move by left top corner\r\n, move: function(x, y) {\r\n    return this.attr('points', this.array().move(x, y))\r\n  }\r\n  // Set element size to given width and height\r\n, size: function(width, height) {\r\n    var p = proportionalSize(this, width, height)\r\n\r\n    return this.attr('points', this.array().size(p.width, p.height))\r\n  }\r\n\r\n})\r\n\n// unify all point to point elements\r\nSVG.extend(SVG.Line, SVG.Polyline, SVG.Polygon, {\r\n  // Define morphable array\r\n  morphArray:  SVG.PointArray\r\n  // Move by left top corner over x-axis\r\n, x: function(x) {\r\n    return x == null ? this.bbox().x : this.move(x, this.bbox().y)\r\n  }\r\n  // Move by left top corner over y-axis\r\n, y: function(y) {\r\n    return y == null ? this.bbox().y : this.move(this.bbox().x, y)\r\n  }\r\n  // Set width of element\r\n, width: function(width) {\r\n    var b = this.bbox()\r\n\r\n    return width == null ? b.width : this.size(width, b.height)\r\n  }\r\n  // Set height of element\r\n, height: function(height) {\r\n    var b = this.bbox()\r\n\r\n    return height == null ? b.height : this.size(b.width, height)\r\n  }\r\n})\nSVG.Path = SVG.invent({\r\n  // Initialize node\r\n  create: 'path'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Define morphable array\r\n    morphArray:  SVG.PathArray\r\n    // Get array\r\n  , array: function() {\r\n      return this._array || (this._array = new SVG.PathArray(this.attr('d')))\r\n    }\r\n    // Plot new path\r\n  , plot: function(d) {\r\n      return (d == null) ?\r\n        this.array() :\r\n        this.clear().attr('d', typeof d == 'string' ? d : (this._array = new SVG.PathArray(d)))\r\n    }\r\n    // Clear array cache\r\n  , clear: function() {\r\n      delete this._array\r\n      return this\r\n    }\r\n    // Move by left top corner\r\n  , move: function(x, y) {\r\n      return this.attr('d', this.array().move(x, y))\r\n    }\r\n    // Move by left top corner over x-axis\r\n  , x: function(x) {\r\n      return x == null ? this.bbox().x : this.move(x, this.bbox().y)\r\n    }\r\n    // Move by left top corner over y-axis\r\n  , y: function(y) {\r\n      return y == null ? this.bbox().y : this.move(this.bbox().x, y)\r\n    }\r\n    // Set element size to given width and height\r\n  , size: function(width, height) {\r\n      var p = proportionalSize(this, width, height)\r\n\r\n      return this.attr('d', this.array().size(p.width, p.height))\r\n    }\r\n    // Set width of element\r\n  , width: function(width) {\r\n      return width == null ? this.bbox().width : this.size(width, this.bbox().height)\r\n    }\r\n    // Set height of element\r\n  , height: function(height) {\r\n      return height == null ? this.bbox().height : this.size(this.bbox().width, height)\r\n    }\r\n\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a wrapped path element\r\n    path: function(d) {\r\n      // make sure plot is called as a setter\r\n      return this.put(new SVG.Path).plot(d || new SVG.PathArray)\r\n    }\r\n  }\r\n})\r\n\nSVG.Image = SVG.invent({\r\n  // Initialize node\r\n  create: 'image'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // (re)load image\r\n    load: function(url) {\r\n      if (!url) return this\r\n\r\n      var self = this\r\n        , img  = new window.Image()\r\n\r\n      // preload image\r\n      SVG.on(img, 'load', function() {\r\n        SVG.off(img)\r\n\r\n        var p = self.parent(SVG.Pattern)\r\n\r\n        if(p === null) return\r\n\r\n        // ensure image size\r\n        if (self.width() == 0 && self.height() == 0)\r\n          self.size(img.width, img.height)\r\n\r\n        // ensure pattern size if not set\r\n        if (p && p.width() == 0 && p.height() == 0)\r\n          p.size(self.width(), self.height())\r\n\r\n        // callback\r\n        if (typeof self._loaded === 'function')\r\n          self._loaded.call(self, {\r\n            width:  img.width\r\n          , height: img.height\r\n          , ratio:  img.width / img.height\r\n          , url:    url\r\n          })\r\n      })\r\n\r\n      SVG.on(img, 'error', function(e){\r\n        SVG.off(img)\r\n\r\n        if (typeof self._error === 'function'){\r\n            self._error.call(self, e)\r\n        }\r\n      })\r\n\r\n      return this.attr('href', (img.src = this.src = url), SVG.xlink)\r\n    }\r\n    // Add loaded callback\r\n  , loaded: function(loaded) {\r\n      this._loaded = loaded\r\n      return this\r\n    }\r\n\r\n  , error: function(error) {\r\n      this._error = error\r\n      return this\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // create image element, load image and set its size\r\n    image: function(source, width, height) {\r\n      return this.put(new SVG.Image).load(source).size(width || 0, height || width || 0)\r\n    }\r\n  }\r\n\r\n})\nSVG.Text = SVG.invent({\r\n  // Initialize node\r\n  create: function() {\r\n    this.constructor.call(this, SVG.create('text'))\r\n\r\n    this.dom.leading = new SVG.Number(1.3)    // store leading value for rebuilding\r\n    this._rebuild = true                      // enable automatic updating of dy values\r\n    this._build   = false                     // disable build mode for adding multiple lines\r\n\r\n    // set default font\r\n    this.attr('font-family', SVG.defaults.attrs['font-family'])\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Move over x-axis\r\n    x: function(x) {\r\n      // act as getter\r\n      if (x == null)\r\n        return this.attr('x')\r\n\r\n      return this.attr('x', x)\r\n    }\r\n    // Move over y-axis\r\n  , y: function(y) {\r\n      var oy = this.attr('y')\r\n        , o  = typeof oy === 'number' ? oy - this.bbox().y : 0\r\n\r\n      // act as getter\r\n      if (y == null)\r\n        return typeof oy === 'number' ? oy - o : oy\r\n\r\n      return this.attr('y', typeof y.valueOf() === 'number' ? y + o : y)\r\n    }\r\n    // Move center over x-axis\r\n  , cx: function(x) {\r\n      return x == null ? this.bbox().cx : this.x(x - this.bbox().width / 2)\r\n    }\r\n    // Move center over y-axis\r\n  , cy: function(y) {\r\n      return y == null ? this.bbox().cy : this.y(y - this.bbox().height / 2)\r\n    }\r\n    // Set the text content\r\n  , text: function(text) {\r\n      // act as getter\r\n      if (typeof text === 'undefined'){\r\n        var text = ''\r\n        var children = this.node.childNodes\r\n        for(var i = 0, len = children.length; i < len; ++i){\r\n\r\n          // add newline if its not the first child and newLined is set to true\r\n          if(i != 0 && children[i].nodeType != 3 && SVG.adopt(children[i]).dom.newLined == true){\r\n            text += '\\n'\r\n          }\r\n\r\n          // add content of this node\r\n          text += children[i].textContent\r\n        }\r\n\r\n        return text\r\n      }\r\n\r\n      // remove existing content\r\n      this.clear().build(true)\r\n\r\n      if (typeof text === 'function') {\r\n        // call block\r\n        text.call(this, this)\r\n\r\n      } else {\r\n        // store text and make sure text is not blank\r\n        text = text.split('\\n')\r\n\r\n        // build new lines\r\n        for (var i = 0, il = text.length; i < il; i++)\r\n          this.tspan(text[i]).newLine()\r\n      }\r\n\r\n      // disable build mode and rebuild lines\r\n      return this.build(false).rebuild()\r\n    }\r\n    // Set font size\r\n  , size: function(size) {\r\n      return this.attr('font-size', size).rebuild()\r\n    }\r\n    // Set / get leading\r\n  , leading: function(value) {\r\n      // act as getter\r\n      if (value == null)\r\n        return this.dom.leading\r\n\r\n      // act as setter\r\n      this.dom.leading = new SVG.Number(value)\r\n\r\n      return this.rebuild()\r\n    }\r\n    // Get all the first level lines\r\n  , lines: function() {\r\n      var node = (this.textPath && this.textPath() || this).node\r\n\r\n      // filter tspans and map them to SVG.js instances\r\n      var lines = SVG.utils.map(SVG.utils.filterSVGElements(node.childNodes), function(el){\r\n        return SVG.adopt(el)\r\n      })\r\n\r\n      // return an instance of SVG.set\r\n      return new SVG.Set(lines)\r\n    }\r\n    // Rebuild appearance type\r\n  , rebuild: function(rebuild) {\r\n      // store new rebuild flag if given\r\n      if (typeof rebuild == 'boolean')\r\n        this._rebuild = rebuild\r\n\r\n      // define position of all lines\r\n      if (this._rebuild) {\r\n        var self = this\r\n          , blankLineOffset = 0\r\n          , dy = this.dom.leading * new SVG.Number(this.attr('font-size'))\r\n\r\n        this.lines().each(function() {\r\n          if (this.dom.newLined) {\r\n            if (!self.textPath())\r\n              this.attr('x', self.attr('x'))\r\n            if(this.text() == '\\n') {\r\n              blankLineOffset += dy\r\n            }else{\r\n              this.attr('dy', dy + blankLineOffset)\r\n              blankLineOffset = 0\r\n            }\r\n          }\r\n        })\r\n\r\n        this.fire('rebuild')\r\n      }\r\n\r\n      return this\r\n    }\r\n    // Enable / disable build mode\r\n  , build: function(build) {\r\n      this._build = !!build\r\n      return this\r\n    }\r\n    // overwrite method from parent to set data properly\r\n  , setData: function(o){\r\n      this.dom = o\r\n      this.dom.leading = new SVG.Number(o.leading || 1.3)\r\n      return this\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create text element\r\n    text: function(text) {\r\n      return this.put(new SVG.Text).text(text)\r\n    }\r\n    // Create plain text element\r\n  , plain: function(text) {\r\n      return this.put(new SVG.Text).plain(text)\r\n    }\r\n  }\r\n\r\n})\r\n\r\nSVG.Tspan = SVG.invent({\r\n  // Initialize node\r\n  create: 'tspan'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Set text content\r\n    text: function(text) {\r\n      if(text == null) return this.node.textContent + (this.dom.newLined ? '\\n' : '')\r\n\r\n      typeof text === 'function' ? text.call(this, this) : this.plain(text)\r\n\r\n      return this\r\n    }\r\n    // Shortcut dx\r\n  , dx: function(dx) {\r\n      return this.attr('dx', dx)\r\n    }\r\n    // Shortcut dy\r\n  , dy: function(dy) {\r\n      return this.attr('dy', dy)\r\n    }\r\n    // Create new line\r\n  , newLine: function() {\r\n      // fetch text parent\r\n      var t = this.parent(SVG.Text)\r\n\r\n      // mark new line\r\n      this.dom.newLined = true\r\n\r\n      // apply new hy¡n\r\n      return this.dy(t.dom.leading * t.attr('font-size')).attr('x', t.x())\r\n    }\r\n  }\r\n\r\n})\r\n\r\nSVG.extend(SVG.Text, SVG.Tspan, {\r\n  // Create plain text node\r\n  plain: function(text) {\r\n    // clear if build mode is disabled\r\n    if (this._build === false)\r\n      this.clear()\r\n\r\n    // create text node\r\n    this.node.appendChild(document.createTextNode(text))\r\n\r\n    return this\r\n  }\r\n  // Create a tspan\r\n, tspan: function(text) {\r\n    var node  = (this.textPath && this.textPath() || this).node\r\n      , tspan = new SVG.Tspan\r\n\r\n    // clear if build mode is disabled\r\n    if (this._build === false)\r\n      this.clear()\r\n\r\n    // add new tspan\r\n    node.appendChild(tspan.node)\r\n\r\n    return tspan.text(text)\r\n  }\r\n  // Clear all lines\r\n, clear: function() {\r\n    var node = (this.textPath && this.textPath() || this).node\r\n\r\n    // remove existing child nodes\r\n    while (node.hasChildNodes())\r\n      node.removeChild(node.lastChild)\r\n\r\n    return this\r\n  }\r\n  // Get length of text element\r\n, length: function() {\r\n    return this.node.getComputedTextLength()\r\n  }\r\n})\r\n\nSVG.TextPath = SVG.invent({\r\n  // Initialize node\r\n  create: 'textPath'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Parent\r\n\r\n  // Define parent class\r\n, parent: SVG.Text\r\n\r\n  // Add parent method\r\n, construct: {\r\n    morphArray: SVG.PathArray\r\n    // Create path for text to run on\r\n  , path: function(d) {\r\n      // create textPath element\r\n      var path  = new SVG.TextPath\r\n        , track = this.doc().defs().path(d)\r\n\r\n      // move lines to textpath\r\n      while (this.node.hasChildNodes())\r\n        path.node.appendChild(this.node.firstChild)\r\n\r\n      // add textPath element as child node\r\n      this.node.appendChild(path.node)\r\n\r\n      // link textPath to path and add content\r\n      path.attr('href', '#' + track, SVG.xlink)\r\n\r\n      return this\r\n    }\r\n    // return the array of the path track element\r\n  , array: function() {\r\n      var track = this.track()\r\n\r\n      return track ? track.array() : null\r\n    }\r\n    // Plot path if any\r\n  , plot: function(d) {\r\n      var track = this.track()\r\n        , pathArray = null\r\n\r\n      if (track) {\r\n        pathArray = track.plot(d)\r\n      }\r\n\r\n      return (d == null) ? pathArray : this\r\n    }\r\n    // Get the path track element\r\n  , track: function() {\r\n      var path = this.textPath()\r\n\r\n      if (path)\r\n        return path.reference('href')\r\n    }\r\n    // Get the textPath child\r\n  , textPath: function() {\r\n      if (this.node.firstChild && this.node.firstChild.nodeName == 'textPath')\r\n        return SVG.adopt(this.node.firstChild)\r\n    }\r\n  }\r\n})\r\n\nSVG.Nested = SVG.invent({\r\n  // Initialize node\r\n  create: function() {\r\n    this.constructor.call(this, SVG.create('svg'))\r\n\r\n    this.style('overflow', 'visible')\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create nested svg document\r\n    nested: function() {\r\n      return this.put(new SVG.Nested)\r\n    }\r\n  }\r\n})\nSVG.A = SVG.invent({\r\n  // Initialize node\r\n  create: 'a'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Link url\r\n    to: function(url) {\r\n      return this.attr('href', url, SVG.xlink)\r\n    }\r\n    // Link show attribute\r\n  , show: function(target) {\r\n      return this.attr('show', target, SVG.xlink)\r\n    }\r\n    // Link target attribute\r\n  , target: function(target) {\r\n      return this.attr('target', target)\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a hyperlink element\r\n    link: function(url) {\r\n      return this.put(new SVG.A).to(url)\r\n    }\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.Element, {\r\n  // Create a hyperlink element\r\n  linkTo: function(url) {\r\n    var link = new SVG.A\r\n\r\n    if (typeof url == 'function')\r\n      url.call(link, link)\r\n    else\r\n      link.to(url)\r\n\r\n    return this.parent().put(link).put(this)\r\n  }\r\n\r\n})\nSVG.Marker = SVG.invent({\r\n  // Initialize node\r\n  create: 'marker'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Set width of element\r\n    width: function(width) {\r\n      return this.attr('markerWidth', width)\r\n    }\r\n    // Set height of element\r\n  , height: function(height) {\r\n      return this.attr('markerHeight', height)\r\n    }\r\n    // Set marker refX and refY\r\n  , ref: function(x, y) {\r\n      return this.attr('refX', x).attr('refY', y)\r\n    }\r\n    // Update marker\r\n  , update: function(block) {\r\n      // remove all content\r\n      this.clear()\r\n\r\n      // invoke passed block\r\n      if (typeof block == 'function')\r\n        block.call(this, this)\r\n\r\n      return this\r\n    }\r\n    // Return the fill id\r\n  , toString: function() {\r\n      return 'url(#' + this.id() + ')'\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    marker: function(width, height, block) {\r\n      // Create marker element in defs\r\n      return this.defs().marker(width, height, block)\r\n    }\r\n  }\r\n\r\n})\r\n\r\nSVG.extend(SVG.Defs, {\r\n  // Create marker\r\n  marker: function(width, height, block) {\r\n    // Set default viewbox to match the width and height, set ref to cx and cy and set orient to auto\r\n    return this.put(new SVG.Marker)\r\n      .size(width, height)\r\n      .ref(width / 2, height / 2)\r\n      .viewbox(0, 0, width, height)\r\n      .attr('orient', 'auto')\r\n      .update(block)\r\n  }\r\n\r\n})\r\n\r\nSVG.extend(SVG.Line, SVG.Polyline, SVG.Polygon, SVG.Path, {\r\n  // Create and attach markers\r\n  marker: function(marker, width, height, block) {\r\n    var attr = ['marker']\r\n\r\n    // Build attribute name\r\n    if (marker != 'all') attr.push(marker)\r\n    attr = attr.join('-')\r\n\r\n    // Set marker attribute\r\n    marker = arguments[1] instanceof SVG.Marker ?\r\n      arguments[1] :\r\n      this.doc().marker(width, height, block)\r\n\r\n    return this.attr(attr, marker)\r\n  }\r\n\r\n})\n// Define list of available attributes for stroke and fill\r\nvar sugar = {\r\n  stroke: ['color', 'width', 'opacity', 'linecap', 'linejoin', 'miterlimit', 'dasharray', 'dashoffset']\r\n, fill:   ['color', 'opacity', 'rule']\r\n, prefix: function(t, a) {\r\n    return a == 'color' ? t : t + '-' + a\r\n  }\r\n}\r\n\r\n// Add sugar for fill and stroke\r\n;['fill', 'stroke'].forEach(function(m) {\r\n  var i, extension = {}\r\n\r\n  extension[m] = function(o) {\r\n    if (typeof o == 'undefined')\r\n      return this\r\n    if (typeof o == 'string' || SVG.Color.isRgb(o) || (o && typeof o.fill === 'function'))\r\n      this.attr(m, o)\r\n\r\n    else\r\n      // set all attributes from sugar.fill and sugar.stroke list\r\n      for (i = sugar[m].length - 1; i >= 0; i--)\r\n        if (o[sugar[m][i]] != null)\r\n          this.attr(sugar.prefix(m, sugar[m][i]), o[sugar[m][i]])\r\n\r\n    return this\r\n  }\r\n\r\n  SVG.extend(SVG.Element, SVG.FX, extension)\r\n\r\n})\r\n\r\nSVG.extend(SVG.Element, SVG.FX, {\r\n  // Map rotation to transform\r\n  rotate: function(d, cx, cy) {\r\n    return this.transform({ rotation: d, cx: cx, cy: cy })\r\n  }\r\n  // Map skew to transform\r\n, skew: function(x, y, cx, cy) {\r\n    return arguments.length == 1  || arguments.length == 3 ?\r\n      this.transform({ skew: x, cx: y, cy: cx }) :\r\n      this.transform({ skewX: x, skewY: y, cx: cx, cy: cy })\r\n  }\r\n  // Map scale to transform\r\n, scale: function(x, y, cx, cy) {\r\n    return arguments.length == 1  || arguments.length == 3 ?\r\n      this.transform({ scale: x, cx: y, cy: cx }) :\r\n      this.transform({ scaleX: x, scaleY: y, cx: cx, cy: cy })\r\n  }\r\n  // Map translate to transform\r\n, translate: function(x, y) {\r\n    return this.transform({ x: x, y: y })\r\n  }\r\n  // Map flip to transform\r\n, flip: function(a, o) {\r\n    o = typeof a == 'number' ? a : o\r\n    return this.transform({ flip: a || 'both', offset: o })\r\n  }\r\n  // Map matrix to transform\r\n, matrix: function(m) {\r\n    return this.attr('transform', new SVG.Matrix(arguments.length == 6 ? [].slice.call(arguments) : m))\r\n  }\r\n  // Opacity\r\n, opacity: function(value) {\r\n    return this.attr('opacity', value)\r\n  }\r\n  // Relative move over x axis\r\n, dx: function(x) {\r\n    return this.x(new SVG.Number(x).plus(this instanceof SVG.FX ? 0 : this.x()), true)\r\n  }\r\n  // Relative move over y axis\r\n, dy: function(y) {\r\n    return this.y(new SVG.Number(y).plus(this instanceof SVG.FX ? 0 : this.y()), true)\r\n  }\r\n  // Relative move over x and y axes\r\n, dmove: function(x, y) {\r\n    return this.dx(x).dy(y)\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.Rect, SVG.Ellipse, SVG.Circle, SVG.Gradient, SVG.FX, {\r\n  // Add x and y radius\r\n  radius: function(x, y) {\r\n    var type = (this._target || this).type;\r\n    return type == 'radial' || type == 'circle' ?\r\n      this.attr('r', new SVG.Number(x)) :\r\n      this.rx(x).ry(y == null ? x : y)\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.Path, {\r\n  // Get path length\r\n  length: function() {\r\n    return this.node.getTotalLength()\r\n  }\r\n  // Get point at length\r\n, pointAt: function(length) {\r\n    return this.node.getPointAtLength(length)\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.Parent, SVG.Text, SVG.Tspan, SVG.FX, {\r\n  // Set font\r\n  font: function(a, v) {\r\n    if (typeof a == 'object') {\r\n      for (v in a) this.font(v, a[v])\r\n    }\r\n\r\n    return a == 'leading' ?\r\n        this.leading(v) :\r\n      a == 'anchor' ?\r\n        this.attr('text-anchor', v) :\r\n      a == 'size' || a == 'family' || a == 'weight' || a == 'stretch' || a == 'variant' || a == 'style' ?\r\n        this.attr('font-'+ a, v) :\r\n        this.attr(a, v)\r\n  }\r\n})\r\n\nSVG.Set = SVG.invent({\r\n  // Initialize\r\n  create: function(members) {\r\n    if (members instanceof SVG.Set) {\r\n      this.members = members.members.slice()\r\n    } else {\r\n      Array.isArray(members) ? this.members = members : this.clear()\r\n    }\r\n  }\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Add element to set\r\n    add: function() {\r\n      var i, il, elements = [].slice.call(arguments)\r\n\r\n      for (i = 0, il = elements.length; i < il; i++)\r\n        this.members.push(elements[i])\r\n\r\n      return this\r\n    }\r\n    // Remove element from set\r\n  , remove: function(element) {\r\n      var i = this.index(element)\r\n\r\n      // remove given child\r\n      if (i > -1)\r\n        this.members.splice(i, 1)\r\n\r\n      return this\r\n    }\r\n    // Iterate over all members\r\n  , each: function(block) {\r\n      for (var i = 0, il = this.members.length; i < il; i++)\r\n        block.apply(this.members[i], [i, this.members])\r\n\r\n      return this\r\n    }\r\n    // Restore to defaults\r\n  , clear: function() {\r\n      // initialize store\r\n      this.members = []\r\n\r\n      return this\r\n    }\r\n    // Get the length of a set\r\n  , length: function() {\r\n      return this.members.length\r\n    }\r\n    // Checks if a given element is present in set\r\n  , has: function(element) {\r\n      return this.index(element) >= 0\r\n    }\r\n    // retuns index of given element in set\r\n  , index: function(element) {\r\n      return this.members.indexOf(element)\r\n    }\r\n    // Get member at given index\r\n  , get: function(i) {\r\n      return this.members[i]\r\n    }\r\n    // Get first member\r\n  , first: function() {\r\n      return this.get(0)\r\n    }\r\n    // Get last member\r\n  , last: function() {\r\n      return this.get(this.members.length - 1)\r\n    }\r\n    // Default value\r\n  , valueOf: function() {\r\n      return this.members\r\n    }\r\n    // Get the bounding box of all members included or empty box if set has no items\r\n  , bbox: function(){\r\n      // return an empty box of there are no members\r\n      if (this.members.length == 0)\r\n        return new SVG.RBox()\r\n\r\n      // get the first rbox and update the target bbox\r\n      var rbox = this.members[0].rbox(this.members[0].doc())\r\n\r\n      this.each(function() {\r\n        // user rbox for correct position and visual representation\r\n        rbox = rbox.merge(this.rbox(this.doc()))\r\n      })\r\n\r\n      return rbox\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a new set\r\n    set: function(members) {\r\n      return new SVG.Set(members)\r\n    }\r\n  }\r\n})\r\n\r\nSVG.FX.Set = SVG.invent({\r\n  // Initialize node\r\n  create: function(set) {\r\n    // store reference to set\r\n    this.set = set\r\n  }\r\n\r\n})\r\n\r\n// Alias methods\r\nSVG.Set.inherit = function() {\r\n  var m\r\n    , methods = []\r\n\r\n  // gather shape methods\r\n  for(var m in SVG.Shape.prototype)\r\n    if (typeof SVG.Shape.prototype[m] == 'function' && typeof SVG.Set.prototype[m] != 'function')\r\n      methods.push(m)\r\n\r\n  // apply shape aliasses\r\n  methods.forEach(function(method) {\r\n    SVG.Set.prototype[method] = function() {\r\n      for (var i = 0, il = this.members.length; i < il; i++)\r\n        if (this.members[i] && typeof this.members[i][method] == 'function')\r\n          this.members[i][method].apply(this.members[i], arguments)\r\n\r\n      return method == 'animate' ? (this.fx || (this.fx = new SVG.FX.Set(this))) : this\r\n    }\r\n  })\r\n\r\n  // clear methods for the next round\r\n  methods = []\r\n\r\n  // gather fx methods\r\n  for(var m in SVG.FX.prototype)\r\n    if (typeof SVG.FX.prototype[m] == 'function' && typeof SVG.FX.Set.prototype[m] != 'function')\r\n      methods.push(m)\r\n\r\n  // apply fx aliasses\r\n  methods.forEach(function(method) {\r\n    SVG.FX.Set.prototype[method] = function() {\r\n      for (var i = 0, il = this.set.members.length; i < il; i++)\r\n        this.set.members[i].fx[method].apply(this.set.members[i].fx, arguments)\r\n\r\n      return this\r\n    }\r\n  })\r\n}\r\n\n\r\nSVG.extend(SVG.Element, {\r\n  // Store data values on svg nodes\r\n  data: function(a, v, r) {\r\n    if (typeof a == 'object') {\r\n      for (v in a)\r\n        this.data(v, a[v])\r\n\r\n    } else if (arguments.length < 2) {\r\n      try {\r\n        return JSON.parse(this.attr('data-' + a))\r\n      } catch(e) {\r\n        return this.attr('data-' + a)\r\n      }\r\n\r\n    } else {\r\n      this.attr(\r\n        'data-' + a\r\n      , v === null ?\r\n          null :\r\n        r === true || typeof v === 'string' || typeof v === 'number' ?\r\n          v :\r\n          JSON.stringify(v)\r\n      )\r\n    }\r\n\r\n    return this\r\n  }\r\n})\nSVG.extend(SVG.Element, {\r\n  // Remember arbitrary data\r\n  remember: function(k, v) {\r\n    // remember every item in an object individually\r\n    if (typeof arguments[0] == 'object')\r\n      for (var v in k)\r\n        this.remember(v, k[v])\r\n\r\n    // retrieve memory\r\n    else if (arguments.length == 1)\r\n      return this.memory()[k]\r\n\r\n    // store memory\r\n    else\r\n      this.memory()[k] = v\r\n\r\n    return this\r\n  }\r\n\r\n  // Erase a given memory\r\n, forget: function() {\r\n    if (arguments.length == 0)\r\n      this._memory = {}\r\n    else\r\n      for (var i = arguments.length - 1; i >= 0; i--)\r\n        delete this.memory()[arguments[i]]\r\n\r\n    return this\r\n  }\r\n\r\n  // Initialize or return local memory object\r\n, memory: function() {\r\n    return this._memory || (this._memory = {})\r\n  }\r\n\r\n})\n// Method for getting an element by id\r\nSVG.get = function(id) {\r\n  var node = document.getElementById(idFromReference(id) || id)\r\n  return SVG.adopt(node)\r\n}\r\n\r\n// Select elements by query string\r\nSVG.select = function(query, parent) {\r\n  return new SVG.Set(\r\n    SVG.utils.map((parent || document).querySelectorAll(query), function(node) {\r\n      return SVG.adopt(node)\r\n    })\r\n  )\r\n}\r\n\r\nSVG.extend(SVG.Parent, {\r\n  // Scoped select method\r\n  select: function(query) {\r\n    return SVG.select(query, this.node)\r\n  }\r\n\r\n})\nfunction pathRegReplace(a, b, c, d) {\r\n  return c + d.replace(SVG.regex.dots, ' .')\r\n}\r\n\r\n// creates deep clone of array\r\nfunction array_clone(arr){\r\n  var clone = arr.slice(0)\r\n  for(var i = clone.length; i--;){\r\n    if(Array.isArray(clone[i])){\r\n      clone[i] = array_clone(clone[i])\r\n    }\r\n  }\r\n  return clone\r\n}\r\n\r\n// tests if a given element is instance of an object\r\nfunction is(el, obj){\r\n  return el instanceof obj\r\n}\r\n\r\n// tests if a given selector matches an element\r\nfunction matches(el, selector) {\r\n  return (el.matches || el.matchesSelector || el.msMatchesSelector || el.mozMatchesSelector || el.webkitMatchesSelector || el.oMatchesSelector).call(el, selector);\r\n}\r\n\r\n// Convert dash-separated-string to camelCase\r\nfunction camelCase(s) {\r\n  return s.toLowerCase().replace(/-(.)/g, function(m, g) {\r\n    return g.toUpperCase()\r\n  })\r\n}\r\n\r\n// Capitalize first letter of a string\r\nfunction capitalize(s) {\r\n  return s.charAt(0).toUpperCase() + s.slice(1)\r\n}\r\n\r\n// Ensure to six-based hex\r\nfunction fullHex(hex) {\r\n  return hex.length == 4 ?\r\n    [ '#',\r\n      hex.substring(1, 2), hex.substring(1, 2)\r\n    , hex.substring(2, 3), hex.substring(2, 3)\r\n    , hex.substring(3, 4), hex.substring(3, 4)\r\n    ].join('') : hex\r\n}\r\n\r\n// Component to hex value\r\nfunction compToHex(comp) {\r\n  var hex = comp.toString(16)\r\n  return hex.length == 1 ? '0' + hex : hex\r\n}\r\n\r\n// Calculate proportional width and height values when necessary\r\nfunction proportionalSize(element, width, height) {\r\n  if (width == null || height == null) {\r\n    var box = element.bbox()\r\n\r\n    if (width == null)\r\n      width = box.width / box.height * height\r\n    else if (height == null)\r\n      height = box.height / box.width * width\r\n  }\r\n\r\n  return {\r\n    width:  width\r\n  , height: height\r\n  }\r\n}\r\n\r\n// Delta transform point\r\nfunction deltaTransformPoint(matrix, x, y) {\r\n  return {\r\n    x: x * matrix.a + y * matrix.c + 0\r\n  , y: x * matrix.b + y * matrix.d + 0\r\n  }\r\n}\r\n\r\n// Map matrix array to object\r\nfunction arrayToMatrix(a) {\r\n  return { a: a[0], b: a[1], c: a[2], d: a[3], e: a[4], f: a[5] }\r\n}\r\n\r\n// Parse matrix if required\r\nfunction parseMatrix(matrix) {\r\n  if (!(matrix instanceof SVG.Matrix))\r\n    matrix = new SVG.Matrix(matrix)\r\n\r\n  return matrix\r\n}\r\n\r\n// Add centre point to transform object\r\nfunction ensureCentre(o, target) {\r\n  o.cx = o.cx == null ? target.bbox().cx : o.cx\r\n  o.cy = o.cy == null ? target.bbox().cy : o.cy\r\n}\r\n\r\n// PathArray Helpers\r\nfunction arrayToString(a) {\r\n  for (var i = 0, il = a.length, s = ''; i < il; i++) {\r\n    s += a[i][0]\r\n\r\n    if (a[i][1] != null) {\r\n      s += a[i][1]\r\n\r\n      if (a[i][2] != null) {\r\n        s += ' '\r\n        s += a[i][2]\r\n\r\n        if (a[i][3] != null) {\r\n          s += ' '\r\n          s += a[i][3]\r\n          s += ' '\r\n          s += a[i][4]\r\n\r\n          if (a[i][5] != null) {\r\n            s += ' '\r\n            s += a[i][5]\r\n            s += ' '\r\n            s += a[i][6]\r\n\r\n            if (a[i][7] != null) {\r\n              s += ' '\r\n              s += a[i][7]\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return s + ' '\r\n}\r\n\r\n// Deep new id assignment\r\nfunction assignNewId(node) {\r\n  // do the same for SVG child nodes as well\r\n  for (var i = node.childNodes.length - 1; i >= 0; i--)\r\n    if (node.childNodes[i] instanceof window.SVGElement)\r\n      assignNewId(node.childNodes[i])\r\n\r\n  return SVG.adopt(node).id(SVG.eid(node.nodeName))\r\n}\r\n\r\n// Add more bounding box properties\r\nfunction fullBox(b) {\r\n  if (b.x == null) {\r\n    b.x      = 0\r\n    b.y      = 0\r\n    b.width  = 0\r\n    b.height = 0\r\n  }\r\n\r\n  b.w  = b.width\r\n  b.h  = b.height\r\n  b.x2 = b.x + b.width\r\n  b.y2 = b.y + b.height\r\n  b.cx = b.x + b.width / 2\r\n  b.cy = b.y + b.height / 2\r\n\r\n  return b\r\n}\r\n\r\n// Get id from reference string\r\nfunction idFromReference(url) {\r\n  var m = (url || '').toString().match(SVG.regex.reference)\r\n\r\n  if (m) return m[1]\r\n}\r\n\r\n// If values like 1e-88 are passed, this is not a valid 32 bit float,\r\n// but in those cases, we are so close to 0 that 0 works well!\r\nfunction float32String(v) {\r\n  return Math.abs(v) > 1e-37 ? v : 0\r\n}\r\n\r\n// Create matrix array for looping\r\nvar abcdef = 'abcdef'.split('')\r\n\n// Add CustomEvent to IE9 and IE10\r\nif (typeof window.CustomEvent !== 'function') {\r\n  // Code from: https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent\r\n  var CustomEventPoly = function(event, options) {\r\n    options = options || { bubbles: false, cancelable: false, detail: undefined }\r\n    var e = document.createEvent('CustomEvent')\r\n    e.initCustomEvent(event, options.bubbles, options.cancelable, options.detail)\r\n    return e\r\n  }\r\n\r\n  CustomEventPoly.prototype = window.Event.prototype\r\n\r\n  SVG.CustomEvent = CustomEventPoly\r\n} else {\r\n  SVG.CustomEvent = window.CustomEvent\r\n}\r\n\r\n// requestAnimationFrame / cancelAnimationFrame Polyfill with fallback based on Paul Irish\r\n(function(w) {\r\n  var lastTime = 0\r\n  var vendors = ['moz', 'webkit']\r\n\r\n  for(var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\r\n    w.requestAnimationFrame = w[vendors[x] + 'RequestAnimationFrame']\r\n    w.cancelAnimationFrame  = w[vendors[x] + 'CancelAnimationFrame'] ||\r\n                              w[vendors[x] + 'CancelRequestAnimationFrame']\r\n  }\r\n\r\n  w.requestAnimationFrame = w.requestAnimationFrame ||\r\n    function(callback) {\r\n      var currTime = new Date().getTime()\r\n      var timeToCall = Math.max(0, 16 - (currTime - lastTime))\r\n\r\n      var id = w.setTimeout(function() {\r\n        callback(currTime + timeToCall)\r\n      }, timeToCall)\r\n\r\n      lastTime = currTime + timeToCall\r\n      return id\r\n    }\r\n\r\n  w.cancelAnimationFrame = w.cancelAnimationFrame || w.clearTimeout;\r\n\r\n}(window))\r\n\r\nreturn SVG\r\n\r\n}));\r"
        },
        {
          "id": 27,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/utils/bignumber/formatter.js",
          "name": "../node_modules/mathjs/lib/utils/bignumber/formatter.js",
          "index": 32,
          "index2": 25,
          "size": 7924,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "issuer": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/utils/string.js",
          "issuerId": 28,
          "issuerName": "../node_modules/mathjs/lib/utils/string.js",
          "issuerPath": [
            {
              "id": 49,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
              "name": "./main.ts",
              "profile": {
                "factory": 58,
                "building": 1843
              }
            },
            {
              "id": 18,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DisplayService.ts",
              "name": "./services/DisplayService.ts",
              "profile": {
                "factory": 83,
                "building": 1193,
                "dependencies": 637
              }
            },
            {
              "id": 8,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DrinkDisplayService.ts",
              "name": "./services/DrinkDisplayService.ts",
              "profile": {
                "factory": 735,
                "building": 523,
                "dependencies": 1
              }
            },
            {
              "id": 46,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/MathService.ts",
              "name": "./services/MathService.ts",
              "profile": {
                "factory": 394,
                "building": 17
              }
            },
            {
              "id": 29,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/function/string/format.js",
              "name": "../node_modules/mathjs/lib/function/string/format.js",
              "profile": {
                "factory": 54,
                "building": 107
              }
            },
            {
              "id": 28,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/utils/string.js",
              "name": "../node_modules/mathjs/lib/utils/string.js",
              "profile": {
                "factory": 7,
                "building": 13
              }
            }
          ],
          "profile": {
            "factory": 32,
            "building": 6,
            "dependencies": 1
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 28,
              "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/utils/string.js",
              "module": "../node_modules/mathjs/lib/utils/string.js",
              "moduleName": "../node_modules/mathjs/lib/utils/string.js",
              "type": "cjs require",
              "userRequest": "./bignumber/formatter",
              "loc": "7:22-54"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 6,
          "source": "'use strict';\n\nvar objectUtils = require('../object');\n/**\n * Convert a BigNumber to a formatted string representation.\n *\n * Syntax:\n *\n *    format(value)\n *    format(value, options)\n *    format(value, precision)\n *    format(value, fn)\n *\n * Where:\n *\n *    {number} value   The value to be formatted\n *    {Object} options An object with formatting options. Available options:\n *                     {string} notation\n *                         Number notation. Choose from:\n *                         'fixed'          Always use regular number notation.\n *                                          For example '123.40' and '14000000'\n *                         'exponential'    Always use exponential notation.\n *                                          For example '1.234e+2' and '1.4e+7'\n *                         'auto' (default) Regular number notation for numbers\n *                                          having an absolute value between\n *                                          `lower` and `upper` bounds, and uses\n *                                          exponential notation elsewhere.\n *                                          Lower bound is included, upper bound\n *                                          is excluded.\n *                                          For example '123.4' and '1.4e7'.\n *                     {number} precision   A number between 0 and 16 to round\n *                                          the digits of the number.\n *                                          In case of notations 'exponential',\n *                                          'engineering', and 'auto',\n *                                          `precision` defines the total\n *                                          number of significant digits returned.\n *                                          In case of notation 'fixed',\n *                                          `precision` defines the number of\n *                                          significant digits after the decimal\n *                                          point.\n *                                          `precision` is undefined by default.\n *                     {number} lowerExp    Exponent determining the lower boundary\n *                                          for formatting a value with an exponent\n *                                          when `notation='auto`.\n *                                          Default value is `-3`.\n *                     {number} upperExp    Exponent determining the upper boundary\n *                                          for formatting a value with an exponent\n *                                          when `notation='auto`.\n *                                          Default value is `5`.\n *    {Function} fn    A custom formatting function. Can be used to override the\n *                     built-in notations. Function `fn` is called with `value` as\n *                     parameter and must return a string. Is useful for example to\n *                     format all values inside a matrix in a particular way.\n *\n * Examples:\n *\n *    format(6.4)                                        // '6.4'\n *    format(1240000)                                    // '1.24e6'\n *    format(1/3)                                        // '0.3333333333333333'\n *    format(1/3, 3)                                     // '0.333'\n *    format(21385, 2)                                   // '21000'\n *    format(12e8, {notation: 'fixed'})                  // returns '1200000000'\n *    format(2.3,    {notation: 'fixed', precision: 4})  // returns '2.3000'\n *    format(52.8,   {notation: 'exponential'})          // returns '5.28e+1'\n *    format(12400,  {notation: 'engineering'})          // returns '12.400e+3'\n *\n * @param {BigNumber} value\n * @param {Object | Function | number} [options]\n * @return {string} str The formatted value\n */\n\n\nexports.format = function (value, options) {\n  if (typeof options === 'function') {\n    // handle format(value, fn)\n    return options(value);\n  } // handle special cases\n\n\n  if (!value.isFinite()) {\n    return value.isNaN() ? 'NaN' : value.gt(0) ? 'Infinity' : '-Infinity';\n  } // default values for options\n\n\n  var notation = 'auto';\n  var precision;\n\n  if (options !== undefined) {\n    // determine notation from options\n    if (options.notation) {\n      notation = options.notation;\n    } // determine precision from options\n\n\n    if (typeof options === 'number') {\n      precision = options;\n    } else if (options.precision) {\n      precision = options.precision;\n    }\n  } // handle the various notations\n\n\n  switch (notation) {\n    case 'fixed':\n      return exports.toFixed(value, precision);\n\n    case 'exponential':\n      return exports.toExponential(value, precision);\n\n    case 'auto':\n      // TODO: clean up some day. Deprecated since: 2018-01-24\n      // @deprecated upper and lower are replaced with upperExp and lowerExp since v4.0.0\n      if (options && options.exponential && (options.exponential.lower !== undefined || options.exponential.upper !== undefined)) {\n        var fixedOptions = objectUtils.map(options, function (x) {\n          return x;\n        });\n        fixedOptions.exponential = undefined;\n\n        if (options.exponential.lower !== undefined) {\n          fixedOptions.lowerExp = Math.round(Math.log(options.exponential.lower) / Math.LN10);\n        }\n\n        if (options.exponential.upper !== undefined) {\n          fixedOptions.upperExp = Math.round(Math.log(options.exponential.upper) / Math.LN10);\n        }\n\n        console.warn('Deprecation warning: Formatting options exponential.lower and exponential.upper ' + '(minimum and maximum value) ' + 'are replaced with exponential.lowerExp and exponential.upperExp ' + '(minimum and maximum exponent) since version 4.0.0. ' + 'Replace ' + JSON.stringify(options) + ' with ' + JSON.stringify(fixedOptions));\n        return exports.format(value, fixedOptions);\n      } // determine lower and upper bound for exponential notation.\n      // TODO: implement support for upper and lower to be BigNumbers themselves\n\n\n      var lowerExp = options && options.lowerExp !== undefined ? options.lowerExp : -3;\n      var upperExp = options && options.upperExp !== undefined ? options.upperExp : 5; // handle special case zero\n\n      if (value.isZero()) return '0'; // determine whether or not to output exponential notation\n\n      var str;\n      var exp = value.e;\n\n      if (exp >= lowerExp && exp < upperExp) {\n        // normal number notation\n        str = value.toSignificantDigits(precision).toFixed();\n      } else {\n        // exponential notation\n        str = exports.toExponential(value, precision);\n      } // remove trailing zeros after the decimal point\n\n\n      return str.replace(/((\\.\\d*?)(0+))($|e)/, function () {\n        var digits = arguments[2];\n        var e = arguments[4];\n        return digits !== '.' ? digits + e : e;\n      });\n\n    default:\n      throw new Error('Unknown notation \"' + notation + '\". ' + 'Choose \"auto\", \"exponential\", or \"fixed\".');\n  }\n};\n/**\n * Format a number in exponential notation. Like '1.23e+5', '2.3e+0', '3.500e-3'\n * @param {BigNumber} value\n * @param {number} [precision]  Number of digits in formatted output.\n *                              If not provided, the maximum available digits\n *                              is used.\n * @returns {string} str\n */\n\n\nexports.toExponential = function (value, precision) {\n  if (precision !== undefined) {\n    return value.toExponential(precision - 1); // Note the offset of one\n  } else {\n    return value.toExponential();\n  }\n};\n/**\n * Format a number with fixed notation.\n * @param {BigNumber} value\n * @param {number} [precision=undefined] Optional number of decimals after the\n *                                       decimal point. Undefined by default.\n */\n\n\nexports.toFixed = function (value, precision) {\n  return value.toFixed(precision);\n};"
        },
        {
          "id": 28,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/utils/string.js",
          "name": "../node_modules/mathjs/lib/utils/string.js",
          "index": 31,
          "index2": 26,
          "size": 5877,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "issuer": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/function/string/format.js",
          "issuerId": 29,
          "issuerName": "../node_modules/mathjs/lib/function/string/format.js",
          "issuerPath": [
            {
              "id": 49,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
              "name": "./main.ts",
              "profile": {
                "factory": 58,
                "building": 1843
              }
            },
            {
              "id": 18,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DisplayService.ts",
              "name": "./services/DisplayService.ts",
              "profile": {
                "factory": 83,
                "building": 1193,
                "dependencies": 637
              }
            },
            {
              "id": 8,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DrinkDisplayService.ts",
              "name": "./services/DrinkDisplayService.ts",
              "profile": {
                "factory": 735,
                "building": 523,
                "dependencies": 1
              }
            },
            {
              "id": 46,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/MathService.ts",
              "name": "./services/MathService.ts",
              "profile": {
                "factory": 394,
                "building": 17
              }
            },
            {
              "id": 29,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/function/string/format.js",
              "name": "../node_modules/mathjs/lib/function/string/format.js",
              "profile": {
                "factory": 54,
                "building": 107
              }
            }
          ],
          "profile": {
            "factory": 7,
            "building": 13
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 29,
              "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/function/string/format.js",
              "module": "../node_modules/mathjs/lib/function/string/format.js",
              "moduleName": "../node_modules/mathjs/lib/function/string/format.js",
              "type": "cjs require",
              "userRequest": "../../utils/string",
              "loc": "3:13-42"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 5,
          "source": "'use strict';\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar formatNumber = require('./number').format;\n\nvar formatBigNumber = require('./bignumber/formatter').format;\n\nvar isBigNumber = require('./bignumber/isBigNumber');\n/**\n * Test whether value is a string\n * @param {*} value\n * @return {boolean} isString\n */\n\n\nexports.isString = function (value) {\n  return typeof value === 'string';\n};\n/**\n * Check if a text ends with a certain string.\n * @param {string} text\n * @param {string} search\n */\n\n\nexports.endsWith = function (text, search) {\n  var start = text.length - search.length;\n  var end = text.length;\n  return text.substring(start, end) === search;\n};\n/**\n * Format a value of any type into a string.\n *\n * Usage:\n *     math.format(value)\n *     math.format(value, precision)\n *\n * When value is a function:\n *\n * - When the function has a property `syntax`, it returns this\n *   syntax description.\n * - In other cases, a string `'function'` is returned.\n *\n * When `value` is an Object:\n *\n * - When the object contains a property `format` being a function, this\n *   function is invoked as `value.format(options)` and the result is returned.\n * - When the object has its own `toString` method, this method is invoked\n *   and the result is returned.\n * - In other cases the function will loop over all object properties and\n *   return JSON object notation like '{\"a\": 2, \"b\": 3}'.\n *\n * Example usage:\n *     math.format(2/7)                // '0.2857142857142857'\n *     math.format(math.pi, 3)         // '3.14'\n *     math.format(new Complex(2, 3))  // '2 + 3i'\n *     math.format('hello')            // '\"hello\"'\n *\n * @param {*} value             Value to be stringified\n * @param {Object | number | Function} [options]  Formatting options. See\n *                                                lib/utils/number:format for a\n *                                                description of the available\n *                                                options.\n * @return {string} str\n */\n\n\nexports.format = function (value, options) {\n  if (typeof value === 'number') {\n    return formatNumber(value, options);\n  }\n\n  if (isBigNumber(value)) {\n    return formatBigNumber(value, options);\n  } // note: we use unsafe duck-typing here to check for Fractions, this is\n  // ok here since we're only invoking toString or concatenating its values\n\n\n  if (looksLikeFraction(value)) {\n    if (!options || options.fraction !== 'decimal') {\n      // output as ratio, like '1/3'\n      return value.s * value.n + '/' + value.d;\n    } else {\n      // output as decimal, like '0.(3)'\n      return value.toString();\n    }\n  }\n\n  if (Array.isArray(value)) {\n    return formatArray(value, options);\n  }\n\n  if (exports.isString(value)) {\n    return '\"' + value + '\"';\n  }\n\n  if (typeof value === 'function') {\n    return value.syntax ? String(value.syntax) : 'function';\n  }\n\n  if (value && _typeof(value) === 'object') {\n    if (typeof value.format === 'function') {\n      return value.format(options);\n    } else if (value && value.toString() !== {}.toString()) {\n      // this object has a non-native toString method, use that one\n      return value.toString();\n    } else {\n      var entries = [];\n\n      for (var key in value) {\n        if (value.hasOwnProperty(key)) {\n          entries.push('\"' + key + '\": ' + exports.format(value[key], options));\n        }\n      }\n\n      return '{' + entries.join(', ') + '}';\n    }\n  }\n\n  return String(value);\n};\n/**\n * Stringify a value into a string enclosed in double quotes.\n * Unescaped double quotes and backslashes inside the value are escaped.\n * @param {*} value\n * @return {string}\n */\n\n\nexports.stringify = function (value) {\n  var text = String(value);\n  var escaped = '';\n  var i = 0;\n\n  while (i < text.length) {\n    var c = text.charAt(i);\n\n    if (c === '\\\\') {\n      escaped += c;\n      i++;\n      c = text.charAt(i);\n\n      if (c === '' || '\"\\\\/bfnrtu'.indexOf(c) === -1) {\n        escaped += '\\\\'; // no valid escape character -> escape it\n      }\n\n      escaped += c;\n    } else if (c === '\"') {\n      escaped += '\\\\\"';\n    } else {\n      escaped += c;\n    }\n\n    i++;\n  }\n\n  return '\"' + escaped + '\"';\n};\n/**\n * Escape special HTML characters\n * @param {*} value\n * @return {string}\n */\n\n\nexports.escape = function (value) {\n  var text = String(value);\n  text = text.replace(/&/g, '&amp;').replace(/\"/g, '&quot;').replace(/'/g, '&#39;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n  return text;\n};\n/**\n * Recursively format an n-dimensional matrix\n * Example output: \"[[1, 2], [3, 4]]\"\n * @param {Array} array\n * @param {Object | number | Function} [options]  Formatting options. See\n *                                                lib/utils/number:format for a\n *                                                description of the available\n *                                                options.\n * @returns {string} str\n */\n\n\nfunction formatArray(array, options) {\n  if (Array.isArray(array)) {\n    var str = '[';\n    var len = array.length;\n\n    for (var i = 0; i < len; i++) {\n      if (i !== 0) {\n        str += ', ';\n      }\n\n      str += formatArray(array[i], options);\n    }\n\n    str += ']';\n    return str;\n  } else {\n    return exports.format(array, options);\n  }\n}\n/**\n * Check whether a value looks like a Fraction (unsafe duck-type check)\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction looksLikeFraction(value) {\n  return value && _typeof(value) === 'object' && typeof value.s === 'number' && typeof value.n === 'number' && typeof value.d === 'number' || false;\n}"
        },
        {
          "id": 29,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/function/string/format.js",
          "name": "../node_modules/mathjs/lib/function/string/format.js",
          "index": 30,
          "index2": 27,
          "size": 5024,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "issuer": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/MathService.ts",
          "issuerId": 46,
          "issuerName": "./services/MathService.ts",
          "issuerPath": [
            {
              "id": 49,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
              "name": "./main.ts",
              "profile": {
                "factory": 58,
                "building": 1843
              }
            },
            {
              "id": 18,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DisplayService.ts",
              "name": "./services/DisplayService.ts",
              "profile": {
                "factory": 83,
                "building": 1193,
                "dependencies": 637
              }
            },
            {
              "id": 8,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DrinkDisplayService.ts",
              "name": "./services/DrinkDisplayService.ts",
              "profile": {
                "factory": 735,
                "building": 523,
                "dependencies": 1
              }
            },
            {
              "id": 46,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/MathService.ts",
              "name": "./services/MathService.ts",
              "profile": {
                "factory": 394,
                "building": 17
              }
            }
          ],
          "profile": {
            "factory": 54,
            "building": 107
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 46,
              "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/MathService.ts",
              "module": "./services/MathService.ts",
              "moduleName": "./services/MathService.ts",
              "type": "cjs require",
              "userRequest": "mathjs/lib/function/string/format",
              "loc": "7:12-56"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 4,
          "source": "'use strict';\n\nvar string = require('../../utils/string');\n\nfunction factory(type, config, load, typed) {\n  /**\n   * Format a value of any type into a string.\n   *\n   * Syntax:\n   *\n   *    math.format(value)\n   *    math.format(value, options)\n   *    math.format(value, precision)\n   *    math.format(value, callback)\n   *\n   * Where:\n   *\n   *  - `value: *`\n   *    The value to be formatted\n   *  - `options: Object`\n   *    An object with formatting options. Available options:\n   *    - `notation: string`\n   *      Number notation. Choose from:\n   *      - 'fixed'\n   *        Always use regular number notation.\n   *        For example '123.40' and '14000000'\n   *      - 'exponential'\n   *        Always use exponential notation.\n   *        For example '1.234e+2' and '1.4e+7'\n   *      - 'engineering'\n   *        Always use engineering notation.\n   *        For example '123.4e+0' and '14.0e+6'\n   *      - 'auto' (default)\n   *        Regular number notation for numbers having an absolute value between\n   *        `lower` and `upper` bounds, and uses exponential notation elsewhere.\n   *        Lower bound is included, upper bound is excluded.\n   *        For example '123.4' and '1.4e7'.\n   *    - `precision: number`\n   *      A number between 0 and 16 to round the digits of the number. In case\n   *      of notations 'exponential', 'engineering', and 'auto', `precision`\n   *      defines the total number of significant digits returned.\n   *      In case of notation 'fixed', `precision` defines the number of\n   *      significant digits after the decimal point.\n   *      `precision` is undefined by default.\n   *    - `lowerExp: number`\n   *      Exponent determining the lower boundary for formatting a value with\n   *      an exponent when `notation='auto`. Default value is `-3`.\n   *    - `upperExp: number`\n   *      Exponent determining the upper boundary for formatting a value with\n   *      an exponent when `notation='auto`. Default value is `5`.\n   *    - `fraction: string`. Available values: 'ratio' (default) or 'decimal'.\n   *      For example `format(fraction(1, 3))` will output '1/3' when 'ratio' is\n   *      configured, and will output `0.(3)` when 'decimal' is configured.\n   * - `callback: function`\n   *   A custom formatting function, invoked for all numeric elements in `value`,\n   *   for example all elements of a matrix, or the real and imaginary\n   *   parts of a complex number. This callback can be used to override the\n   *   built-in numeric notation with any type of formatting. Function `callback`\n   *   is called with `value` as parameter and must return a string.\n   *\n   * When `value` is an Object:\n   *\n   * - When the object contains a property `format` being a function, this function\n   *   is invoked as `value.format(options)` and the result is returned.\n   * - When the object has its own `toString` method, this method is invoked\n   *   and the result is returned.\n   * - In other cases the function will loop over all object properties and\n   *   return JSON object notation like '{\"a\": 2, \"b\": 3}'.\n   *\n   * When value is a function:\n   *\n   * - When the function has a property `syntax`, it returns this\n   *   syntax description.\n   * - In other cases, a string `'function'` is returned.\n   *\n   * Examples:\n   *\n   *    math.format(6.4)                                        // returns '6.4'\n   *    math.format(1240000)                                    // returns '1.24e6'\n   *    math.format(1/3)                                        // returns '0.3333333333333333'\n   *    math.format(1/3, 3)                                     // returns '0.333'\n   *    math.format(21385, 2)                                   // returns '21000'\n   *    math.format(12e8, {notation: 'fixed'})                  // returns '1200000000'\n   *    math.format(2.3,  {notation: 'fixed', precision: 4})    // returns '2.3000'\n   *    math.format(52.8, {notation: 'exponential'})            // returns '5.28e+1'\n   *    math.format(12400,{notation: 'engineering'})            // returns '12.400e+3'\n   *    math.format(2000, {lowerExp: -2, upperExp: 2})          // returns '2e+3'\n   *\n   *    function formatCurrency(value) {\n   *      // return currency notation with two digits:\n   *      return '$' + value.toFixed(2)\n   *\n   *      // you could also use math.format inside the callback:\n   *      // return '$' + math.format(value, {notation: 'fixed', precision: 2})\n   *    }\n   *    math.format([2.1, 3, 0.016], formatCurrency}            // returns '[$2.10, $3.00, $0.02]'\n   *\n   * See also:\n   *\n   *    print\n   *\n   * @param {*} value                               Value to be stringified\n   * @param {Object | Function | number} [options]  Formatting options\n   * @return {string} The formatted value\n   */\n  var format = typed('format', {\n    'any': string.format,\n    'any, Object | function | number': string.format\n  });\n  format.toTex = undefined; // use default template\n\n  return format;\n}\n\nexports.name = 'format';\nexports.factory = factory;"
        },
        {
          "id": 30,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/utils/collection/deepMap.js",
          "name": "../node_modules/mathjs/lib/utils/collection/deepMap.js",
          "index": 29,
          "index2": 22,
          "size": 835,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "issuer": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/type/fraction/function/fraction.js",
          "issuerId": 31,
          "issuerName": "../node_modules/mathjs/lib/type/fraction/function/fraction.js",
          "issuerPath": [
            {
              "id": 49,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
              "name": "./main.ts",
              "profile": {
                "factory": 58,
                "building": 1843
              }
            },
            {
              "id": 18,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DisplayService.ts",
              "name": "./services/DisplayService.ts",
              "profile": {
                "factory": 83,
                "building": 1193,
                "dependencies": 637
              }
            },
            {
              "id": 8,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DrinkDisplayService.ts",
              "name": "./services/DrinkDisplayService.ts",
              "profile": {
                "factory": 735,
                "building": 523,
                "dependencies": 1
              }
            },
            {
              "id": 46,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/MathService.ts",
              "name": "./services/MathService.ts",
              "profile": {
                "factory": 394,
                "building": 17
              }
            },
            {
              "id": 34,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/type/fraction/index.js",
              "name": "../node_modules/mathjs/lib/type/fraction/index.js",
              "profile": {
                "factory": 54,
                "building": 107
              }
            },
            {
              "id": 31,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/type/fraction/function/fraction.js",
              "name": "../node_modules/mathjs/lib/type/fraction/function/fraction.js",
              "profile": {
                "factory": 5,
                "building": 12
              }
            }
          ],
          "profile": {
            "factory": 10,
            "building": 25
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 31,
              "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/type/fraction/function/fraction.js",
              "module": "../node_modules/mathjs/lib/type/fraction/function/fraction.js",
              "moduleName": "../node_modules/mathjs/lib/type/fraction/function/fraction.js",
              "type": "cjs require",
              "userRequest": "../../../utils/collection/deepMap",
              "loc": "3:14-58"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 6,
          "source": "'use strict';\n/**\n * Execute the callback function element wise for each element in array and any\n * nested array\n * Returns an array with the results\n * @param {Array | Matrix} array\n * @param {Function} callback   The callback is called with two parameters:\n *                              value1 and value2, which contain the current\n *                              element of both arrays.\n * @param {boolean} [skipZeros] Invoke callback function for non-zero values only.\n *\n * @return {Array | Matrix} res\n */\n\nmodule.exports = function deepMap(array, callback, skipZeros) {\n  if (array && typeof array.map === 'function') {\n    // TODO: replace array.map with a for loop to improve performance\n    return array.map(function (x) {\n      return deepMap(x, callback, skipZeros);\n    });\n  } else {\n    return callback(array);\n  }\n};"
        },
        {
          "id": 31,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/type/fraction/function/fraction.js",
          "name": "../node_modules/mathjs/lib/type/fraction/function/fraction.js",
          "index": 28,
          "index2": 23,
          "size": 1870,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "issuer": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/type/fraction/index.js",
          "issuerId": 34,
          "issuerName": "../node_modules/mathjs/lib/type/fraction/index.js",
          "issuerPath": [
            {
              "id": 49,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
              "name": "./main.ts",
              "profile": {
                "factory": 58,
                "building": 1843
              }
            },
            {
              "id": 18,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DisplayService.ts",
              "name": "./services/DisplayService.ts",
              "profile": {
                "factory": 83,
                "building": 1193,
                "dependencies": 637
              }
            },
            {
              "id": 8,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DrinkDisplayService.ts",
              "name": "./services/DrinkDisplayService.ts",
              "profile": {
                "factory": 735,
                "building": 523,
                "dependencies": 1
              }
            },
            {
              "id": 46,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/MathService.ts",
              "name": "./services/MathService.ts",
              "profile": {
                "factory": 394,
                "building": 17
              }
            },
            {
              "id": 34,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/type/fraction/index.js",
              "name": "../node_modules/mathjs/lib/type/fraction/index.js",
              "profile": {
                "factory": 54,
                "building": 107
              }
            }
          ],
          "profile": {
            "factory": 5,
            "building": 12
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 34,
              "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/type/fraction/index.js",
              "module": "../node_modules/mathjs/lib/type/fraction/index.js",
              "moduleName": "../node_modules/mathjs/lib/type/fraction/index.js",
              "type": "cjs require",
              "userRequest": "./function/fraction",
              "loc": "5:0-30"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 5,
          "source": "'use strict';\n\nvar deepMap = require('../../../utils/collection/deepMap');\n\nfunction factory(type, config, load, typed) {\n  /**\n   * Create a fraction convert a value to a fraction.\n   *\n   * Syntax:\n   *     math.fraction(numerator, denominator)\n   *     math.fraction({n: numerator, d: denominator})\n   *     math.fraction(matrix: Array | Matrix)         Turn all matrix entries\n   *                                                   into fractions\n   *\n   * Examples:\n   *\n   *     math.fraction(1, 3)\n   *     math.fraction('2/3')\n   *     math.fraction({n: 2, d: 3})\n   *     math.fraction([0.2, 0.25, 1.25])\n   *\n   * See also:\n   *\n   *    bignumber, number, string, unit\n   *\n   * @param {number | string | Fraction | BigNumber | Array | Matrix} [args]\n   *            Arguments specifying the numerator and denominator of\n   *            the fraction\n   * @return {Fraction | Array | Matrix} Returns a fraction\n   */\n  var fraction = typed('fraction', {\n    'number': function number(x) {\n      if (!isFinite(x) || isNaN(x)) {\n        throw new Error(x + ' cannot be represented as a fraction');\n      }\n\n      return new type.Fraction(x);\n    },\n    'string': function string(x) {\n      return new type.Fraction(x);\n    },\n    'number, number': function numberNumber(numerator, denominator) {\n      return new type.Fraction(numerator, denominator);\n    },\n    'null': function _null(x) {\n      return new type.Fraction(0);\n    },\n    'BigNumber': function BigNumber(x) {\n      return new type.Fraction(x.toString());\n    },\n    'Fraction': function Fraction(x) {\n      return x; // fractions are immutable\n    },\n    'Object': function Object(x) {\n      return new type.Fraction(x);\n    },\n    'Array | Matrix': function ArrayMatrix(x) {\n      return deepMap(x, fraction);\n    }\n  });\n  return fraction;\n}\n\nexports.name = 'fraction';\nexports.factory = factory;"
        },
        {
          "id": 32,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/fraction.js/fraction.js",
          "name": "../node_modules/fraction.js/fraction.js",
          "index": 27,
          "index2": 20,
          "size": 19075,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "issuer": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/type/fraction/Fraction.js",
          "issuerId": 33,
          "issuerName": "../node_modules/mathjs/lib/type/fraction/Fraction.js",
          "issuerPath": [
            {
              "id": 49,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
              "name": "./main.ts",
              "profile": {
                "factory": 58,
                "building": 1843
              }
            },
            {
              "id": 18,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DisplayService.ts",
              "name": "./services/DisplayService.ts",
              "profile": {
                "factory": 83,
                "building": 1193,
                "dependencies": 637
              }
            },
            {
              "id": 8,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DrinkDisplayService.ts",
              "name": "./services/DrinkDisplayService.ts",
              "profile": {
                "factory": 735,
                "building": 523,
                "dependencies": 1
              }
            },
            {
              "id": 46,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/MathService.ts",
              "name": "./services/MathService.ts",
              "profile": {
                "factory": 394,
                "building": 17
              }
            },
            {
              "id": 34,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/type/fraction/index.js",
              "name": "../node_modules/mathjs/lib/type/fraction/index.js",
              "profile": {
                "factory": 54,
                "building": 107
              }
            },
            {
              "id": 33,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/type/fraction/Fraction.js",
              "name": "../node_modules/mathjs/lib/type/fraction/Fraction.js",
              "profile": {
                "factory": 5,
                "building": 12
              }
            }
          ],
          "profile": {
            "factory": 51,
            "building": 11
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 33,
              "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/type/fraction/Fraction.js",
              "module": "../node_modules/mathjs/lib/type/fraction/Fraction.js",
              "moduleName": "../node_modules/mathjs/lib/type/fraction/Fraction.js",
              "type": "cjs require",
              "userRequest": "fraction.js",
              "loc": "3:15-37"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 6,
          "source": "/**\n * @license Fraction.js v4.0.12 09/09/2015\n * http://www.xarg.org/2014/03/rational-numbers-in-javascript/\n *\n * Copyright (c) 2015, Robert Eisele (robert@xarg.org)\n * Dual licensed under the MIT or GPL Version 2 licenses.\n **/\n\n\n/**\n *\n * This class offers the possibility to calculate fractions.\n * You can pass a fraction in different formats. Either as array, as double, as string or as an integer.\n *\n * Array/Object form\n * [ 0 => <nominator>, 1 => <denominator> ]\n * [ n => <nominator>, d => <denominator> ]\n *\n * Integer form\n * - Single integer value\n *\n * Double form\n * - Single double value\n *\n * String form\n * 123.456 - a simple double\n * 123/456 - a string fraction\n * 123.'456' - a double with repeating decimal places\n * 123.(456) - synonym\n * 123.45'6' - a double with repeating last place\n * 123.45(6) - synonym\n *\n * Example:\n *\n * var f = new Fraction(\"9.4'31'\");\n * f.mul([-4, 3]).div(4.9);\n *\n */\n\n(function(root) {\n\n  \"use strict\";\n\n  // Maximum search depth for cyclic rational numbers. 2000 should be more than enough.\n  // Example: 1/7 = 0.(142857) has 6 repeating decimal places.\n  // If MAX_CYCLE_LEN gets reduced, long cycles will not be detected and toString() only gets the first 10 digits\n  var MAX_CYCLE_LEN = 2000;\n\n  // Parsed data to avoid calling \"new\" all the time\n  var P = {\n    \"s\": 1,\n    \"n\": 0,\n    \"d\": 1\n  };\n\n  function createError(name) {\n\n    function errorConstructor() {\n      var temp = Error.apply(this, arguments);\n      temp['name'] = this['name'] = name;\n      this['stack'] = temp['stack'];\n      this['message'] = temp['message'];\n    }\n\n    /**\n     * Error constructor\n     *\n     * @constructor\n     */\n    function IntermediateInheritor() {}\n    IntermediateInheritor.prototype = Error.prototype;\n    errorConstructor.prototype = new IntermediateInheritor();\n\n    return errorConstructor;\n  }\n\n  var DivisionByZero = Fraction['DivisionByZero'] = createError('DivisionByZero');\n  var InvalidParameter = Fraction['InvalidParameter'] = createError('InvalidParameter');\n\n  function assign(n, s) {\n\n    if (isNaN(n = parseInt(n, 10))) {\n      throwInvalidParam();\n    }\n    return n * s;\n  }\n\n  function throwInvalidParam() {\n    throw new InvalidParameter();\n  }\n\n  var parse = function(p1, p2) {\n\n    var n = 0, d = 1, s = 1;\n    var v = 0, w = 0, x = 0, y = 1, z = 1;\n\n    var A = 0, B = 1;\n    var C = 1, D = 1;\n\n    var N = 10000000;\n    var M;\n\n    if (p1 === undefined || p1 === null) {\n      /* void */\n    } else if (p2 !== undefined) {\n      n = p1;\n      d = p2;\n      s = n * d;\n    } else\n      switch (typeof p1) {\n\n        case \"object\":\n        {\n          if (\"d\" in p1 && \"n\" in p1) {\n            n = p1[\"n\"];\n            d = p1[\"d\"];\n            if (\"s\" in p1)\n              n *= p1[\"s\"];\n          } else if (0 in p1) {\n            n = p1[0];\n            if (1 in p1)\n              d = p1[1];\n          } else {\n            throwInvalidParam();\n          }\n          s = n * d;\n          break;\n        }\n        case \"number\":\n        {\n          if (p1 < 0) {\n            s = p1;\n            p1 = -p1;\n          }\n\n          if (p1 % 1 === 0) {\n            n = p1;\n          } else if (p1 > 0) { // check for != 0, scale would become NaN (log(0)), which converges really slow\n\n            if (p1 >= 1) {\n              z = Math.pow(10, Math.floor(1 + Math.log(p1) / Math.LN10));\n              p1 /= z;\n            }\n\n            // Using Farey Sequences\n            // http://www.johndcook.com/blog/2010/10/20/best-rational-approximation/\n\n            while (B <= N && D <= N) {\n              M = (A + C) / (B + D);\n\n              if (p1 === M) {\n                if (B + D <= N) {\n                  n = A + C;\n                  d = B + D;\n                } else if (D > B) {\n                  n = C;\n                  d = D;\n                } else {\n                  n = A;\n                  d = B;\n                }\n                break;\n\n              } else {\n\n                if (p1 > M) {\n                  A += C;\n                  B += D;\n                } else {\n                  C += A;\n                  D += B;\n                }\n\n                if (B > N) {\n                  n = C;\n                  d = D;\n                } else {\n                  n = A;\n                  d = B;\n                }\n              }\n            }\n            n *= z;\n          } else if (isNaN(p1) || isNaN(p2)) {\n            d = n = NaN;\n          }\n          break;\n        }\n        case \"string\":\n        {\n          B = p1.match(/\\d+|./g);\n\n          if (B === null)\n            throwInvalidParam();\n\n          if (B[A] === '-') {// Check for minus sign at the beginning\n            s = -1;\n            A++;\n          } else if (B[A] === '+') {// Check for plus sign at the beginning\n            A++;\n          }\n\n          if (B.length === A + 1) { // Check if it's just a simple number \"1234\"\n            w = assign(B[A++], s);\n          } else if (B[A + 1] === '.' || B[A] === '.') { // Check if it's a decimal number\n\n            if (B[A] !== '.') { // Handle 0.5 and .5\n              v = assign(B[A++], s);\n            }\n            A++;\n\n            // Check for decimal places\n            if (A + 1 === B.length || B[A + 1] === '(' && B[A + 3] === ')' || B[A + 1] === \"'\" && B[A + 3] === \"'\") {\n              w = assign(B[A], s);\n              y = Math.pow(10, B[A].length);\n              A++;\n            }\n\n            // Check for repeating places\n            if (B[A] === '(' && B[A + 2] === ')' || B[A] === \"'\" && B[A + 2] === \"'\") {\n              x = assign(B[A + 1], s);\n              z = Math.pow(10, B[A + 1].length) - 1;\n              A += 3;\n            }\n\n          } else if (B[A + 1] === '/' || B[A + 1] === ':') { // Check for a simple fraction \"123/456\" or \"123:456\"\n            w = assign(B[A], s);\n            y = assign(B[A + 2], 1);\n            A += 3;\n          } else if (B[A + 3] === '/' && B[A + 1] === ' ') { // Check for a complex fraction \"123 1/2\"\n            v = assign(B[A], s);\n            w = assign(B[A + 2], s);\n            y = assign(B[A + 4], 1);\n            A += 5;\n          }\n\n          if (B.length <= A) { // Check for more tokens on the stack\n            d = y * z;\n            s = /* void */\n                    n = x + d * v + z * w;\n            break;\n          }\n\n          /* Fall through on error */\n        }\n        default:\n          throwInvalidParam();\n      }\n\n    if (d === 0) {\n      throw new DivisionByZero();\n    }\n\n    P[\"s\"] = s < 0 ? -1 : 1;\n    P[\"n\"] = Math.abs(n);\n    P[\"d\"] = Math.abs(d);\n  };\n\n  function modpow(b, e, m) {\n\n    var r = 1;\n    for (; e > 0; b = (b * b) % m, e >>= 1) {\n\n      if (e & 1) {\n        r = (r * b) % m;\n      }\n    }\n    return r;\n  }\n\n\n  function cycleLen(n, d) {\n\n    for (; d % 2 === 0;\n            d /= 2) {\n    }\n\n    for (; d % 5 === 0;\n            d /= 5) {\n    }\n\n    if (d === 1) // Catch non-cyclic numbers\n      return 0;\n\n    // If we would like to compute really large numbers quicker, we could make use of Fermat's little theorem:\n    // 10^(d-1) % d == 1\n    // However, we don't need such large numbers and MAX_CYCLE_LEN should be the capstone,\n    // as we want to translate the numbers to strings.\n\n    var rem = 10 % d;\n    var t = 1;\n\n    for (; rem !== 1; t++) {\n      rem = rem * 10 % d;\n\n      if (t > MAX_CYCLE_LEN)\n        return 0; // Returning 0 here means that we don't print it as a cyclic number. It's likely that the answer is `d-1`\n    }\n    return t;\n  }\n\n\n     function cycleStart(n, d, len) {\n\n    var rem1 = 1;\n    var rem2 = modpow(10, len, d);\n\n    for (var t = 0; t < 300; t++) { // s < ~log10(Number.MAX_VALUE)\n      // Solve 10^s == 10^(s+t) (mod d)\n\n      if (rem1 === rem2)\n        return t;\n\n      rem1 = rem1 * 10 % d;\n      rem2 = rem2 * 10 % d;\n    }\n    return 0;\n  }\n\n  function gcd(a, b) {\n\n    if (!a)\n      return b;\n    if (!b)\n      return a;\n\n    while (1) {\n      a %= b;\n      if (!a)\n        return b;\n      b %= a;\n      if (!b)\n        return a;\n    }\n  };\n\n  /**\n   * Module constructor\n   *\n   * @constructor\n   * @param {number|Fraction=} a\n   * @param {number=} b\n   */\n  function Fraction(a, b) {\n\n    if (!(this instanceof Fraction)) {\n      return new Fraction(a, b);\n    }\n\n    parse(a, b);\n\n    if (Fraction['REDUCE']) {\n      a = gcd(P[\"d\"], P[\"n\"]); // Abuse a\n    } else {\n      a = 1;\n    }\n\n    this[\"s\"] = P[\"s\"];\n    this[\"n\"] = P[\"n\"] / a;\n    this[\"d\"] = P[\"d\"] / a;\n  }\n\n  /**\n   * Boolean global variable to be able to disable automatic reduction of the fraction\n   *\n   */\n  Fraction['REDUCE'] = 1;\n\n  Fraction.prototype = {\n\n    \"s\": 1,\n    \"n\": 0,\n    \"d\": 1,\n\n    /**\n     * Calculates the absolute value\n     *\n     * Ex: new Fraction(-4).abs() => 4\n     **/\n    \"abs\": function() {\n\n      return new Fraction(this[\"n\"], this[\"d\"]);\n    },\n\n    /**\n     * Inverts the sign of the current fraction\n     *\n     * Ex: new Fraction(-4).neg() => 4\n     **/\n    \"neg\": function() {\n\n      return new Fraction(-this[\"s\"] * this[\"n\"], this[\"d\"]);\n    },\n\n    /**\n     * Adds two rational numbers\n     *\n     * Ex: new Fraction({n: 2, d: 3}).add(\"14.9\") => 467 / 30\n     **/\n    \"add\": function(a, b) {\n\n      parse(a, b);\n      return new Fraction(\n              this[\"s\"] * this[\"n\"] * P[\"d\"] + P[\"s\"] * this[\"d\"] * P[\"n\"],\n              this[\"d\"] * P[\"d\"]\n              );\n    },\n\n    /**\n     * Subtracts two rational numbers\n     *\n     * Ex: new Fraction({n: 2, d: 3}).add(\"14.9\") => -427 / 30\n     **/\n    \"sub\": function(a, b) {\n\n      parse(a, b);\n      return new Fraction(\n              this[\"s\"] * this[\"n\"] * P[\"d\"] - P[\"s\"] * this[\"d\"] * P[\"n\"],\n              this[\"d\"] * P[\"d\"]\n              );\n    },\n\n    /**\n     * Multiplies two rational numbers\n     *\n     * Ex: new Fraction(\"-17.(345)\").mul(3) => 5776 / 111\n     **/\n    \"mul\": function(a, b) {\n\n      parse(a, b);\n      return new Fraction(\n              this[\"s\"] * P[\"s\"] * this[\"n\"] * P[\"n\"],\n              this[\"d\"] * P[\"d\"]\n              );\n    },\n\n    /**\n     * Divides two rational numbers\n     *\n     * Ex: new Fraction(\"-17.(345)\").inverse().div(3)\n     **/\n    \"div\": function(a, b) {\n\n      parse(a, b);\n      return new Fraction(\n              this[\"s\"] * P[\"s\"] * this[\"n\"] * P[\"d\"],\n              this[\"d\"] * P[\"n\"]\n              );\n    },\n\n    /**\n     * Clones the actual object\n     *\n     * Ex: new Fraction(\"-17.(345)\").clone()\n     **/\n    \"clone\": function() {\n      return new Fraction(this);\n    },\n\n    /**\n     * Calculates the modulo of two rational numbers - a more precise fmod\n     *\n     * Ex: new Fraction('4.(3)').mod([7, 8]) => (13/3) % (7/8) = (5/6)\n     **/\n    \"mod\": function(a, b) {\n\n      if (isNaN(this['n']) || isNaN(this['d'])) {\n        return new Fraction(NaN);\n      }\n\n      if (a === undefined) {\n        return new Fraction(this[\"s\"] * this[\"n\"] % this[\"d\"], 1);\n      }\n\n      parse(a, b);\n      if (0 === P[\"n\"] && 0 === this[\"d\"]) {\n        Fraction(0, 0); // Throw DivisionByZero\n      }\n\n      /*\n       * First silly attempt, kinda slow\n       *\n       return that[\"sub\"]({\n       \"n\": num[\"n\"] * Math.floor((this.n / this.d) / (num.n / num.d)),\n       \"d\": num[\"d\"],\n       \"s\": this[\"s\"]\n       });*/\n\n      /*\n       * New attempt: a1 / b1 = a2 / b2 * q + r\n       * => b2 * a1 = a2 * b1 * q + b1 * b2 * r\n       * => (b2 * a1 % a2 * b1) / (b1 * b2)\n       */\n      return new Fraction(\n              this[\"s\"] * (P[\"d\"] * this[\"n\"]) % (P[\"n\"] * this[\"d\"]),\n              P[\"d\"] * this[\"d\"]\n              );\n    },\n\n    /**\n     * Calculates the fractional gcd of two rational numbers\n     *\n     * Ex: new Fraction(5,8).gcd(3,7) => 1/56\n     */\n    \"gcd\": function(a, b) {\n\n      parse(a, b);\n\n      // gcd(a / b, c / d) = gcd(a, c) / lcm(b, d)\n\n      return new Fraction(gcd(P[\"n\"], this[\"n\"]) * gcd(P[\"d\"], this[\"d\"]), P[\"d\"] * this[\"d\"]);\n    },\n\n    /**\n     * Calculates the fractional lcm of two rational numbers\n     *\n     * Ex: new Fraction(5,8).lcm(3,7) => 15\n     */\n    \"lcm\": function(a, b) {\n\n      parse(a, b);\n\n      // lcm(a / b, c / d) = lcm(a, c) / gcd(b, d)\n\n      if (P[\"n\"] === 0 && this[\"n\"] === 0) {\n        return new Fraction;\n      }\n      return new Fraction(P[\"n\"] * this[\"n\"], gcd(P[\"n\"], this[\"n\"]) * gcd(P[\"d\"], this[\"d\"]));\n    },\n\n    /**\n     * Calculates the ceil of a rational number\n     *\n     * Ex: new Fraction('4.(3)').ceil() => (5 / 1)\n     **/\n    \"ceil\": function(places) {\n\n      places = Math.pow(10, places || 0);\n\n      if (isNaN(this[\"n\"]) || isNaN(this[\"d\"])) {\n        return new Fraction(NaN);\n      }\n      return new Fraction(Math.ceil(places * this[\"s\"] * this[\"n\"] / this[\"d\"]), places);\n    },\n\n    /**\n     * Calculates the floor of a rational number\n     *\n     * Ex: new Fraction('4.(3)').floor() => (4 / 1)\n     **/\n    \"floor\": function(places) {\n\n      places = Math.pow(10, places || 0);\n\n      if (isNaN(this[\"n\"]) || isNaN(this[\"d\"])) {\n        return new Fraction(NaN);\n      }\n      return new Fraction(Math.floor(places * this[\"s\"] * this[\"n\"] / this[\"d\"]), places);\n    },\n\n    /**\n     * Rounds a rational numbers\n     *\n     * Ex: new Fraction('4.(3)').round() => (4 / 1)\n     **/\n    \"round\": function(places) {\n\n      places = Math.pow(10, places || 0);\n\n      if (isNaN(this[\"n\"]) || isNaN(this[\"d\"])) {\n        return new Fraction(NaN);\n      }\n      return new Fraction(Math.round(places * this[\"s\"] * this[\"n\"] / this[\"d\"]), places);\n    },\n\n    /**\n     * Gets the inverse of the fraction, means numerator and denumerator are exchanged\n     *\n     * Ex: new Fraction([-3, 4]).inverse() => -4 / 3\n     **/\n    \"inverse\": function() {\n\n      return new Fraction(this[\"s\"] * this[\"d\"], this[\"n\"]);\n    },\n\n    /**\n     * Calculates the fraction to some integer exponent\n     *\n     * Ex: new Fraction(-1,2).pow(-3) => -8\n     */\n    \"pow\": function(m) {\n\n      if (m < 0) {\n        return new Fraction(Math.pow(this['s'] * this[\"d\"], -m), Math.pow(this[\"n\"], -m));\n      } else {\n        return new Fraction(Math.pow(this['s'] * this[\"n\"], m), Math.pow(this[\"d\"], m));\n      }\n    },\n\n    /**\n     * Check if two rational numbers are the same\n     *\n     * Ex: new Fraction(19.6).equals([98, 5]);\n     **/\n    \"equals\": function(a, b) {\n\n      parse(a, b);\n      return this[\"s\"] * this[\"n\"] * P[\"d\"] === P[\"s\"] * P[\"n\"] * this[\"d\"]; // Same as compare() === 0\n    },\n\n    /**\n     * Check if two rational numbers are the same\n     *\n     * Ex: new Fraction(19.6).equals([98, 5]);\n     **/\n    \"compare\": function(a, b) {\n\n      parse(a, b);\n      var t = (this[\"s\"] * this[\"n\"] * P[\"d\"] - P[\"s\"] * P[\"n\"] * this[\"d\"]);\n      return (0 < t) - (t < 0);\n    },\n\n    \"simplify\": function(eps) {\n\n      // First naive implementation, needs improvement\n\n      if (isNaN(this['n']) || isNaN(this['d'])) {\n        return this;\n      }\n\n      var cont = this['abs']()['toContinued']();\n\n      eps = eps || 0.001;\n\n      function rec(a) {\n        if (a.length === 1)\n          return new Fraction(a[0]);\n        return rec(a.slice(1))['inverse']()['add'](a[0]);\n      }\n\n      for (var i = 0; i < cont.length; i++) {\n        var tmp = rec(cont.slice(0, i + 1));\n        if (tmp['sub'](this['abs']())['abs']().valueOf() < eps) {\n          return tmp['mul'](this['s']);\n        }\n      }\n      return this;\n    },\n\n    /**\n     * Check if two rational numbers are divisible\n     *\n     * Ex: new Fraction(19.6).divisible(1.5);\n     */\n    \"divisible\": function(a, b) {\n\n      parse(a, b);\n      return !(!(P[\"n\"] * this[\"d\"]) || ((this[\"n\"] * P[\"d\"]) % (P[\"n\"] * this[\"d\"])));\n    },\n\n    /**\n     * Returns a decimal representation of the fraction\n     *\n     * Ex: new Fraction(\"100.'91823'\").valueOf() => 100.91823918239183\n     **/\n    'valueOf': function() {\n\n      return this[\"s\"] * this[\"n\"] / this[\"d\"];\n    },\n\n    /**\n     * Returns a string-fraction representation of a Fraction object\n     *\n     * Ex: new Fraction(\"1.'3'\").toFraction() => \"4 1/3\"\n     **/\n    'toFraction': function(excludeWhole) {\n\n      var whole, str = \"\";\n      var n = this[\"n\"];\n      var d = this[\"d\"];\n      if (this[\"s\"] < 0) {\n        str += '-';\n      }\n\n      if (d === 1) {\n        str += n;\n      } else {\n\n        if (excludeWhole && (whole = Math.floor(n / d)) > 0) {\n          str += whole;\n          str += \" \";\n          n %= d;\n        }\n\n        str += n;\n        str += '/';\n        str += d;\n      }\n      return str;\n    },\n\n    /**\n     * Returns a latex representation of a Fraction object\n     *\n     * Ex: new Fraction(\"1.'3'\").toLatex() => \"\\frac{4}{3}\"\n     **/\n    'toLatex': function(excludeWhole) {\n\n      var whole, str = \"\";\n      var n = this[\"n\"];\n      var d = this[\"d\"];\n      if (this[\"s\"] < 0) {\n        str += '-';\n      }\n\n      if (d === 1) {\n        str += n;\n      } else {\n\n        if (excludeWhole && (whole = Math.floor(n / d)) > 0) {\n          str += whole;\n          n %= d;\n        }\n\n        str += \"\\\\frac{\";\n        str += n;\n        str += '}{';\n        str += d;\n        str += '}';\n      }\n      return str;\n    },\n\n    /**\n     * Returns an array of continued fraction elements\n     *\n     * Ex: new Fraction(\"7/8\").toContinued() => [0,1,7]\n     */\n    'toContinued': function() {\n\n      var t;\n      var a = this['n'];\n      var b = this['d'];\n      var res = [];\n\n      if (isNaN(this['n']) || isNaN(this['d'])) {\n        return res;\n      }\n\n      do {\n        res.push(Math.floor(a / b));\n        t = a % b;\n        a = b;\n        b = t;\n      } while (a !== 1);\n\n      return res;\n    },\n\n    /**\n     * Creates a string representation of a fraction with all digits\n     *\n     * Ex: new Fraction(\"100.'91823'\").toString() => \"100.(91823)\"\n     **/\n    'toString': function(dec) {\n\n      var g;\n      var N = this[\"n\"];\n      var D = this[\"d\"];\n\n      if (isNaN(N) || isNaN(D)) {\n        return \"NaN\";\n      }\n\n      if (!Fraction['REDUCE']) {\n        g = gcd(N, D);\n        N /= g;\n        D /= g;\n      }\n\n      dec = dec || 15; // 15 = decimal places when no repitation\n\n      var cycLen = cycleLen(N, D); // Cycle length\n      var cycOff = cycleStart(N, D, cycLen); // Cycle start\n\n      var str = this['s'] === -1 ? \"-\" : \"\";\n\n      str += N / D | 0;\n\n      N %= D;\n      N *= 10;\n\n      if (N)\n        str += \".\";\n\n      if (cycLen) {\n\n        for (var i = cycOff; i--; ) {\n          str += N / D | 0;\n          N %= D;\n          N *= 10;\n        }\n        str += \"(\";\n        for (var i = cycLen; i--; ) {\n          str += N / D | 0;\n          N %= D;\n          N *= 10;\n        }\n        str += \")\";\n      } else {\n        for (var i = dec; N && i--; ) {\n          str += N / D | 0;\n          N %= D;\n          N *= 10;\n        }\n      }\n      return str;\n    }\n  };\n\n  if (typeof define === \"function\" && define[\"amd\"]) {\n    define([], function() {\n      return Fraction;\n    });\n  } else if (typeof exports === \"object\") {\n    Object.defineProperty(exports, \"__esModule\", {'value': true});\n    Fraction['default'] = Fraction;\n    Fraction['Fraction'] = Fraction;\n    module['exports'] = Fraction;\n  } else {\n    root['Fraction'] = Fraction;\n  }\n\n})(this);\n"
        },
        {
          "id": 33,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/type/fraction/Fraction.js",
          "name": "../node_modules/mathjs/lib/type/fraction/Fraction.js",
          "index": 26,
          "index2": 21,
          "size": 903,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "issuer": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/type/fraction/index.js",
          "issuerId": 34,
          "issuerName": "../node_modules/mathjs/lib/type/fraction/index.js",
          "issuerPath": [
            {
              "id": 49,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
              "name": "./main.ts",
              "profile": {
                "factory": 58,
                "building": 1843
              }
            },
            {
              "id": 18,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DisplayService.ts",
              "name": "./services/DisplayService.ts",
              "profile": {
                "factory": 83,
                "building": 1193,
                "dependencies": 637
              }
            },
            {
              "id": 8,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DrinkDisplayService.ts",
              "name": "./services/DrinkDisplayService.ts",
              "profile": {
                "factory": 735,
                "building": 523,
                "dependencies": 1
              }
            },
            {
              "id": 46,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/MathService.ts",
              "name": "./services/MathService.ts",
              "profile": {
                "factory": 394,
                "building": 17
              }
            },
            {
              "id": 34,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/type/fraction/index.js",
              "name": "../node_modules/mathjs/lib/type/fraction/index.js",
              "profile": {
                "factory": 54,
                "building": 107
              }
            }
          ],
          "profile": {
            "factory": 5,
            "building": 12
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 34,
              "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/type/fraction/index.js",
              "module": "../node_modules/mathjs/lib/type/fraction/index.js",
              "moduleName": "../node_modules/mathjs/lib/type/fraction/index.js",
              "type": "cjs require",
              "userRequest": "./Fraction",
              "loc": "4:0-21"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 5,
          "source": "'use strict';\n\nvar Fraction = require('fraction.js');\n/**\n * Attach type information\n */\n\n\nFraction.prototype.type = 'Fraction';\nFraction.prototype.isFraction = true;\n/**\n * Get a JSON representation of a Fraction containing type information\n * @returns {Object} Returns a JSON object structured as:\n *                   `{\"mathjs\": \"Fraction\", \"n\": 3, \"d\": 8}`\n */\n\nFraction.prototype.toJSON = function () {\n  return {\n    mathjs: 'Fraction',\n    n: this.s * this.n,\n    d: this.d\n  };\n};\n/**\n * Instantiate a Fraction from a JSON object\n * @param {Object} json  a JSON object structured as:\n *                       `{\"mathjs\": \"Fraction\", \"n\": 3, \"d\": 8}`\n * @return {BigNumber}\n */\n\n\nFraction.fromJSON = function (json) {\n  return new Fraction(json);\n};\n\nfunction factory(type, config, load, typed) {\n  return Fraction;\n}\n\nexports.name = 'Fraction';\nexports.path = 'type';\nexports.factory = factory;"
        },
        {
          "id": 34,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/type/fraction/index.js",
          "name": "../node_modules/mathjs/lib/type/fraction/index.js",
          "index": 25,
          "index2": 24,
          "size": 121,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "issuer": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/MathService.ts",
          "issuerId": 46,
          "issuerName": "./services/MathService.ts",
          "issuerPath": [
            {
              "id": 49,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
              "name": "./main.ts",
              "profile": {
                "factory": 58,
                "building": 1843
              }
            },
            {
              "id": 18,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DisplayService.ts",
              "name": "./services/DisplayService.ts",
              "profile": {
                "factory": 83,
                "building": 1193,
                "dependencies": 637
              }
            },
            {
              "id": 8,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DrinkDisplayService.ts",
              "name": "./services/DrinkDisplayService.ts",
              "profile": {
                "factory": 735,
                "building": 523,
                "dependencies": 1
              }
            },
            {
              "id": 46,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/MathService.ts",
              "name": "./services/MathService.ts",
              "profile": {
                "factory": 394,
                "building": 17
              }
            }
          ],
          "profile": {
            "factory": 54,
            "building": 107
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 46,
              "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/MathService.ts",
              "module": "./services/MathService.ts",
              "moduleName": "./services/MathService.ts",
              "type": "cjs require",
              "userRequest": "mathjs/lib/type/fraction",
              "loc": "6:12-47"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 4,
          "source": "'use strict';\n\nmodule.exports = [// type\nrequire('./Fraction'), // construction function\nrequire('./function/fraction')];"
        },
        {
          "id": 35,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/core/function/config.js",
          "name": "../node_modules/mathjs/lib/core/function/config.js",
          "index": 24,
          "index2": 17,
          "size": 4287,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "issuer": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/core/core.js",
          "issuerId": 44,
          "issuerName": "../node_modules/mathjs/lib/core/core.js",
          "issuerPath": [
            {
              "id": 49,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
              "name": "./main.ts",
              "profile": {
                "factory": 58,
                "building": 1843
              }
            },
            {
              "id": 18,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DisplayService.ts",
              "name": "./services/DisplayService.ts",
              "profile": {
                "factory": 83,
                "building": 1193,
                "dependencies": 637
              }
            },
            {
              "id": 8,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DrinkDisplayService.ts",
              "name": "./services/DrinkDisplayService.ts",
              "profile": {
                "factory": 735,
                "building": 523,
                "dependencies": 1
              }
            },
            {
              "id": 46,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/MathService.ts",
              "name": "./services/MathService.ts",
              "profile": {
                "factory": 394,
                "building": 17
              }
            },
            {
              "id": 45,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/core.js",
              "name": "../node_modules/mathjs/core.js",
              "profile": {
                "factory": 54,
                "building": 107
              }
            },
            {
              "id": 44,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/core/core.js",
              "name": "../node_modules/mathjs/lib/core/core.js",
              "profile": {
                "factory": 111,
                "building": 7
              }
            }
          ],
          "profile": {
            "factory": 15,
            "building": 26,
            "dependencies": 19
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 44,
              "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/core/core.js",
              "module": "../node_modules/mathjs/lib/core/core.js",
              "moduleName": "../node_modules/mathjs/lib/core/core.js",
              "type": "cjs require",
              "userRequest": "./function/config",
              "loc": "13:20-48"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 6,
          "source": "'use strict';\n\nvar object = require('../../utils/object');\n\nfunction factory(type, config, load, typed, math) {\n  var MATRIX = ['Matrix', 'Array']; // valid values for option matrix\n\n  var NUMBER = ['number', 'BigNumber', 'Fraction']; // valid values for option number\n\n  /**\n   * Set configuration options for math.js, and get current options.\n   * Will emit a 'config' event, with arguments (curr, prev, changes).\n   *\n   * Syntax:\n   *\n   *     math.config(config: Object): Object\n   *\n   * Examples:\n   *\n   *     math.config().number                // outputs 'number'\n   *     math.eval('0.4')                    // outputs number 0.4\n   *     math.config({number: 'Fraction'})\n   *     math.eval('0.4')                    // outputs Fraction 2/5\n   *\n   * @param {Object} [options] Available options:\n   *                            {number} epsilon\n   *                              Minimum relative difference between two\n   *                              compared values, used by all comparison functions.\n   *                            {string} matrix\n   *                              A string 'Matrix' (default) or 'Array'.\n   *                            {string} number\n   *                              A string 'number' (default), 'BigNumber', or 'Fraction'\n   *                            {number} precision\n   *                              The number of significant digits for BigNumbers.\n   *                              Not applicable for Numbers.\n   *                            {string} parenthesis\n   *                              How to display parentheses in LaTeX and string\n   *                              output.\n   *                            {string} randomSeed\n   *                              Random seed for seeded pseudo random number generator.\n   *                              Set to null to randomly seed.\n   * @return {Object} Returns the current configuration\n   */\n\n  function _config(options) {\n    if (options) {\n      var prev = object.map(config, object.clone); // validate some of the options\n\n      validateOption(options, 'matrix', MATRIX);\n      validateOption(options, 'number', NUMBER); // merge options\n\n      object.deepExtend(config, options);\n      var curr = object.map(config, object.clone);\n      var changes = object.map(options, object.clone); // emit 'config' event\n\n      math.emit('config', curr, prev, changes);\n      return curr;\n    } else {\n      return object.map(config, object.clone);\n    }\n  } // attach the valid options to the function so they can be extended\n\n\n  _config.MATRIX = MATRIX;\n  _config.NUMBER = NUMBER;\n  return _config;\n}\n/**\n * Test whether an Array contains a specific item.\n * @param {Array.<string>} array\n * @param {string} item\n * @return {boolean}\n */\n\n\nfunction contains(array, item) {\n  return array.indexOf(item) !== -1;\n}\n/**\n * Find a string in an array. Case insensitive search\n * @param {Array.<string>} array\n * @param {string} item\n * @return {number} Returns the index when found. Returns -1 when not found\n */\n\n\nfunction findIndex(array, item) {\n  return array.map(function (i) {\n    return i.toLowerCase();\n  }).indexOf(item.toLowerCase());\n}\n/**\n * Validate an option\n * @param {Object} options         Object with options\n * @param {string} name            Name of the option to validate\n * @param {Array.<string>} values  Array with valid values for this option\n */\n\n\nfunction validateOption(options, name, values) {\n  if (options[name] !== undefined && !contains(values, options[name])) {\n    var index = findIndex(values, options[name]);\n\n    if (index !== -1) {\n      // right value, wrong casing\n      // TODO: lower case values are deprecated since v3, remove this warning some day.\n      console.warn('Warning: Wrong casing for configuration option \"' + name + '\", should be \"' + values[index] + '\" instead of \"' + options[name] + '\".');\n      options[name] = values[index]; // change the option to the right casing\n    } else {\n      // unknown value\n      console.warn('Warning: Unknown value \"' + options[name] + '\" for configuration option \"' + name + '\". Available options: ' + values.map(JSON.stringify).join(', ') + '.');\n    }\n  }\n}\n\nexports.name = 'config';\nexports.math = true; // request the math namespace as fifth argument\n\nexports.factory = factory;"
        },
        {
          "id": 36,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/error/ArgumentsError.js",
          "name": "../node_modules/mathjs/lib/error/ArgumentsError.js",
          "index": 23,
          "index2": 15,
          "size": 1055,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "issuer": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/core/function/import.js",
          "issuerId": 37,
          "issuerName": "../node_modules/mathjs/lib/core/function/import.js",
          "issuerPath": [
            {
              "id": 49,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
              "name": "./main.ts",
              "profile": {
                "factory": 58,
                "building": 1843
              }
            },
            {
              "id": 18,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DisplayService.ts",
              "name": "./services/DisplayService.ts",
              "profile": {
                "factory": 83,
                "building": 1193,
                "dependencies": 637
              }
            },
            {
              "id": 8,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DrinkDisplayService.ts",
              "name": "./services/DrinkDisplayService.ts",
              "profile": {
                "factory": 735,
                "building": 523,
                "dependencies": 1
              }
            },
            {
              "id": 46,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/MathService.ts",
              "name": "./services/MathService.ts",
              "profile": {
                "factory": 394,
                "building": 17
              }
            },
            {
              "id": 45,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/core.js",
              "name": "../node_modules/mathjs/core.js",
              "profile": {
                "factory": 54,
                "building": 107
              }
            },
            {
              "id": 44,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/core/core.js",
              "name": "../node_modules/mathjs/lib/core/core.js",
              "profile": {
                "factory": 111,
                "building": 7
              }
            },
            {
              "id": 37,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/core/function/import.js",
              "name": "../node_modules/mathjs/lib/core/function/import.js",
              "profile": {
                "factory": 15,
                "building": 26,
                "dependencies": 19
              }
            }
          ],
          "profile": {
            "factory": 15,
            "building": 2
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 37,
              "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/core/function/import.js",
              "module": "../node_modules/mathjs/lib/core/function/import.js",
              "moduleName": "../node_modules/mathjs/lib/core/function/import.js",
              "type": "cjs require",
              "userRequest": "../../error/ArgumentsError",
              "loc": "11:21-58"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 7,
          "source": "'use strict';\n/**\n * Create a syntax error with the message:\n *     'Wrong number of arguments in function <fn> (<count> provided, <min>-<max> expected)'\n * @param {string} fn     Function name\n * @param {number} count  Actual argument count\n * @param {number} min    Minimum required argument count\n * @param {number} [max]  Maximum required argument count\n * @extends Error\n */\n\nfunction ArgumentsError(fn, count, min, max) {\n  if (!(this instanceof ArgumentsError)) {\n    throw new SyntaxError('Constructor must be called with the new operator');\n  }\n\n  this.fn = fn;\n  this.count = count;\n  this.min = min;\n  this.max = max;\n  this.message = 'Wrong number of arguments in function ' + fn + ' (' + count + ' provided, ' + min + (max !== undefined && max !== null ? '-' + max : '') + ' expected)';\n  this.stack = new Error().stack;\n}\n\nArgumentsError.prototype = new Error();\nArgumentsError.prototype.constructor = Error;\nArgumentsError.prototype.name = 'ArgumentsError';\nArgumentsError.prototype.isArgumentsError = true;\nmodule.exports = ArgumentsError;"
        },
        {
          "id": 37,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/core/function/import.js",
          "name": "../node_modules/mathjs/lib/core/function/import.js",
          "index": 22,
          "index2": 16,
          "size": 9791,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "issuer": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/core/core.js",
          "issuerId": 44,
          "issuerName": "../node_modules/mathjs/lib/core/core.js",
          "issuerPath": [
            {
              "id": 49,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
              "name": "./main.ts",
              "profile": {
                "factory": 58,
                "building": 1843
              }
            },
            {
              "id": 18,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DisplayService.ts",
              "name": "./services/DisplayService.ts",
              "profile": {
                "factory": 83,
                "building": 1193,
                "dependencies": 637
              }
            },
            {
              "id": 8,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DrinkDisplayService.ts",
              "name": "./services/DrinkDisplayService.ts",
              "profile": {
                "factory": 735,
                "building": 523,
                "dependencies": 1
              }
            },
            {
              "id": 46,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/MathService.ts",
              "name": "./services/MathService.ts",
              "profile": {
                "factory": 394,
                "building": 17
              }
            },
            {
              "id": 45,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/core.js",
              "name": "../node_modules/mathjs/core.js",
              "profile": {
                "factory": 54,
                "building": 107
              }
            },
            {
              "id": 44,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/core/core.js",
              "name": "../node_modules/mathjs/lib/core/core.js",
              "profile": {
                "factory": 111,
                "building": 7
              }
            }
          ],
          "profile": {
            "factory": 15,
            "building": 26,
            "dependencies": 19
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 44,
              "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/core/core.js",
              "module": "../node_modules/mathjs/lib/core/core.js",
              "moduleName": "../node_modules/mathjs/lib/core/core.js",
              "type": "cjs require",
              "userRequest": "./function/import",
              "loc": "11:20-48"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 6,
          "source": "'use strict';\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar lazy = require('../../utils/object').lazy;\n\nvar isFactory = require('../../utils/object').isFactory;\n\nvar traverse = require('../../utils/object').traverse;\n\nvar ArgumentsError = require('../../error/ArgumentsError');\n\nfunction factory(type, config, load, typed, math) {\n  /**\n   * Import functions from an object or a module\n   *\n   * Syntax:\n   *\n   *    math.import(object)\n   *    math.import(object, options)\n   *\n   * Where:\n   *\n   * - `object: Object`\n   *   An object with functions to be imported.\n   * - `options: Object` An object with import options. Available options:\n   *   - `override: boolean`\n   *     If true, existing functions will be overwritten. False by default.\n   *   - `silent: boolean`\n   *     If true, the function will not throw errors on duplicates or invalid\n   *     types. False by default.\n   *   - `wrap: boolean`\n   *     If true, the functions will be wrapped in a wrapper function\n   *     which converts data types like Matrix to primitive data types like Array.\n   *     The wrapper is needed when extending math.js with libraries which do not\n   *     support these data type. False by default.\n   *\n   * Examples:\n   *\n   *    // define new functions and variables\n   *    math.import({\n   *      myvalue: 42,\n   *      hello: function (name) {\n   *        return 'hello, ' + name + '!'\n   *      }\n   *    })\n   *\n   *    // use the imported function and variable\n   *    math.myvalue * 2               // 84\n   *    math.hello('user')             // 'hello, user!'\n   *\n   *    // import the npm module 'numbers'\n   *    // (must be installed first with `npm install numbers`)\n   *    math.import(require('numbers'), {wrap: true})\n   *\n   *    math.fibonacci(7) // returns 13\n   *\n   * @param {Object | Array} object   Object with functions to be imported.\n   * @param {Object} [options]        Import options.\n   */\n  function mathImport(object, options) {\n    var num = arguments.length;\n\n    if (num !== 1 && num !== 2) {\n      throw new ArgumentsError('import', num, 1, 2);\n    }\n\n    if (!options) {\n      options = {};\n    } // TODO: allow a typed-function with name too\n\n\n    if (isFactory(object)) {\n      _importFactory(object, options);\n    } else if (Array.isArray(object)) {\n      object.forEach(function (entry) {\n        mathImport(entry, options);\n      });\n    } else if (_typeof(object) === 'object') {\n      // a map with functions\n      for (var name in object) {\n        if (object.hasOwnProperty(name)) {\n          var value = object[name];\n\n          if (isSupportedType(value)) {\n            _import(name, value, options);\n          } else if (isFactory(object)) {\n            _importFactory(object, options);\n          } else {\n            mathImport(value, options);\n          }\n        }\n      }\n    } else {\n      if (!options.silent) {\n        throw new TypeError('Factory, Object, or Array expected');\n      }\n    }\n  }\n  /**\n   * Add a property to the math namespace and create a chain proxy for it.\n   * @param {string} name\n   * @param {*} value\n   * @param {Object} options  See import for a description of the options\n   * @private\n   */\n\n\n  function _import(name, value, options) {\n    // TODO: refactor this function, it's to complicated and contains duplicate code\n    if (options.wrap && typeof value === 'function') {\n      // create a wrapper around the function\n      value = _wrap(value);\n    }\n\n    if (isTypedFunction(math[name]) && isTypedFunction(value)) {\n      if (options.override) {\n        // give the typed function the right name\n        value = typed(name, value.signatures);\n      } else {\n        // merge the existing and typed function\n        value = typed(math[name], value);\n      }\n\n      math[name] = value;\n\n      _importTransform(name, value);\n\n      math.emit('import', name, function resolver() {\n        return value;\n      });\n      return;\n    }\n\n    if (math[name] === undefined || options.override) {\n      math[name] = value;\n\n      _importTransform(name, value);\n\n      math.emit('import', name, function resolver() {\n        return value;\n      });\n      return;\n    }\n\n    if (!options.silent) {\n      throw new Error('Cannot import \"' + name + '\": already exists');\n    }\n  }\n\n  function _importTransform(name, value) {\n    if (value && typeof value.transform === 'function') {\n      math.expression.transform[name] = value.transform;\n\n      if (allowedInExpressions(name)) {\n        math.expression.mathWithTransform[name] = value.transform;\n      }\n    } else {\n      // remove existing transform\n      delete math.expression.transform[name];\n\n      if (allowedInExpressions(name)) {\n        math.expression.mathWithTransform[name] = value;\n      }\n    }\n  }\n\n  function _deleteTransform(name) {\n    delete math.expression.transform[name];\n\n    if (allowedInExpressions(name)) {\n      math.expression.mathWithTransform[name] = math[name];\n    } else {\n      delete math.expression.mathWithTransform[name];\n    }\n  }\n  /**\n   * Create a wrapper a round an function which converts the arguments\n   * to their primitive values (like convert a Matrix to Array)\n   * @param {Function} fn\n   * @return {Function} Returns the wrapped function\n   * @private\n   */\n\n\n  function _wrap(fn) {\n    var wrapper = function wrapper() {\n      var args = [];\n\n      for (var i = 0, len = arguments.length; i < len; i++) {\n        var arg = arguments[i];\n        args[i] = arg && arg.valueOf();\n      }\n\n      return fn.apply(math, args);\n    };\n\n    if (fn.transform) {\n      wrapper.transform = fn.transform;\n    }\n\n    return wrapper;\n  }\n  /**\n   * Import an instance of a factory into math.js\n   * @param {{factory: Function, name: string, path: string, math: boolean}} factory\n   * @param {Object} options  See import for a description of the options\n   * @private\n   */\n\n\n  function _importFactory(factory, options) {\n    if (typeof factory.name === 'string') {\n      var name = factory.name;\n      var existingTransform = name in math.expression.transform;\n      var namespace = factory.path ? traverse(math, factory.path) : math;\n      var existing = namespace.hasOwnProperty(name) ? namespace[name] : undefined;\n\n      var resolver = function resolver() {\n        var instance = load(factory);\n\n        if (instance && typeof instance.transform === 'function') {\n          throw new Error('Transforms cannot be attached to factory functions. ' + 'Please create a separate function for it with exports.path=\"expression.transform\"');\n        }\n\n        if (isTypedFunction(existing) && isTypedFunction(instance)) {\n          if (options.override) {// replace the existing typed function (nothing to do)\n          } else {\n            // merge the existing and new typed function\n            instance = typed(existing, instance);\n          }\n\n          return instance;\n        }\n\n        if (existing === undefined || options.override) {\n          return instance;\n        }\n\n        if (!options.silent) {\n          throw new Error('Cannot import \"' + name + '\": already exists');\n        }\n      };\n\n      if (factory.lazy !== false) {\n        lazy(namespace, name, resolver);\n\n        if (existingTransform) {\n          _deleteTransform(name);\n        } else {\n          if (factory.path === 'expression.transform' || factoryAllowedInExpressions(factory)) {\n            lazy(math.expression.mathWithTransform, name, resolver);\n          }\n        }\n      } else {\n        namespace[name] = resolver();\n\n        if (existingTransform) {\n          _deleteTransform(name);\n        } else {\n          if (factory.path === 'expression.transform' || factoryAllowedInExpressions(factory)) {\n            math.expression.mathWithTransform[name] = resolver();\n          }\n        }\n      }\n\n      math.emit('import', name, resolver, factory.path);\n    } else {\n      // unnamed factory.\n      // no lazy loading\n      load(factory);\n    }\n  }\n  /**\n   * Check whether given object is a type which can be imported\n   * @param {Function | number | string | boolean | null | Unit | Complex} object\n   * @return {boolean}\n   * @private\n   */\n\n\n  function isSupportedType(object) {\n    return typeof object === 'function' || typeof object === 'number' || typeof object === 'string' || typeof object === 'boolean' || object === null || object && type.isUnit(object) || object && type.isComplex(object) || object && type.isBigNumber(object) || object && type.isFraction(object) || object && type.isMatrix(object) || object && Array.isArray(object);\n  }\n  /**\n   * Test whether a given thing is a typed-function\n   * @param {*} fn\n   * @return {boolean} Returns true when `fn` is a typed-function\n   */\n\n\n  function isTypedFunction(fn) {\n    return typeof fn === 'function' && _typeof(fn.signatures) === 'object';\n  }\n\n  function allowedInExpressions(name) {\n    return !unsafe.hasOwnProperty(name);\n  }\n\n  function factoryAllowedInExpressions(factory) {\n    return factory.path === undefined && !unsafe.hasOwnProperty(factory.name);\n  } // namespaces and functions not available in the parser for safety reasons\n\n\n  var unsafe = {\n    'expression': true,\n    'type': true,\n    'docs': true,\n    'error': true,\n    'json': true,\n    'chain': true // chain method not supported. Note that there is a unit chain too.\n\n  };\n  return mathImport;\n}\n\nexports.math = true; // request access to the math namespace as 5th argument of the factory function\n\nexports.name = 'import';\nexports.factory = factory;\nexports.lazy = true;"
        },
        {
          "id": 38,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tiny-emitter/index.js",
          "name": "../node_modules/tiny-emitter/index.js",
          "index": 21,
          "index2": 13,
          "size": 1565,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "issuer": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/utils/emitter.js",
          "issuerId": 39,
          "issuerName": "../node_modules/mathjs/lib/utils/emitter.js",
          "issuerPath": [
            {
              "id": 49,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
              "name": "./main.ts",
              "profile": {
                "factory": 58,
                "building": 1843
              }
            },
            {
              "id": 18,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DisplayService.ts",
              "name": "./services/DisplayService.ts",
              "profile": {
                "factory": 83,
                "building": 1193,
                "dependencies": 637
              }
            },
            {
              "id": 8,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DrinkDisplayService.ts",
              "name": "./services/DrinkDisplayService.ts",
              "profile": {
                "factory": 735,
                "building": 523,
                "dependencies": 1
              }
            },
            {
              "id": 46,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/MathService.ts",
              "name": "./services/MathService.ts",
              "profile": {
                "factory": 394,
                "building": 17
              }
            },
            {
              "id": 45,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/core.js",
              "name": "../node_modules/mathjs/core.js",
              "profile": {
                "factory": 54,
                "building": 107
              }
            },
            {
              "id": 44,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/core/core.js",
              "name": "../node_modules/mathjs/lib/core/core.js",
              "profile": {
                "factory": 111,
                "building": 7
              }
            },
            {
              "id": 39,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/utils/emitter.js",
              "name": "../node_modules/mathjs/lib/utils/emitter.js",
              "profile": {
                "factory": 15,
                "building": 26,
                "dependencies": 19
              }
            }
          ],
          "profile": {
            "factory": 45,
            "building": 2
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 39,
              "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/utils/emitter.js",
              "module": "../node_modules/mathjs/lib/utils/emitter.js",
              "moduleName": "../node_modules/mathjs/lib/utils/emitter.js",
              "type": "cjs require",
              "userRequest": "tiny-emitter",
              "loc": "3:14-37"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 7,
          "source": "function E () {\n  // Keep this empty so it's easier to inherit from\n  // (via https://github.com/lipsmack from https://github.com/scottcorgan/tiny-emitter/issues/3)\n}\n\nE.prototype = {\n  on: function (name, callback, ctx) {\n    var e = this.e || (this.e = {});\n\n    (e[name] || (e[name] = [])).push({\n      fn: callback,\n      ctx: ctx\n    });\n\n    return this;\n  },\n\n  once: function (name, callback, ctx) {\n    var self = this;\n    function listener () {\n      self.off(name, listener);\n      callback.apply(ctx, arguments);\n    };\n\n    listener._ = callback\n    return this.on(name, listener, ctx);\n  },\n\n  emit: function (name) {\n    var data = [].slice.call(arguments, 1);\n    var evtArr = ((this.e || (this.e = {}))[name] || []).slice();\n    var i = 0;\n    var len = evtArr.length;\n\n    for (i; i < len; i++) {\n      evtArr[i].fn.apply(evtArr[i].ctx, data);\n    }\n\n    return this;\n  },\n\n  off: function (name, callback) {\n    var e = this.e || (this.e = {});\n    var evts = e[name];\n    var liveEvents = [];\n\n    if (evts && callback) {\n      for (var i = 0, len = evts.length; i < len; i++) {\n        if (evts[i].fn !== callback && evts[i].fn._ !== callback)\n          liveEvents.push(evts[i]);\n      }\n    }\n\n    // Remove event from queue to prevent memory leak\n    // Suggested by https://github.com/lazd\n    // Ref: https://github.com/scottcorgan/tiny-emitter/commit/c6ebfaa9bc973b33d110a84a307742b7cf94c953#commitcomment-5024910\n\n    (liveEvents.length)\n      ? e[name] = liveEvents\n      : delete e[name];\n\n    return this;\n  }\n};\n\nmodule.exports = E;\n"
        },
        {
          "id": 39,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/utils/emitter.js",
          "name": "../node_modules/mathjs/lib/utils/emitter.js",
          "index": 20,
          "index2": 14,
          "size": 522,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "issuer": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/core/core.js",
          "issuerId": 44,
          "issuerName": "../node_modules/mathjs/lib/core/core.js",
          "issuerPath": [
            {
              "id": 49,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
              "name": "./main.ts",
              "profile": {
                "factory": 58,
                "building": 1843
              }
            },
            {
              "id": 18,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DisplayService.ts",
              "name": "./services/DisplayService.ts",
              "profile": {
                "factory": 83,
                "building": 1193,
                "dependencies": 637
              }
            },
            {
              "id": 8,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DrinkDisplayService.ts",
              "name": "./services/DrinkDisplayService.ts",
              "profile": {
                "factory": 735,
                "building": 523,
                "dependencies": 1
              }
            },
            {
              "id": 46,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/MathService.ts",
              "name": "./services/MathService.ts",
              "profile": {
                "factory": 394,
                "building": 17
              }
            },
            {
              "id": 45,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/core.js",
              "name": "../node_modules/mathjs/core.js",
              "profile": {
                "factory": 54,
                "building": 107
              }
            },
            {
              "id": 44,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/core/core.js",
              "name": "../node_modules/mathjs/lib/core/core.js",
              "profile": {
                "factory": 111,
                "building": 7
              }
            }
          ],
          "profile": {
            "factory": 15,
            "building": 26,
            "dependencies": 19
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 44,
              "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/core/core.js",
              "module": "../node_modules/mathjs/lib/core/core.js",
              "moduleName": "../node_modules/mathjs/lib/core/core.js",
              "type": "cjs require",
              "userRequest": "./../utils/emitter",
              "loc": "9:14-43"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 6,
          "source": "'use strict';\n\nvar Emitter = require('tiny-emitter');\n/**\n * Extend given object with emitter functions `on`, `off`, `once`, `emit`\n * @param {Object} obj\n * @return {Object} obj\n */\n\n\nexports.mixin = function (obj) {\n  // create event emitter\n  var emitter = new Emitter(); // bind methods to obj (we don't want to expose the emitter.e Array...)\n\n  obj.on = emitter.on.bind(emitter);\n  obj.off = emitter.off.bind(emitter);\n  obj.once = emitter.once.bind(emitter);\n  obj.emit = emitter.emit.bind(emitter);\n  return obj;\n};"
        },
        {
          "id": 40,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/utils/collection/isMatrix.js",
          "name": "../node_modules/mathjs/lib/utils/collection/isMatrix.js",
          "index": 19,
          "index2": 11,
          "size": 291,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "issuer": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/core/typed.js",
          "issuerId": 42,
          "issuerName": "../node_modules/mathjs/lib/core/typed.js",
          "issuerPath": [
            {
              "id": 49,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
              "name": "./main.ts",
              "profile": {
                "factory": 58,
                "building": 1843
              }
            },
            {
              "id": 18,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DisplayService.ts",
              "name": "./services/DisplayService.ts",
              "profile": {
                "factory": 83,
                "building": 1193,
                "dependencies": 637
              }
            },
            {
              "id": 8,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DrinkDisplayService.ts",
              "name": "./services/DrinkDisplayService.ts",
              "profile": {
                "factory": 735,
                "building": 523,
                "dependencies": 1
              }
            },
            {
              "id": 46,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/MathService.ts",
              "name": "./services/MathService.ts",
              "profile": {
                "factory": 394,
                "building": 17
              }
            },
            {
              "id": 45,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/core.js",
              "name": "../node_modules/mathjs/core.js",
              "profile": {
                "factory": 54,
                "building": 107
              }
            },
            {
              "id": 44,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/core/core.js",
              "name": "../node_modules/mathjs/lib/core/core.js",
              "profile": {
                "factory": 111,
                "building": 7
              }
            },
            {
              "id": 42,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/core/typed.js",
              "name": "../node_modules/mathjs/lib/core/typed.js",
              "profile": {
                "factory": 15,
                "building": 26,
                "dependencies": 19
              }
            }
          ],
          "profile": {
            "factory": 37,
            "building": 13
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 42,
              "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/core/typed.js",
              "module": "../node_modules/mathjs/lib/core/typed.js",
              "moduleName": "../node_modules/mathjs/lib/core/typed.js",
              "type": "cjs require",
              "userRequest": "./../utils/collection/isMatrix",
              "loc": "11:15-56"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 7,
          "source": "'use strict';\n/**\n * Test whether a value is a Matrix\n * @param {*} x\n * @returns {boolean} returns true with input is a Matrix\n *                    (like a DenseMatrix or SparseMatrix)\n */\n\nmodule.exports = function isMatrix(x) {\n  return x && x.constructor.prototype.isMatrix || false;\n};"
        },
        {
          "id": 41,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/typed-function/typed-function.js",
          "name": "../node_modules/typed-function/typed-function.js",
          "index": 17,
          "index2": 9,
          "size": 43392,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "issuer": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/core/typed.js",
          "issuerId": 42,
          "issuerName": "../node_modules/mathjs/lib/core/typed.js",
          "issuerPath": [
            {
              "id": 49,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
              "name": "./main.ts",
              "profile": {
                "factory": 58,
                "building": 1843
              }
            },
            {
              "id": 18,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DisplayService.ts",
              "name": "./services/DisplayService.ts",
              "profile": {
                "factory": 83,
                "building": 1193,
                "dependencies": 637
              }
            },
            {
              "id": 8,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DrinkDisplayService.ts",
              "name": "./services/DrinkDisplayService.ts",
              "profile": {
                "factory": 735,
                "building": 523,
                "dependencies": 1
              }
            },
            {
              "id": 46,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/MathService.ts",
              "name": "./services/MathService.ts",
              "profile": {
                "factory": 394,
                "building": 17
              }
            },
            {
              "id": 45,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/core.js",
              "name": "../node_modules/mathjs/core.js",
              "profile": {
                "factory": 54,
                "building": 107
              }
            },
            {
              "id": 44,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/core/core.js",
              "name": "../node_modules/mathjs/lib/core/core.js",
              "profile": {
                "factory": 111,
                "building": 7
              }
            },
            {
              "id": 42,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/core/typed.js",
              "name": "../node_modules/mathjs/lib/core/typed.js",
              "profile": {
                "factory": 15,
                "building": 26,
                "dependencies": 19
              }
            }
          ],
          "profile": {
            "factory": 37,
            "building": 13
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 42,
              "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/core/typed.js",
              "module": "../node_modules/mathjs/lib/core/typed.js",
              "moduleName": "../node_modules/mathjs/lib/core/typed.js",
              "type": "cjs require",
              "userRequest": "typed-function",
              "loc": "5:20-45"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 7,
          "source": "/**\n * typed-function\n *\n * Type checking for JavaScript functions\n *\n * https://github.com/josdejong/typed-function\n */\n'use strict';\n\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define([], factory);\n  } else if (typeof exports === 'object') {\n    // OldNode. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like OldNode.\n    module.exports = factory();\n  } else {\n    // Browser globals (root is window)\n    root.typed = factory();\n  }\n}(this, function () {\n\n  function ok () {\n    return true;\n  }\n\n  function notOk () {\n    return false;\n  }\n\n  function undef () {\n    return undefined;\n  }\n\n  /**\n   * @typedef {{\n   *   params: Param[],\n   *   fn: function\n   * }} Signature\n   *\n   * @typedef {{\n   *   types: Type[],\n   *   restParam: boolean\n   * }} Param\n   *\n   * @typedef {{\n   *   name: string,\n   *   typeIndex: number,\n   *   test: function,\n   *   conversion?: ConversionDef,\n   *   conversionIndex: number,\n   * }} Type\n   *\n   * @typedef {{\n   *   from: string,\n   *   to: string,\n   *   convert: function (*) : *\n   * }} ConversionDef\n   *\n   * @typedef {{\n   *   name: string,\n   *   test: function(*) : boolean\n   * }} TypeDef\n   */\n\n  // create a new instance of typed-function\n  function create () {\n    // data type tests\n    var _types = [\n      { name: 'number',    test: function (x) { return typeof x === 'number' } },\n      { name: 'string',    test: function (x) { return typeof x === 'string' } },\n      { name: 'boolean',   test: function (x) { return typeof x === 'boolean' } },\n      { name: 'Function',  test: function (x) { return typeof x === 'function'} },\n      { name: 'Array',     test: Array.isArray },\n      { name: 'Date',      test: function (x) { return x instanceof Date } },\n      { name: 'RegExp',    test: function (x) { return x instanceof RegExp } },\n      { name: 'Object',    test: function (x) {\n        return typeof x === 'object' && x.constructor === Object\n      }},\n      { name: 'null',      test: function (x) { return x === null } },\n      { name: 'undefined', test: function (x) { return x === undefined } }\n    ];\n\n    var anyType = {\n      name: 'any',\n      test: ok\n    }\n\n    // types which need to be ignored\n    var _ignore = [];\n\n    // type conversions\n    var _conversions = [];\n\n    // This is a temporary object, will be replaced with a typed function at the end\n    var typed = {\n      types: _types,\n      conversions: _conversions,\n      ignore: _ignore\n    };\n\n    /**\n     * Find the test function for a type\n     * @param {String} typeName\n     * @return {TypeDef} Returns the type definition when found,\n     *                    Throws a TypeError otherwise\n     */\n    function findTypeByName (typeName) {\n      var entry = findInArray(typed.types, function (entry) {\n        return entry.name === typeName;\n      });\n\n      if (entry) {\n        return entry;\n      }\n\n      if (typeName === 'any') { // special baked-in case 'any'\n        return anyType;\n      }\n\n      var hint = findInArray(typed.types, function (entry) {\n        return entry.name.toLowerCase() === typeName.toLowerCase();\n      });\n\n      throw new TypeError('Unknown type \"' + typeName + '\"' +\n          (hint ? ('. Did you mean \"' + hint.name + '\"?') : ''));\n    }\n\n    /**\n     * Find the index of a type definition. Handles special case 'any'\n     * @param {TypeDef} type\n     * @return {number}\n     */\n    function findTypeIndex(type) {\n      if (type === anyType) {\n        return 999;\n      }\n\n      return typed.types.indexOf(type);\n    }\n\n    /**\n     * Find a type that matches a value.\n     * @param {*} value\n     * @return {string} Returns the name of the first type for which\n     *                  the type test matches the value.\n     */\n    function findTypeName(value) {\n      var entry = findInArray(typed.types, function (entry) {\n        return entry.test(value);\n      });\n\n      if (entry) {\n        return entry.name;\n      }\n\n      throw new TypeError('Value has unknown type. Value: ' + value);\n    }\n\n    /**\n     * Find a specific signature from a (composed) typed function, for example:\n     *\n     *   typed.find(fn, ['number', 'string'])\n     *   typed.find(fn, 'number, string')\n     *\n     * Function find only only works for exact matches.\n     *\n     * @param {Function} fn                   A typed-function\n     * @param {string | string[]} signature   Signature to be found, can be\n     *                                        an array or a comma separated string.\n     * @return {Function}                     Returns the matching signature, or\n     *                                        throws an error when no signature\n     *                                        is found.\n     */\n    function find (fn, signature) {\n      if (!fn.signatures) {\n        throw new TypeError('Function is no typed-function');\n      }\n\n      // normalize input\n      var arr;\n      if (typeof signature === 'string') {\n        arr = signature.split(',');\n        for (var i = 0; i < arr.length; i++) {\n          arr[i] = arr[i].trim();\n        }\n      }\n      else if (Array.isArray(signature)) {\n        arr = signature;\n      }\n      else {\n        throw new TypeError('String array or a comma separated string expected');\n      }\n\n      var str = arr.join(',');\n\n      // find an exact match\n      var match = fn.signatures[str];\n      if (match) {\n        return match;\n      }\n\n      // TODO: extend find to match non-exact signatures\n\n      throw new TypeError('Signature not found (signature: ' + (fn.name || 'unnamed') + '(' + arr.join(', ') + '))');\n    }\n\n    /**\n     * Convert a given value to another data type.\n     * @param {*} value\n     * @param {string} type\n     */\n    function convert (value, type) {\n      var from = findTypeName(value);\n\n      // check conversion is needed\n      if (type === from) {\n        return value;\n      }\n\n      for (var i = 0; i < typed.conversions.length; i++) {\n        var conversion = typed.conversions[i];\n        if (conversion.from === from && conversion.to === type) {\n          return conversion.convert(value);\n        }\n      }\n\n      throw new Error('Cannot convert from ' + from + ' to ' + type);\n    }\n    \n    /**\n     * Stringify parameters in a normalized way\n     * @param {Param[]} params\n     * @return {string}\n     */\n    function stringifyParams (params) {\n      return params\n          .map(function (param) {\n            var typeNames = param.types.map(getTypeName);\n\n            return (param.restParam ? '...' : '') + typeNames.join('|');\n          })\n          .join(',');\n    }\n\n    /**\n     * Parse a parameter, like \"...number | boolean\"\n     * @param {string} param\n     * @param {ConversionDef[]} conversions\n     * @return {Param} param\n     */\n    function parseParam (param, conversions) {\n      var restParam = param.indexOf('...') === 0;\n      var types = (!restParam)\n          ? param\n          : (param.length > 3)\n              ? param.slice(3)\n              : 'any';\n\n      var typeNames = types.split('|').map(trim)\n          .filter(notEmpty)\n          .filter(notIgnore);\n\n      var matchingConversions = filterConversions(conversions, typeNames);\n\n      var exactTypes = typeNames.map(function (typeName) {\n        var type = findTypeByName(typeName);\n\n        return {\n          name: typeName,\n          typeIndex: findTypeIndex(type),\n          test: type.test,\n          conversion: null,\n          conversionIndex: -1\n        };\n      });\n\n      var convertibleTypes = matchingConversions.map(function (conversion) {\n        var type = findTypeByName(conversion.from);\n\n        return {\n          name: conversion.from,\n          typeIndex: findTypeIndex(type),\n          test: type.test,\n          conversion: conversion,\n          conversionIndex: conversions.indexOf(conversion)\n        };\n      });\n\n      return {\n        types: exactTypes.concat(convertibleTypes),\n        restParam: restParam\n      };\n    }\n\n    /**\n     * Parse a signature with comma separated parameters,\n     * like \"number | boolean, ...string\"\n     * @param {string} signature\n     * @param {function} fn\n     * @param {ConversionDef[]} conversions\n     * @return {Signature | null} signature\n     */\n    function parseSignature (signature, fn, conversions) {\n      var params = [];\n\n      if (signature.trim() !== '') {\n        params = signature\n            .split(',')\n            .map(trim)\n            .map(function (param, index, array) {\n              var parsedParam = parseParam(param, conversions);\n\n              if (parsedParam.restParam && (index !== array.length - 1)) {\n                throw new SyntaxError('Unexpected rest parameter \"' + param + '\": ' +\n                    'only allowed for the last parameter');\n              }\n\n              return parsedParam;\n          });\n      }\n\n      if (params.some(isInvalidParam)) {\n        // invalid signature: at least one parameter has no types\n        // (they may have been filtered)\n        return null;\n      }\n\n      return {\n        params: params,\n        fn: fn\n      };\n    }\n\n    /**\n     * Test whether a set of params contains a restParam\n     * @param {Param[]} params\n     * @return {boolean} Returns true when the last parameter is a restParam\n     */\n    function hasRestParam(params) {\n      var param = last(params)\n      return param ? param.restParam : false;\n    }\n\n    /**\n     * Test whether a parameter contains conversions\n     * @param {Param} param\n     * @return {boolean} Returns true when at least one of the parameters\n     *                   contains a conversion.\n     */\n    function hasConversions(param) {\n      return param.types.some(function (type) {\n        return type.conversion != null;\n      });\n    }\n\n    /**\n     * Create a type test for a single parameter, which can have one or multiple\n     * types.\n     * @param {Param} param\n     * @return {function(x: *) : boolean} Returns a test function\n     */\n    function compileTest(param) {\n      if (!param || param.types.length === 0) {\n        // nothing to do\n        return ok;\n      }\n      else if (param.types.length === 1) {\n        return findTypeByName(param.types[0].name).test;\n      }\n      else if (param.types.length === 2) {\n        var test0 = findTypeByName(param.types[0].name).test;\n        var test1 = findTypeByName(param.types[1].name).test;\n        return function or(x) {\n          return test0(x) || test1(x);\n        }\n      }\n      else { // param.types.length > 2\n        var tests = param.types.map(function (type) {\n          return findTypeByName(type.name).test;\n        })\n        return function or(x) {\n          for (var i = 0; i < tests.length; i++) {\n            if (tests[i](x)) {\n              return true;\n            }\n          }\n          return false;\n        }\n      }\n    }\n\n    /**\n     * Create a test for all parameters of a signature\n     * @param {Param[]} params\n     * @return {function(args: Array<*>) : boolean}\n     */\n    function compileTests(params) {\n      var tests, test0, test1;\n\n      if (hasRestParam(params)) {\n        // variable arguments like '...number'\n        tests = initial(params).map(compileTest);\n        var varIndex = tests.length;\n        var lastTest = compileTest(last(params));\n        var testRestParam = function (args) {\n          for (var i = varIndex; i < args.length; i++) {\n            if (!lastTest(args[i])) {\n              return false;\n            }\n          }\n          return true;\n        }\n\n        return function testArgs(args) {\n          for (var i = 0; i < tests.length; i++) {\n            if (!tests[i](args[i])) {\n              return false;\n            }\n          }\n          return testRestParam(args) && (args.length >= varIndex + 1);\n        };\n      }\n      else {\n        // no variable arguments\n        if (params.length === 0) {\n          return function testArgs(args) {\n            return args.length === 0;\n          };\n        }\n        else if (params.length === 1) {\n          test0 = compileTest(params[0]);\n          return function testArgs(args) {\n            return test0(args[0]) && args.length === 1;\n          };\n        }\n        else if (params.length === 2) {\n          test0 = compileTest(params[0]);\n          test1 = compileTest(params[1]);\n          return function testArgs(args) {\n            return test0(args[0]) && test1(args[1]) && args.length === 2;\n          };\n        }\n        else { // arguments.length > 2\n          tests = params.map(compileTest);\n          return function testArgs(args) {\n            for (var i = 0; i < tests.length; i++) {\n              if (!tests[i](args[i])) {\n                return false;\n              }\n            }\n            return args.length === tests.length;\n          };\n        }\n      }\n    }\n\n    /**\n     * Find the parameter at a specific index of a signature.\n     * Handles rest parameters.\n     * @param {Signature} signature\n     * @param {number} index\n     * @return {Param | null} Returns the matching parameter when found,\n     *                        null otherwise.\n     */\n    function getParamAtIndex(signature, index) {\n      return index < signature.params.length\n          ? signature.params[index]\n          : hasRestParam(signature.params)\n              ? last(signature.params)\n              : null\n    }\n\n    /**\n     * Get all type names of a parameter\n     * @param {Signature} signature\n     * @param {number} index\n     * @param {boolean} excludeConversions\n     * @return {string[]} Returns an array with type names\n     */\n    function getExpectedTypeNames (signature, index, excludeConversions) {\n      var param = getParamAtIndex(signature, index);\n      var types = param\n          ? excludeConversions\n                  ? param.types.filter(isExactType)\n                  : param.types\n          : [];\n\n      return types.map(getTypeName);\n    }\n\n    /**\n     * Returns the name of a type\n     * @param {Type} type\n     * @return {string} Returns the type name\n     */\n    function getTypeName(type) {\n      return type.name;\n    }\n\n    /**\n     * Test whether a type is an exact type or conversion\n     * @param {Type} type\n     * @return {boolean} Returns true when\n     */\n    function isExactType(type) {\n      return type.conversion === null || type.conversion === undefined;\n    }\n\n    /**\n     * Helper function for creating error messages: create an array with\n     * all available types on a specific argument index.\n     * @param {Signature[]} signatures\n     * @param {number} index\n     * @return {string[]} Returns an array with available types\n     */\n    function mergeExpectedParams(signatures, index) {\n      var typeNames = uniq(flatMap(signatures, function (signature) {\n        return getExpectedTypeNames(signature, index, false);\n      }));\n\n      return (typeNames.indexOf('any') !== -1) ? ['any'] : typeNames;\n    }\n\n    /**\n     * Create\n     * @param {string} name             The name of the function\n     * @param {array.<*>} args          The actual arguments passed to the function\n     * @param {Signature[]} signatures  A list with available signatures\n     * @return {TypeError} Returns a type error with additional data\n     *                     attached to it in the property `data`\n     */\n    function createError(name, args, signatures) {\n      var err, expected;\n      var _name = name || 'unnamed';\n\n      // test for wrong type at some index\n      var matchingSignatures = signatures;\n      var index;\n      for (index = 0; index < args.length; index++) {\n        var nextMatchingDefs = matchingSignatures.filter(function (signature) {\n          var test = compileTest(getParamAtIndex(signature, index));\n          return (index < signature.params.length || hasRestParam(signature.params)) &&\n              test(args[index]);\n        });\n\n        if (nextMatchingDefs.length === 0) {\n          // no matching signatures anymore, throw error \"wrong type\"\n          expected = mergeExpectedParams(matchingSignatures, index);\n          if (expected.length > 0) {\n            var actualType = findTypeName(args[index]);\n\n            err = new TypeError('Unexpected type of argument in function ' + _name +\n                ' (expected: ' + expected.join(' or ') +\n                ', actual: ' + actualType + ', index: ' + index + ')');\n            err.data = {\n              category: 'wrongType',\n              fn: _name,\n              index: index,\n              actual: actualType,\n              expected: expected\n            }\n            return err;\n          }\n        }\n        else {\n          matchingSignatures = nextMatchingDefs;\n        }\n      }\n\n      // test for too few arguments\n      var lengths = matchingSignatures.map(function (signature) {\n        return hasRestParam(signature.params) ? Infinity : signature.params.length;\n      });\n      if (args.length < Math.min.apply(null, lengths)) {\n        expected = mergeExpectedParams(matchingSignatures, index);\n        err = new TypeError('Too few arguments in function ' + _name +\n            ' (expected: ' + expected.join(' or ') +\n            ', index: ' + args.length + ')');\n        err.data = {\n          category: 'tooFewArgs',\n          fn: _name,\n          index: args.length,\n          expected: expected\n        }\n        return err;\n      }\n\n      // test for too many arguments\n      var maxLength = Math.max.apply(null, lengths);\n      if (args.length > maxLength) {\n        err = new TypeError('Too many arguments in function ' + _name +\n            ' (expected: ' + maxLength + ', actual: ' + args.length + ')');\n        err.data = {\n          category: 'tooManyArgs',\n          fn: _name,\n          index: args.length,\n          expectedLength: maxLength\n        }\n        return err;\n      }\n\n      err = new TypeError('Arguments of type \"' + args.join(', ') +\n          '\" do not match any of the defined signatures of function ' + _name + '.');\n      err.data = {\n        category: 'mismatch',\n        actual: args.map(findTypeName)\n      }\n      return err;\n    }\n\n    /**\n     * Find the lowest index of all exact types of a parameter (no conversions)\n     * @param {Param} param\n     * @return {number} Returns the index of the lowest type in typed.types\n     */\n    function getLowestTypeIndex (param) {\n      var min = 999;\n\n      for (var i = 0; i < param.types.length; i++) {\n        if (isExactType(param.types[i])) {\n          min = Math.min(min, param.types[i].typeIndex);\n        }\n      }\n\n      return min;\n    }\n\n    /**\n     * Find the lowest index of the conversion of all types of the parameter\n     * having a conversion\n     * @param {Param} param\n     * @return {number} Returns the lowest index of the conversions of this type\n     */\n    function getLowestConversionIndex (param) {\n      var min = 999;\n\n      for (var i = 0; i < param.types.length; i++) {\n        if (!isExactType(param.types[i])) {\n          min = Math.min(min, param.types[i].conversionIndex);\n        }\n      }\n\n      return min;\n    }\n\n    /**\n     * Compare two params\n     * @param {Param} param1\n     * @param {Param} param2\n     * @return {number} returns a negative number when param1 must get a lower\n     *                  index than param2, a positive number when the opposite,\n     *                  or zero when both are equal\n     */\n    function compareParams (param1, param2) {\n      var c;\n\n      // compare having a rest parameter or not\n      c = param1.restParam - param2.restParam;\n      if (c !== 0) {\n        return c;\n      }\n\n      // compare having conversions or not\n      c = hasConversions(param1) - hasConversions(param2);\n      if (c !== 0) {\n        return c;\n      }\n\n      // compare the index of the types\n      c = getLowestTypeIndex(param1) - getLowestTypeIndex(param2);\n      if (c !== 0) {\n        return c;\n      }\n\n      // compare the index of any conversion\n      return getLowestConversionIndex(param1) - getLowestConversionIndex(param2);\n    }\n\n    /**\n     * Compare two signatures\n     * @param {Signature} signature1\n     * @param {Signature} signature2\n     * @return {number} returns a negative number when param1 must get a lower\n     *                  index than param2, a positive number when the opposite,\n     *                  or zero when both are equal\n     */\n    function compareSignatures (signature1, signature2) {\n      var len = Math.min(signature1.params.length, signature2.params.length);\n      var i;\n      var c;\n\n      // compare whether the params have conversions at all or not\n      c = signature1.params.some(hasConversions) - signature2.params.some(hasConversions)\n      if (c !== 0) {\n        return c;\n      }\n\n      // next compare whether the params have conversions one by one\n      for (i = 0; i < len; i++) {\n        c = hasConversions(signature1.params[i]) - hasConversions(signature2.params[i]);\n        if (c !== 0) {\n          return c;\n        }\n      }\n\n      // compare the types of the params one by one\n      for (i = 0; i < len; i++) {\n        c = compareParams(signature1.params[i], signature2.params[i]);\n        if (c !== 0) {\n          return c;\n        }\n      }\n\n      // compare the number of params\n      return signature1.params.length - signature2.params.length;\n    }\n\n    /**\n     * Get params containing all types that can be converted to the defined types.\n     *\n     * @param {ConversionDef[]} conversions\n     * @param {string[]} typeNames\n     * @return {ConversionDef[]} Returns the conversions that are available\n     *                        for every type (if any)\n     */\n    function filterConversions(conversions, typeNames) {\n      var matches = {};\n\n      conversions.forEach(function (conversion) {\n        if (typeNames.indexOf(conversion.from) === -1 &&\n            typeNames.indexOf(conversion.to) !== -1 &&\n            !matches[conversion.from]) {\n          matches[conversion.from] = conversion;\n        }\n      });\n\n      return Object.keys(matches).map(function (from) {\n        return matches[from];\n      });\n    }\n\n    /**\n     * Preprocess arguments before calling the original function:\n     * - if needed convert the parameters\n     * - in case of rest parameters, move the rest parameters into an Array\n     * @param {Param[]} params\n     * @param {function} fn\n     * @return {function} Returns a wrapped function\n     */\n    function compileArgsPreprocessing(params, fn) {\n      var fnConvert = fn;\n\n      // TODO: can we make this wrapper function smarter/simpler?\n\n      if (params.some(hasConversions)) {\n        var restParam = hasRestParam(params);\n        var compiledConversions = params.map(compileArgConversion)\n\n        fnConvert = function convertArgs() {\n          var args = [];\n          var last = restParam ? arguments.length - 1 : arguments.length;\n          for (var i = 0; i < last; i++) {\n            args[i] = compiledConversions[i](arguments[i]);\n          }\n          if (restParam) {\n            args[last] = arguments[last].map(compiledConversions[last]);\n          }\n\n          return fn.apply(null, args);\n        }\n      }\n\n      var fnPreprocess = fnConvert;\n      if (hasRestParam(params)) {\n        var offset = params.length - 1;\n\n        fnPreprocess = function preprocessRestParams () {\n          return fnConvert.apply(null,\n              slice(arguments, 0, offset).concat([slice(arguments, offset)]));\n        }\n      }\n\n      return fnPreprocess;\n    }\n\n    /**\n     * Compile conversion for a parameter to the right type\n     * @param {Param} param\n     * @return {function} Returns the wrapped function that will convert arguments\n     *\n     */\n    function compileArgConversion(param) {\n      var test0, test1, conversion0, conversion1;\n      var tests = [];\n      var conversions = [];\n\n      param.types.forEach(function (type) {\n        if (type.conversion) {\n          tests.push(findTypeByName(type.conversion.from).test);\n          conversions.push(type.conversion.convert);\n        }\n      });\n\n      // create optimized conversion functions depending on the number of conversions\n      switch (conversions.length) {\n        case 0:\n          return function convertArg(arg) {\n            return arg;\n          }\n\n        case 1:\n          test0 = tests[0]\n          conversion0 = conversions[0];\n          return function convertArg(arg) {\n            if (test0(arg)) {\n              return conversion0(arg)\n            }\n            return arg;\n          }\n\n        case 2:\n          test0 = tests[0]\n          test1 = tests[1]\n          conversion0 = conversions[0];\n          conversion1 = conversions[1];\n          return function convertArg(arg) {\n            if (test0(arg)) {\n              return conversion0(arg)\n            }\n            if (test1(arg)) {\n              return conversion1(arg)\n            }\n            return arg;\n          }\n\n        default:\n          return function convertArg(arg) {\n            for (var i = 0; i < conversions.length; i++) {\n              if (tests[i](arg)) {\n                return conversions[i](arg);\n              }\n            }\n            return arg;\n          }\n      }\n    }\n\n    /**\n     * Convert an array with signatures into a map with signatures,\n     * where signatures with union types are split into separate signatures\n     *\n     * Throws an error when there are conflicting types\n     *\n     * @param {Signature[]} signatures\n     * @return {Object.<string, function>}  Returns a map with signatures\n     *                                      as key and the original function\n     *                                      of this signature as value.\n     */\n    function createSignaturesMap(signatures) {\n      var signaturesMap = {};\n      signatures.forEach(function (signature) {\n        if (!signature.params.some(hasConversions)) {\n          splitParams(signature.params, true).forEach(function (params) {\n            signaturesMap[stringifyParams(params)] = signature.fn;\n          });\n        }\n      });\n\n      return signaturesMap;\n    }\n\n    /**\n     * Split params with union types in to separate params.\n     *\n     * For example:\n     *\n     *     splitParams([['Array', 'Object'], ['string', 'RegExp'])\n     *     // returns:\n     *     // [\n     *     //   ['Array', 'string'],\n     *     //   ['Array', 'RegExp'],\n     *     //   ['Object', 'string'],\n     *     //   ['Object', 'RegExp']\n     *     // ]\n     *\n     * @param {Param[]} params\n     * @param {boolean} ignoreConversionTypes\n     * @return {Param[]}\n     */\n    function splitParams(params, ignoreConversionTypes) {\n      function _splitParams(params, index, types) {\n        if (index < params.length) {\n          var param = params[index]\n          var filteredTypes = ignoreConversionTypes\n              ? param.types.filter(isExactType)\n              : param.types;\n          var typeGroups\n\n          if (param.restParam) {\n            // split the types of a rest parameter in two:\n            // one with only exact types, and one with exact types and conversions\n            var exactTypes = filteredTypes.filter(isExactType)\n            typeGroups = exactTypes.length < filteredTypes.length\n                ? [exactTypes, filteredTypes]\n                : [filteredTypes]\n\n          }\n          else {\n            // split all the types of a regular parameter into one type per group\n            typeGroups = filteredTypes.map(function (type) {\n              return [type]\n            })\n          }\n\n          // recurse over the groups with types\n          return flatMap(typeGroups, function (typeGroup) {\n            return _splitParams(params, index + 1, types.concat([typeGroup]));\n          });\n\n        }\n        else {\n          // we've reached the end of the parameters. Now build a new Param\n          var splittedParams = types.map(function (type, typeIndex) {\n            return {\n              types: type,\n              restParam: (typeIndex === params.length - 1) && hasRestParam(params)\n            }\n          });\n\n          return [splittedParams];\n        }\n      }\n\n      return _splitParams(params, 0, []);\n    }\n\n    /**\n     * Test whether two signatures have a conflicting signature\n     * @param {Signature} signature1\n     * @param {Signature} signature2\n     * @return {boolean} Returns true when the signatures conflict, false otherwise.\n     */\n    function hasConflictingParams(signature1, signature2) {\n      var ii = Math.max(signature1.params.length, signature2.params.length);\n\n      for (var i = 0; i < ii; i++) {\n        var typesNames1 = getExpectedTypeNames(signature1, i, true);\n        var typesNames2 = getExpectedTypeNames(signature2, i, true);\n\n        if (!hasOverlap(typesNames1, typesNames2)) {\n          return false;\n        }\n      }\n\n      var len1 = signature1.params.length;\n      var len2 = signature2.params.length;\n      var restParam1 = hasRestParam(signature1.params);\n      var restParam2 = hasRestParam(signature2.params);\n\n      return restParam1\n          ? restParam2 ? (len1 === len2) : (len2 >= len1)\n          : restParam2 ? (len1 >= len2)  : (len1 === len2)\n    }\n\n    /**\n     * Create a typed function\n     * @param {String} name               The name for the typed function\n     * @param {Object.<string, function>} signaturesMap\n     *                                    An object with one or\n     *                                    multiple signatures as key, and the\n     *                                    function corresponding to the\n     *                                    signature as value.\n     * @return {function}  Returns the created typed function.\n     */\n    function createTypedFunction(name, signaturesMap) {\n      if (Object.keys(signaturesMap).length === 0) {\n        throw new SyntaxError('No signatures provided');\n      }\n\n      // parse the signatures, and check for conflicts\n      var parsedSignatures = [];\n      Object.keys(signaturesMap)\n          .map(function (signature) {\n            return parseSignature(signature, signaturesMap[signature], typed.conversions);\n          })\n          .filter(notNull)\n          .forEach(function (parsedSignature) {\n            // check whether this parameter conflicts with already parsed signatures\n            var conflictingSignature = findInArray(parsedSignatures, function (s) {\n              return hasConflictingParams(s, parsedSignature)\n            });\n            if (conflictingSignature) {\n              throw new TypeError('Conflicting signatures \"' +\n                  stringifyParams(conflictingSignature.params) + '\" and \"' +\n                  stringifyParams(parsedSignature.params) + '\".');\n            }\n\n            parsedSignatures.push(parsedSignature);\n          });\n\n      // split and filter the types of the signatures, and then order them\n      var signatures = flatMap(parsedSignatures, function (parsedSignature) {\n        var params = parsedSignature ? splitParams(parsedSignature.params, false) : []\n\n        return params.map(function (params) {\n          return {\n            params: params,\n            fn: parsedSignature.fn\n          };\n        });\n      }).filter(notNull);\n\n      signatures.sort(compareSignatures);\n\n      // we create a highly optimized checks for the first couple of signatures with max 2 arguments\n      var ok0 = signatures[0] && signatures[0].params.length <= 2 && !hasRestParam(signatures[0].params);\n      var ok1 = signatures[1] && signatures[1].params.length <= 2 && !hasRestParam(signatures[1].params);\n      var ok2 = signatures[2] && signatures[2].params.length <= 2 && !hasRestParam(signatures[2].params);\n      var ok3 = signatures[3] && signatures[3].params.length <= 2 && !hasRestParam(signatures[3].params);\n      var ok4 = signatures[4] && signatures[4].params.length <= 2 && !hasRestParam(signatures[4].params);\n      var ok5 = signatures[5] && signatures[5].params.length <= 2 && !hasRestParam(signatures[5].params);\n      var allOk = ok0 && ok1 && ok2 && ok3 && ok4 && ok5;\n\n      // compile the tests\n      var tests = signatures.map(function (signature) {\n        return compileTests(signature.params);\n      });\n\n      var test00 = ok0 ? compileTest(signatures[0].params[0]) : notOk;\n      var test10 = ok1 ? compileTest(signatures[1].params[0]) : notOk;\n      var test20 = ok2 ? compileTest(signatures[2].params[0]) : notOk;\n      var test30 = ok3 ? compileTest(signatures[3].params[0]) : notOk;\n      var test40 = ok4 ? compileTest(signatures[4].params[0]) : notOk;\n      var test50 = ok5 ? compileTest(signatures[5].params[0]) : notOk;\n\n      var test01 = ok0 ? compileTest(signatures[0].params[1]) : notOk;\n      var test11 = ok1 ? compileTest(signatures[1].params[1]) : notOk;\n      var test21 = ok2 ? compileTest(signatures[2].params[1]) : notOk;\n      var test31 = ok3 ? compileTest(signatures[3].params[1]) : notOk;\n      var test41 = ok4 ? compileTest(signatures[4].params[1]) : notOk;\n      var test51 = ok5 ? compileTest(signatures[5].params[1]) : notOk;\n\n      // compile the functions\n      var fns = signatures.map(function(signature) {\n        return compileArgsPreprocessing(signature.params, signature.fn)\n      });\n\n      var fn0 = ok0 ? fns[0] : undef;\n      var fn1 = ok1 ? fns[1] : undef;\n      var fn2 = ok2 ? fns[2] : undef;\n      var fn3 = ok3 ? fns[3] : undef;\n      var fn4 = ok4 ? fns[4] : undef;\n      var fn5 = ok5 ? fns[5] : undef;\n\n      var len0 = ok0 ? signatures[0].params.length : -1;\n      var len1 = ok1 ? signatures[1].params.length : -1;\n      var len2 = ok2 ? signatures[2].params.length : -1;\n      var len3 = ok3 ? signatures[3].params.length : -1;\n      var len4 = ok4 ? signatures[4].params.length : -1;\n      var len5 = ok5 ? signatures[5].params.length : -1;\n\n      // simple and generic, but also slow\n      var iStart = allOk ? 6 : 0;\n      var iEnd = signatures.length;\n      var generic = function generic() {\n        'use strict';\n\n        for (var i = iStart; i < iEnd; i++) {\n          if (tests[i](arguments)) {\n            return fns[i].apply(null, arguments);\n          }\n        }\n\n        throw createError(name, arguments, signatures);\n      }\n\n      // create the typed function\n      // fast, specialized version. Falls back to the slower, generic one if needed\n      var fn = function fn(arg0, arg1) {\n        'use strict';\n\n        if (arguments.length === len0 && test00(arg0) && test01(arg1)) { return fn0.apply(null, arguments); }\n        if (arguments.length === len1 && test10(arg0) && test11(arg1)) { return fn1.apply(null, arguments); }\n        if (arguments.length === len2 && test20(arg0) && test21(arg1)) { return fn2.apply(null, arguments); }\n        if (arguments.length === len3 && test30(arg0) && test31(arg1)) { return fn3.apply(null, arguments); }\n        if (arguments.length === len4 && test40(arg0) && test41(arg1)) { return fn4.apply(null, arguments); }\n        if (arguments.length === len5 && test50(arg0) && test51(arg1)) { return fn5.apply(null, arguments); }\n\n        return generic.apply(null, arguments);\n      }\n\n      // attach name the typed function\n      try {\n        Object.defineProperty(fn, 'name', {value: name});\n      }\n      catch (err) {\n        // old browsers do not support Object.defineProperty and some don't support setting the name property\n        // the function name is not essential for the functioning, it's mostly useful for debugging,\n        // so it's fine to have unnamed functions.\n      }\n\n      // attach signatures to the function\n      fn.signatures = createSignaturesMap(signatures);\n\n      return fn;\n    }\n\n    /**\n     * Test whether a type should be NOT be ignored\n     * @param {string} typeName\n     * @return {boolean}\n     */\n    function notIgnore(typeName) {\n      return typed.ignore.indexOf(typeName) === -1;\n    }\n\n    /**\n     * trim a string\n     * @param {string} str\n     * @return {string}\n     */\n    function trim(str) {\n      return str.trim();\n    }\n\n    /**\n     * Test whether a string is not empty\n     * @param {string} str\n     * @return {boolean}\n     */\n    function notEmpty(str) {\n      return !!str;\n    }\n\n    /**\n     * test whether a value is not strict equal to null\n     * @param {*} value\n     * @return {boolean}\n     */\n    function notNull(value) {\n      return value !== null;\n    }\n\n    /**\n     * Test whether a parameter has no types defined\n     * @param {Param} param\n     * @return {boolean}\n     */\n    function isInvalidParam (param) {\n      return param.types.length === 0;\n    }\n\n    /**\n     * Return all but the last items of an array\n     * @param {Array} arr\n     * @return {Array}\n     */\n    function initial(arr) {\n      return arr.slice(0, arr.length - 1);\n    }\n\n    /**\n     * return the last item of an array\n     * @param {Array} arr\n     * @return {*}\n     */\n    function last(arr) {\n      return arr[arr.length - 1];\n    }\n\n    /**\n     * Slice an array or function Arguments\n     * @param {Array | Arguments | IArguments} arr\n     * @param {number} start\n     * @param {number} [end]\n     * @return {Array}\n     */\n    function slice(arr, start, end) {\n      return Array.prototype.slice.call(arr, start, end);\n    }\n\n    /**\n     * Test whether an array contains some item\n     * @param {Array} array\n     * @param {*} item\n     * @return {boolean} Returns true if array contains item, false if not.\n     */\n    function contains(array, item) {\n      return array.indexOf(item) !== -1;\n    }\n\n    /**\n     * Test whether two arrays have overlapping items\n     * @param {Array} array1\n     * @param {Array} array2\n     * @return {boolean} Returns true when at least one item exists in both arrays\n     */\n    function hasOverlap(array1, array2) {\n      for (var i = 0; i < array1.length; i++) {\n        if (contains(array2, array1[i])) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n\n    /**\n     * Return the first item from an array for which test(arr[i]) returns true\n     * @param {Array} arr\n     * @param {function} test\n     * @return {* | undefined} Returns the first matching item\n     *                         or undefined when there is no match\n     */\n    function findInArray(arr, test) {\n      for (var i = 0; i < arr.length; i++) {\n        if (test(arr[i])) {\n          return arr[i];\n        }\n      }\n      return undefined;\n    }\n\n    /**\n     * Filter unique items of an array with strings\n     * @param {string[]} arr\n     * @return {string[]}\n     */\n    function uniq(arr) {\n      var entries = {}\n      for (var i = 0; i < arr.length; i++) {\n        entries[arr[i]] = true;\n      }\n      return Object.keys(entries);\n    }\n\n    /**\n     * Flat map the result invoking a callback for every item in an array.\n     * https://gist.github.com/samgiles/762ee337dff48623e729\n     * @param {Array} arr\n     * @param {function} callback\n     * @return {Array}\n     */\n    function flatMap(arr, callback) {\n      return Array.prototype.concat.apply([], arr.map(callback));\n    }\n\n    /**\n     * Retrieve the function name from a set of typed functions,\n     * and check whether the name of all functions match (if given)\n     * @param {function[]} fns\n     */\n    function getName (fns) {\n      var name = '';\n\n      for (var i = 0; i < fns.length; i++) {\n        var fn = fns[i];\n\n        // check whether the names are the same when defined\n        if ((typeof fn.signatures === 'object' || typeof fn.signature === 'string') && fn.name !== '') {\n          if (name === '') {\n            name = fn.name;\n          }\n          else if (name !== fn.name) {\n            var err = new Error('Function names do not match (expected: ' + name + ', actual: ' + fn.name + ')');\n            err.data = {\n              actual: fn.name,\n              expected: name\n            };\n            throw err;\n          }\n        }\n      }\n\n      return name;\n    }\n\n    // extract and merge all signatures of a list with typed functions\n    function extractSignatures(fns) {\n      var err;\n      var signaturesMap = {};\n\n      function validateUnique(_signature, _fn) {\n        if (signaturesMap.hasOwnProperty(_signature) && _fn !== signaturesMap[_signature]) {\n          err = new Error('Signature \"' + _signature + '\" is defined twice');\n          err.data = {signature: _signature};\n          throw err;\n          // else: both signatures point to the same function, that's fine\n        }\n      }\n\n      for (var i = 0; i < fns.length; i++) {\n        var fn = fns[i];\n\n        // test whether this is a typed-function\n        if (typeof fn.signatures === 'object') {\n          // merge the signatures\n          for (var signature in fn.signatures) {\n            if (fn.signatures.hasOwnProperty(signature)) {\n              validateUnique(signature, fn.signatures[signature]);\n              signaturesMap[signature] = fn.signatures[signature];\n            }\n          }\n        }\n        else if (typeof fn.signature === 'string') {\n          validateUnique(fn.signature, fn);\n          signaturesMap[fn.signature] = fn;\n        }\n        else {\n          err = new TypeError('Function is no typed-function (index: ' + i + ')');\n          err.data = {index: i};\n          throw err;\n        }\n      }\n\n      return signaturesMap;\n    }\n\n    typed = createTypedFunction('typed', {\n      'string, Object': createTypedFunction,\n      'Object': function (signaturesMap) {\n        // find existing name\n        var fns = [];\n        for (var signature in signaturesMap) {\n          if (signaturesMap.hasOwnProperty(signature)) {\n            fns.push(signaturesMap[signature]);\n          }\n        }\n        var name = getName(fns);\n        return createTypedFunction(name, signaturesMap);\n      },\n      '...Function': function (fns) {\n        return createTypedFunction(getName(fns), extractSignatures(fns));\n      },\n      'string, ...Function': function (name, fns) {\n        return createTypedFunction(name, extractSignatures(fns));\n      }\n    });\n\n    typed.create = create;\n    typed.types = _types;\n    typed.conversions = _conversions;\n    typed.ignore = _ignore;\n    typed.convert = convert;\n    typed.find = find;\n\n    /**\n     * add a type\n     * @param {{name: string, test: function}} type\n     * @param {boolean} [beforeObjectTest=true]\n     *                          If true, the new test will be inserted before\n     *                          the test with name 'Object' (if any), since\n     *                          tests for Object match Array and classes too.\n     */\n    typed.addType = function (type, beforeObjectTest) {\n      if (!type || typeof type.name !== 'string' || typeof type.test !== 'function') {\n        throw new TypeError('Object with properties {name: string, test: function} expected');\n      }\n\n      if (beforeObjectTest !== false) {\n        for (var i = 0; i < typed.types.length; i++) {\n          if (typed.types[i].name === 'Object') {\n            typed.types.splice(i, 0, type);\n            return\n          }\n        }\n      }\n\n      typed.types.push(type);\n    };\n\n    // add a conversion\n    typed.addConversion = function (conversion) {\n      if (!conversion\n          || typeof conversion.from !== 'string'\n          || typeof conversion.to !== 'string'\n          || typeof conversion.convert !== 'function') {\n        throw new TypeError('Object with properties {from: string, to: string, convert: function} expected');\n      }\n\n      typed.conversions.push(conversion);\n    };\n\n    return typed;\n  }\n\n  return create();\n}));"
        },
        {
          "id": 42,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/core/typed.js",
          "name": "../node_modules/mathjs/lib/core/typed.js",
          "index": 16,
          "index2": 12,
          "size": 11339,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "issuer": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/core/core.js",
          "issuerId": 44,
          "issuerName": "../node_modules/mathjs/lib/core/core.js",
          "issuerPath": [
            {
              "id": 49,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
              "name": "./main.ts",
              "profile": {
                "factory": 58,
                "building": 1843
              }
            },
            {
              "id": 18,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DisplayService.ts",
              "name": "./services/DisplayService.ts",
              "profile": {
                "factory": 83,
                "building": 1193,
                "dependencies": 637
              }
            },
            {
              "id": 8,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DrinkDisplayService.ts",
              "name": "./services/DrinkDisplayService.ts",
              "profile": {
                "factory": 735,
                "building": 523,
                "dependencies": 1
              }
            },
            {
              "id": 46,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/MathService.ts",
              "name": "./services/MathService.ts",
              "profile": {
                "factory": 394,
                "building": 17
              }
            },
            {
              "id": 45,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/core.js",
              "name": "../node_modules/mathjs/core.js",
              "profile": {
                "factory": 54,
                "building": 107
              }
            },
            {
              "id": 44,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/core/core.js",
              "name": "../node_modules/mathjs/lib/core/core.js",
              "profile": {
                "factory": 111,
                "building": 7
              }
            }
          ],
          "profile": {
            "factory": 15,
            "building": 26,
            "dependencies": 19
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 44,
              "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/core/core.js",
              "module": "../node_modules/mathjs/lib/core/core.js",
              "moduleName": "../node_modules/mathjs/lib/core/core.js",
              "type": "cjs require",
              "userRequest": "./typed",
              "loc": "7:19-37"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 6,
          "source": "'use strict';\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar typedFunction = require('typed-function');\n\nvar digits = require('./../utils/number').digits;\n\nvar isBigNumber = require('./../utils/bignumber/isBigNumber');\n\nvar isMatrix = require('./../utils/collection/isMatrix'); // returns a new instance of typed-function\n\n\nvar _createTyped = function createTyped() {\n  // initially, return the original instance of typed-function\n  // consecutively, return a new instance from typed.create.\n  _createTyped = typedFunction.create;\n  return typedFunction;\n};\n/**\n * Factory function for creating a new typed instance\n * @param {Object} type   Object with data types like Complex and BigNumber\n * @returns {Function}\n */\n\n\nexports.create = function create(type) {\n  // TODO: typed-function must be able to silently ignore signatures with unknown data types\n  // type checks for all known types\n  //\n  // note that:\n  //\n  // - check by duck-typing on a property like `isUnit`, instead of checking instanceof.\n  //   instanceof cannot be used because that would not allow to pass data from\n  //   one instance of math.js to another since each has it's own instance of Unit.\n  // - check the `isUnit` property via the constructor, so there will be no\n  //   matches for \"fake\" instances like plain objects with a property `isUnit`.\n  //   That is important for security reasons.\n  // - It must not be possible to override the type checks used internally,\n  //   for security reasons, so these functions are not exposed in the expression\n  //   parser.\n  type.isNumber = function (x) {\n    return typeof x === 'number';\n  };\n\n  type.isComplex = function (x) {\n    return type.Complex && x instanceof type.Complex || false;\n  };\n\n  type.isBigNumber = isBigNumber;\n\n  type.isFraction = function (x) {\n    return type.Fraction && x instanceof type.Fraction || false;\n  };\n\n  type.isUnit = function (x) {\n    return x && x.constructor.prototype.isUnit || false;\n  };\n\n  type.isString = function (x) {\n    return typeof x === 'string';\n  };\n\n  type.isArray = Array.isArray;\n  type.isMatrix = isMatrix;\n\n  type.isDenseMatrix = function (x) {\n    return x && x.isDenseMatrix && x.constructor.prototype.isMatrix || false;\n  };\n\n  type.isSparseMatrix = function (x) {\n    return x && x.isSparseMatrix && x.constructor.prototype.isMatrix || false;\n  };\n\n  type.isRange = function (x) {\n    return x && x.constructor.prototype.isRange || false;\n  };\n\n  type.isIndex = function (x) {\n    return x && x.constructor.prototype.isIndex || false;\n  };\n\n  type.isBoolean = function (x) {\n    return typeof x === 'boolean';\n  };\n\n  type.isResultSet = function (x) {\n    return x && x.constructor.prototype.isResultSet || false;\n  };\n\n  type.isHelp = function (x) {\n    return x && x.constructor.prototype.isHelp || false;\n  };\n\n  type.isFunction = function (x) {\n    return typeof x === 'function';\n  };\n\n  type.isDate = function (x) {\n    return x instanceof Date;\n  };\n\n  type.isRegExp = function (x) {\n    return x instanceof RegExp;\n  };\n\n  type.isObject = function (x) {\n    return _typeof(x) === 'object' && x.constructor === Object && !type.isComplex(x) && !type.isFraction(x);\n  };\n\n  type.isNull = function (x) {\n    return x === null;\n  };\n\n  type.isUndefined = function (x) {\n    return x === undefined;\n  };\n\n  type.isAccessorNode = function (x) {\n    return x && x.isAccessorNode && x.constructor.prototype.isNode || false;\n  };\n\n  type.isArrayNode = function (x) {\n    return x && x.isArrayNode && x.constructor.prototype.isNode || false;\n  };\n\n  type.isAssignmentNode = function (x) {\n    return x && x.isAssignmentNode && x.constructor.prototype.isNode || false;\n  };\n\n  type.isBlockNode = function (x) {\n    return x && x.isBlockNode && x.constructor.prototype.isNode || false;\n  };\n\n  type.isConditionalNode = function (x) {\n    return x && x.isConditionalNode && x.constructor.prototype.isNode || false;\n  };\n\n  type.isConstantNode = function (x) {\n    return x && x.isConstantNode && x.constructor.prototype.isNode || false;\n  };\n\n  type.isFunctionAssignmentNode = function (x) {\n    return x && x.isFunctionAssignmentNode && x.constructor.prototype.isNode || false;\n  };\n\n  type.isFunctionNode = function (x) {\n    return x && x.isFunctionNode && x.constructor.prototype.isNode || false;\n  };\n\n  type.isIndexNode = function (x) {\n    return x && x.isIndexNode && x.constructor.prototype.isNode || false;\n  };\n\n  type.isNode = function (x) {\n    return x && x.isNode && x.constructor.prototype.isNode || false;\n  };\n\n  type.isObjectNode = function (x) {\n    return x && x.isObjectNode && x.constructor.prototype.isNode || false;\n  };\n\n  type.isOperatorNode = function (x) {\n    return x && x.isOperatorNode && x.constructor.prototype.isNode || false;\n  };\n\n  type.isParenthesisNode = function (x) {\n    return x && x.isParenthesisNode && x.constructor.prototype.isNode || false;\n  };\n\n  type.isRangeNode = function (x) {\n    return x && x.isRangeNode && x.constructor.prototype.isNode || false;\n  };\n\n  type.isSymbolNode = function (x) {\n    return x && x.isSymbolNode && x.constructor.prototype.isNode || false;\n  };\n\n  type.isChain = function (x) {\n    return x && x.constructor.prototype.isChain || false;\n  }; // get a new instance of typed-function\n\n\n  var typed = _createTyped(); // define all types. The order of the types determines in which order function\n  // arguments are type-checked (so for performance it's important to put the\n  // most used types first).\n\n\n  typed.types = [{\n    name: 'number',\n    test: type.isNumber\n  }, {\n    name: 'Complex',\n    test: type.isComplex\n  }, {\n    name: 'BigNumber',\n    test: type.isBigNumber\n  }, {\n    name: 'Fraction',\n    test: type.isFraction\n  }, {\n    name: 'Unit',\n    test: type.isUnit\n  }, {\n    name: 'string',\n    test: type.isString\n  }, {\n    name: 'Array',\n    test: type.isArray\n  }, {\n    name: 'Matrix',\n    test: type.isMatrix\n  }, {\n    name: 'DenseMatrix',\n    test: type.isDenseMatrix\n  }, {\n    name: 'SparseMatrix',\n    test: type.isSparseMatrix\n  }, {\n    name: 'Range',\n    test: type.isRange\n  }, {\n    name: 'Index',\n    test: type.isIndex\n  }, {\n    name: 'boolean',\n    test: type.isBoolean\n  }, {\n    name: 'ResultSet',\n    test: type.isResultSet\n  }, {\n    name: 'Help',\n    test: type.isHelp\n  }, {\n    name: 'function',\n    test: type.isFunction\n  }, {\n    name: 'Date',\n    test: type.isDate\n  }, {\n    name: 'RegExp',\n    test: type.isRegExp\n  }, {\n    name: 'null',\n    test: type.isNull\n  }, {\n    name: 'undefined',\n    test: type.isUndefined\n  }, {\n    name: 'OperatorNode',\n    test: type.isOperatorNode\n  }, {\n    name: 'ConstantNode',\n    test: type.isConstantNode\n  }, {\n    name: 'SymbolNode',\n    test: type.isSymbolNode\n  }, {\n    name: 'ParenthesisNode',\n    test: type.isParenthesisNode\n  }, {\n    name: 'FunctionNode',\n    test: type.isFunctionNode\n  }, {\n    name: 'FunctionAssignmentNode',\n    test: type.isFunctionAssignmentNode\n  }, {\n    name: 'ArrayNode',\n    test: type.isArrayNode\n  }, {\n    name: 'AssignmentNode',\n    test: type.isAssignmentNode\n  }, {\n    name: 'BlockNode',\n    test: type.isBlockNode\n  }, {\n    name: 'ConditionalNode',\n    test: type.isConditionalNode\n  }, {\n    name: 'IndexNode',\n    test: type.isIndexNode\n  }, {\n    name: 'RangeNode',\n    test: type.isRangeNode\n  }, {\n    name: 'Node',\n    test: type.isNode\n  }, {\n    name: 'Object',\n    test: type.isObject // order 'Object' last, it matches on other classes too\n\n  }]; // TODO: add conversion from BigNumber to number?\n\n  typed.conversions = [{\n    from: 'number',\n    to: 'BigNumber',\n    convert: function convert(x) {\n      // note: conversion from number to BigNumber can fail if x has >15 digits\n      if (digits(x) > 15) {\n        throw new TypeError('Cannot implicitly convert a number with >15 significant digits to BigNumber ' + '(value: ' + x + '). ' + 'Use function bignumber(x) to convert to BigNumber.');\n      }\n\n      return new type.BigNumber(x);\n    }\n  }, {\n    from: 'number',\n    to: 'Complex',\n    convert: function convert(x) {\n      return new type.Complex(x, 0);\n    }\n  }, {\n    from: 'number',\n    to: 'string',\n    convert: function convert(x) {\n      return x + '';\n    }\n  }, {\n    from: 'BigNumber',\n    to: 'Complex',\n    convert: function convert(x) {\n      return new type.Complex(x.toNumber(), 0);\n    }\n  }, {\n    from: 'Fraction',\n    to: 'BigNumber',\n    convert: function convert(x) {\n      throw new TypeError('Cannot implicitly convert a Fraction to BigNumber or vice versa. ' + 'Use function bignumber(x) to convert to BigNumber or fraction(x) to convert to Fraction.');\n    }\n  }, {\n    from: 'Fraction',\n    to: 'Complex',\n    convert: function convert(x) {\n      return new type.Complex(x.valueOf(), 0);\n    }\n  }, {\n    from: 'number',\n    to: 'Fraction',\n    convert: function convert(x) {\n      var f = new type.Fraction(x);\n\n      if (f.valueOf() !== x) {\n        throw new TypeError('Cannot implicitly convert a number to a Fraction when there will be a loss of precision ' + '(value: ' + x + '). ' + 'Use function fraction(x) to convert to Fraction.');\n      }\n\n      return new type.Fraction(x);\n    }\n  }, {\n    // FIXME: add conversion from Fraction to number, for example for `sqrt(fraction(1,3))`\n    //  from: 'Fraction',\n    //  to: 'number',\n    //  convert: function (x) {\n    //    return x.valueOf()\n    //  }\n    // }, {\n    from: 'string',\n    to: 'number',\n    convert: function convert(x) {\n      var n = Number(x);\n\n      if (isNaN(n)) {\n        throw new Error('Cannot convert \"' + x + '\" to a number');\n      }\n\n      return n;\n    }\n  }, {\n    from: 'string',\n    to: 'BigNumber',\n    convert: function convert(x) {\n      try {\n        return new type.BigNumber(x);\n      } catch (err) {\n        throw new Error('Cannot convert \"' + x + '\" to BigNumber');\n      }\n    }\n  }, {\n    from: 'string',\n    to: 'Fraction',\n    convert: function convert(x) {\n      try {\n        return new type.Fraction(x);\n      } catch (err) {\n        throw new Error('Cannot convert \"' + x + '\" to Fraction');\n      }\n    }\n  }, {\n    from: 'string',\n    to: 'Complex',\n    convert: function convert(x) {\n      try {\n        return new type.Complex(x);\n      } catch (err) {\n        throw new Error('Cannot convert \"' + x + '\" to Complex');\n      }\n    }\n  }, {\n    from: 'boolean',\n    to: 'number',\n    convert: function convert(x) {\n      return +x;\n    }\n  }, {\n    from: 'boolean',\n    to: 'BigNumber',\n    convert: function convert(x) {\n      return new type.BigNumber(+x);\n    }\n  }, {\n    from: 'boolean',\n    to: 'Fraction',\n    convert: function convert(x) {\n      return new type.Fraction(+x);\n    }\n  }, {\n    from: 'boolean',\n    to: 'string',\n    convert: function convert(x) {\n      return +x;\n    }\n  }, {\n    from: 'Array',\n    to: 'Matrix',\n    convert: function convert(array) {\n      return new type.DenseMatrix(array);\n    }\n  }, {\n    from: 'Matrix',\n    to: 'Array',\n    convert: function convert(matrix) {\n      return matrix.valueOf();\n    }\n  }];\n  return typed;\n};"
        },
        {
          "id": 43,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/utils/polyfills.js",
          "name": "../node_modules/mathjs/lib/utils/polyfills.js",
          "index": 13,
          "index2": 6,
          "size": 646,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "issuer": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/core/core.js",
          "issuerId": 44,
          "issuerName": "../node_modules/mathjs/lib/core/core.js",
          "issuerPath": [
            {
              "id": 49,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
              "name": "./main.ts",
              "profile": {
                "factory": 58,
                "building": 1843
              }
            },
            {
              "id": 18,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DisplayService.ts",
              "name": "./services/DisplayService.ts",
              "profile": {
                "factory": 83,
                "building": 1193,
                "dependencies": 637
              }
            },
            {
              "id": 8,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DrinkDisplayService.ts",
              "name": "./services/DrinkDisplayService.ts",
              "profile": {
                "factory": 735,
                "building": 523,
                "dependencies": 1
              }
            },
            {
              "id": 46,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/MathService.ts",
              "name": "./services/MathService.ts",
              "profile": {
                "factory": 394,
                "building": 17
              }
            },
            {
              "id": 45,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/core.js",
              "name": "../node_modules/mathjs/core.js",
              "profile": {
                "factory": 54,
                "building": 107
              }
            },
            {
              "id": 44,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/core/core.js",
              "name": "../node_modules/mathjs/lib/core/core.js",
              "profile": {
                "factory": 111,
                "building": 7
              }
            }
          ],
          "profile": {
            "factory": 15,
            "building": 26,
            "dependencies": 19
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 44,
              "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/core/core.js",
              "module": "../node_modules/mathjs/lib/core/core.js",
              "moduleName": "../node_modules/mathjs/lib/core/core.js",
              "type": "cjs require",
              "userRequest": "./../utils/polyfills",
              "loc": "3:0-31"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 6,
          "source": "\"use strict\";\n\n// TODO: remove these polyfills as soon as we have a build process that transpiles the code to ES5\n// Polyfill for IE 11 (Number.isFinite is used in `complex.js`)\n// source: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isFinite\nNumber.isFinite = Number.isFinite || function (value) {\n  return typeof value === 'number' && isFinite(value);\n}; // Polyfill for IE 11\n// source: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isNaN\n\n\nNumber.isNaN = Number.isNaN || function (value) {\n  return value !== value; // eslint-disable-line no-self-compare\n};"
        },
        {
          "id": 44,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/core/core.js",
          "name": "../node_modules/mathjs/lib/core/core.js",
          "index": 12,
          "index2": 18,
          "size": 4851,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "issuer": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/core.js",
          "issuerId": 45,
          "issuerName": "../node_modules/mathjs/core.js",
          "issuerPath": [
            {
              "id": 49,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
              "name": "./main.ts",
              "profile": {
                "factory": 58,
                "building": 1843
              }
            },
            {
              "id": 18,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DisplayService.ts",
              "name": "./services/DisplayService.ts",
              "profile": {
                "factory": 83,
                "building": 1193,
                "dependencies": 637
              }
            },
            {
              "id": 8,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DrinkDisplayService.ts",
              "name": "./services/DrinkDisplayService.ts",
              "profile": {
                "factory": 735,
                "building": 523,
                "dependencies": 1
              }
            },
            {
              "id": 46,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/MathService.ts",
              "name": "./services/MathService.ts",
              "profile": {
                "factory": 394,
                "building": 17
              }
            },
            {
              "id": 45,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/core.js",
              "name": "../node_modules/mathjs/core.js",
              "profile": {
                "factory": 54,
                "building": 107
              }
            }
          ],
          "profile": {
            "factory": 111,
            "building": 7
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 45,
              "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/core.js",
              "module": "../node_modules/mathjs/core.js",
              "moduleName": "../node_modules/mathjs/core.js",
              "type": "cjs require",
              "userRequest": "./lib/core/core",
              "loc": "1:17-43"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 5,
          "source": "'use strict';\n\nrequire('./../utils/polyfills');\n\nvar isFactory = require('./../utils/object').isFactory;\n\nvar typedFactory = require('./typed');\n\nvar emitter = require('./../utils/emitter');\n\nvar importFactory = require('./function/import');\n\nvar configFactory = require('./function/config');\n/**\n * Math.js core. Creates a new, empty math.js instance\n * @param {Object} [options] Available options:\n *                            {number} epsilon\n *                              Minimum relative difference between two\n *                              compared values, used by all comparison functions.\n *                            {string} matrix\n *                              A string 'Matrix' (default) or 'Array'.\n *                            {string} number\n *                              A string 'number' (default), 'BigNumber', or 'Fraction'\n *                            {number} precision\n *                              The number of significant digits for BigNumbers.\n *                              Not applicable for Numbers.\n *                            {boolean} predictable\n *                              Predictable output type of functions. When true,\n *                              output type depends only on the input types. When\n *                              false (default), output type can vary depending\n *                              on input values. For example `math.sqrt(-4)`\n *                              returns `complex('2i')` when predictable is false, and\n *                              returns `NaN` when true.\n *                            {string} randomSeed\n *                              Random seed for seeded pseudo random number generator.\n *                              Set to null to randomly seed.\n * @returns {Object} Returns a bare-bone math.js instance containing\n *                   functions:\n *                   - `import` to add new functions\n *                   - `config` to change configuration\n *                   - `on`, `off`, `once`, `emit` for events\n */\n\n\nexports.create = function create(options) {\n  // simple test for ES5 support\n  if (typeof Object.create !== 'function') {\n    throw new Error('ES5 not supported by this JavaScript engine. ' + 'Please load the es5-shim and es5-sham library for compatibility.');\n  } // cached factories and instances\n\n\n  var factories = [];\n  var instances = []; // create a namespace for the mathjs instance, and attach emitter functions\n\n  var math = emitter.mixin({});\n  math.type = {};\n  math.expression = {\n    transform: {},\n    mathWithTransform: {} // create a new typed instance\n\n  };\n  math.typed = typedFactory.create(math.type); // create configuration options. These are private\n\n  var _config = {\n    // minimum relative difference between two compared values,\n    // used by all comparison functions\n    epsilon: 1e-12,\n    // type of default matrix output. Choose 'matrix' (default) or 'array'\n    matrix: 'Matrix',\n    // type of default number output. Choose 'number' (default) 'BigNumber', or 'Fraction\n    number: 'number',\n    // number of significant digits in BigNumbers\n    precision: 64,\n    // predictable output type of functions. When true, output type depends only\n    // on the input types. When false (default), output type can vary depending\n    // on input values. For example `math.sqrt(-4)` returns `complex('2i')` when\n    // predictable is false, and returns `NaN` when true.\n    predictable: false,\n    // random seed for seeded pseudo random number generation\n    // null = randomly seed\n    randomSeed: null\n    /**\n     * Load a function or data type from a factory.\n     * If the function or data type already exists, the existing instance is\n     * returned.\n     * @param {{type: string, name: string, factory: Function}} factory\n     * @returns {*}\n     */\n\n  };\n\n  function load(factory) {\n    if (!isFactory(factory)) {\n      throw new Error('Factory object with properties `type`, `name`, and `factory` expected');\n    }\n\n    var index = factories.indexOf(factory);\n    var instance;\n\n    if (index === -1) {\n      // doesn't yet exist\n      if (factory.math === true) {\n        // pass with math namespace\n        instance = factory.factory(math.type, _config, load, math.typed, math);\n      } else {\n        instance = factory.factory(math.type, _config, load, math.typed);\n      } // append to the cache\n\n\n      factories.push(factory);\n      instances.push(instance);\n    } else {\n      // already existing function, return the cached instance\n      instance = instances[index];\n    }\n\n    return instance;\n  } // load the import and config functions\n\n\n  math['import'] = load(importFactory);\n  math['config'] = load(configFactory);\n  math.expression.mathWithTransform['config'] = math['config']; // apply options\n\n  if (options) {\n    math.config(options);\n  }\n\n  return math;\n};"
        },
        {
          "id": 45,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/core.js",
          "name": "../node_modules/mathjs/core.js",
          "index": 11,
          "index2": 19,
          "size": 44,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "issuer": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/MathService.ts",
          "issuerId": 46,
          "issuerName": "./services/MathService.ts",
          "issuerPath": [
            {
              "id": 49,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
              "name": "./main.ts",
              "profile": {
                "factory": 58,
                "building": 1843
              }
            },
            {
              "id": 18,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DisplayService.ts",
              "name": "./services/DisplayService.ts",
              "profile": {
                "factory": 83,
                "building": 1193,
                "dependencies": 637
              }
            },
            {
              "id": 8,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DrinkDisplayService.ts",
              "name": "./services/DrinkDisplayService.ts",
              "profile": {
                "factory": 735,
                "building": 523,
                "dependencies": 1
              }
            },
            {
              "id": 46,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/MathService.ts",
              "name": "./services/MathService.ts",
              "profile": {
                "factory": 394,
                "building": 17
              }
            }
          ],
          "profile": {
            "factory": 54,
            "building": 107
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 46,
              "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/MathService.ts",
              "module": "./services/MathService.ts",
              "moduleName": "./services/MathService.ts",
              "type": "cjs require",
              "userRequest": "mathjs/core",
              "loc": "3:13-35"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 4,
          "source": "module.exports = require('./lib/core/core')\n"
        },
        {
          "id": 46,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/MathService.ts",
          "name": "./services/MathService.ts",
          "index": 10,
          "index2": 28,
          "size": 272,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "issuer": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DrinkDisplayService.ts",
          "issuerId": 8,
          "issuerName": "./services/DrinkDisplayService.ts",
          "issuerPath": [
            {
              "id": 49,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
              "name": "./main.ts",
              "profile": {
                "factory": 58,
                "building": 1843
              }
            },
            {
              "id": 18,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DisplayService.ts",
              "name": "./services/DisplayService.ts",
              "profile": {
                "factory": 83,
                "building": 1193,
                "dependencies": 637
              }
            },
            {
              "id": 8,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DrinkDisplayService.ts",
              "name": "./services/DrinkDisplayService.ts",
              "profile": {
                "factory": 735,
                "building": 523,
                "dependencies": 1
              }
            }
          ],
          "profile": {
            "factory": 394,
            "building": 17
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 8,
              "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DrinkDisplayService.ts",
              "module": "./services/DrinkDisplayService.ts",
              "moduleName": "./services/DrinkDisplayService.ts",
              "type": "cjs require",
              "userRequest": "./MathService",
              "loc": "3:22-46"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 3,
          "source": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst core = require(\"mathjs/core\");\nconst math = core.create();\nexports.math = math;\nmath.import(require('mathjs/lib/type/fraction'));\nmath.import(require('mathjs/lib/function/string/format'));\n"
        },
        {
          "id": 47,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/models/Settings.ts",
          "name": "./models/Settings.ts",
          "index": 6,
          "index2": 4,
          "size": 438,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "issuer": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DisplayService.ts",
          "issuerId": 18,
          "issuerName": "./services/DisplayService.ts",
          "issuerPath": [
            {
              "id": 49,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
              "name": "./main.ts",
              "profile": {
                "factory": 58,
                "building": 1843
              }
            },
            {
              "id": 18,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DisplayService.ts",
              "name": "./services/DisplayService.ts",
              "profile": {
                "factory": 83,
                "building": 1193,
                "dependencies": 637
              }
            }
          ],
          "profile": {
            "factory": 735,
            "building": 523,
            "dependencies": 1
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 18,
              "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DisplayService.ts",
              "module": "./services/DisplayService.ts",
              "moduleName": "./services/DisplayService.ts",
              "type": "cjs require",
              "userRequest": "../models/Settings",
              "loc": "13:19-48"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 2,
          "source": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Settings = {\n    sidebar: {\n        expanded: true,\n    },\n    symbols: {\n        upsymbol: '▲',\n        downsymbol: '▼',\n    },\n    tree: {\n        DepthMult: 60,\n        CollapseDepth: 3,\n        FontStart: 24,\n        FontCollapse: 6,\n        ShowCheckBox: true,\n        ShowCollapse: true,\n        Highlight: [],\n    }\n};\nexports.Settings = Settings;\n"
        },
        {
          "id": 48,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/extensions/string.extensions.ts",
          "name": "./extensions/string.extensions.ts",
          "index": 3,
          "index2": 2,
          "size": 418,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "issuer": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
          "issuerId": 49,
          "issuerName": "./main.ts",
          "issuerPath": [
            {
              "id": 49,
              "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
              "name": "./main.ts",
              "profile": {
                "factory": 58,
                "building": 1843
              }
            }
          ],
          "profile": {
            "factory": 83,
            "building": 1193,
            "dependencies": 637
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 49,
              "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
              "module": "./main.ts",
              "moduleName": "./main.ts",
              "type": "cjs require",
              "userRequest": "./extensions/string.extensions",
              "loc": "13:0-41"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 1,
          "source": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nString.prototype.contains = function (x) {\n    return this.indexOf(x) > -1;\n};\nString.prototype.any = function (f) {\n    if (f) {\n        for (let i = 0; i < this.length; i++) {\n            if (f(this[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    else {\n        return this.length > 0;\n    }\n};\n"
        },
        {
          "id": 49,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
          "name": "./main.ts",
          "index": 0,
          "index2": 49,
          "size": 6875,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "issuer": null,
          "issuerId": null,
          "issuerName": null,
          "issuerPath": null,
          "profile": {
            "factory": 58,
            "building": 1843
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": null,
              "moduleIdentifier": null,
              "module": null,
              "moduleName": null,
              "type": "single entry",
              "userRequest": "./main.ts",
              "loc": "main"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 0,
          "source": "\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nrequire(\"./extensions/array.extensions\");\nrequire(\"./extensions/object.extensions\");\nrequire(\"./extensions/string.extensions\");\nconst CategoryService_1 = require(\"./services/CategoryService\");\nconst DisplayService_1 = require(\"./services/DisplayService\");\nexports.toggleDrinkList = DisplayService_1.toggleDrinkList;\nexports.EliminatePantry = DisplayService_1.EliminatePantry;\nconst DrinkService_1 = require(\"./services/DrinkService\");\nconst GlassService_1 = require(\"./services/GlassService\");\nconst Globals_1 = require(\"./services/Globals\");\nconst IngredientService_1 = require(\"./services/IngredientService\");\nconst NavigationService_1 = require(\"./services/NavigationService\");\nconst SearchObject_1 = require(\"./models/SearchObject\");\nconst SelectedDrinkObject_1 = require(\"./models/SelectedDrinkObject\");\nconst DownloadService_1 = require(\"./services/DownloadService\");\nconst StorageService_1 = require(\"./services/StorageService\");\nconst BuilderService_1 = require(\"./services/BuilderService\");\nexports.setCategoryType = BuilderService_1.setCategoryType;\nexports.setDrinkName = BuilderService_1.setDrinkName;\nexports.setGlassType = BuilderService_1.setGlassType;\nexports.addIngredient = BuilderService_1.addIngredient;\nexports.CreateDrink = BuilderService_1.CreateDrink;\nexports.setInstructions = BuilderService_1.setInstructions;\nexports.setPrelude = BuilderService_1.setPrelude;\n// -- Global Variables --\\\\\nconst NavObj = {\n    currentPage: 'drink',\n    q: new URLSearchParams(''),\n};\nfunction requireX(an, f) {\n    if (an === 0 || an === 1) {\n        const b = an === 1;\n        f(b);\n    }\n    else {\n        console.error('Error converting value to number, got ' + an);\n    }\n}\nfunction considerSubstitutions(val) {\n    const an = parseInt(val);\n    requireX(an, (b) => { SearchObject_1.SearchObject.ConsiderSubstitutions = b; });\n}\nexports.considerSubstitutions = considerSubstitutions;\nfunction requireGarnish(val) {\n    const an = parseInt(val);\n    requireX(an, (b) => { SearchObject_1.SearchObject.RequireGarnish = b; });\n}\nexports.requireGarnish = requireGarnish;\nfunction requireCube(val) {\n    const an = parseInt(val);\n    requireX(an, (b) => { SearchObject_1.SearchObject.RequireCube = b; });\n}\nexports.requireCube = requireCube;\nfunction requireRinse(val) {\n    const an = parseInt(val);\n    requireX(an, (b) => { SearchObject_1.SearchObject.RequireRinse = b; });\n}\nexports.requireRinse = requireRinse;\nfunction requireSplash(val) {\n    const an = parseInt(val);\n    requireX(an, (b) => { SearchObject_1.SearchObject.RequireSplash = b; });\n}\nexports.requireSplash = requireSplash;\nfunction requireSpray(val) {\n    const an = parseInt(val);\n    requireX(an, (b) => { SearchObject_1.SearchObject.RequireSpray = b; });\n}\nexports.requireSpray = requireSpray;\nfunction requireBitters(val) {\n    const an = parseInt(val);\n    requireX(an, (b) => { SearchObject_1.SearchObject.RequireBitters = b; });\n}\nexports.requireBitters = requireBitters;\nfunction requirePinch(val) {\n    const an = parseInt(val);\n    requireX(an, (b) => { SearchObject_1.SearchObject.RequirePinch = b; });\n}\nexports.requirePinch = requirePinch;\nfunction requireFloat(val) {\n    const an = parseInt(val);\n    requireX(an, (b) => { SearchObject_1.SearchObject.RequireFloat = b; });\n}\nexports.requireFloat = requireFloat;\nfunction calculateDrinks() {\n    const resobj = DrinkService_1.calculateDrinks(SearchObject_1.SearchObject.Inventory, Globals_1.Globals.Drinks, Globals_1.Globals.IngredientFlat);\n    DisplayService_1.showYourDrinks(resobj);\n    IngredientService_1.GetRecommendedIngredients(resobj);\n}\nexports.calculateDrinks = calculateDrinks;\nfunction RestorePantryItems() {\n    const iarr = StorageService_1.StorageGetPantryItems();\n    // SearchObject._InventoryIds = iarr.map(x => x.id);\n    iarr.forEach((x) => {\n        SearchObject_1.SearchObject._InventoryIds.push(x.id);\n        SearchObject_1.SearchObject.Inventory.push(x);\n    });\n}\nfunction main(json) {\n    return __awaiter(this, void 0, void 0, function* () {\n        /* Get the basic data structures */\n        // Populating Ingredient Tree\n        const ingFetch = IngredientService_1.constructIngredients(json.ingredientTree);\n        ingFetch[0].forEach(x => Globals_1.Globals.ingredients.push(x));\n        Globals_1.Globals.IngredientFlat = ingFetch[1];\n        // Unique, Sorted Glasses\n        GlassService_1.constructGlasses(json.drinks).forEach(x => Globals_1.Globals.Glasses.push(x));\n        // Unique, Sorted Categories\n        CategoryService_1.constructCategories(json.drinks).forEach(x => Globals_1.Globals.Categories.push(x));\n        // Unique, in-order Drinks\n        DrinkService_1.constructDrinks(json.drinks).forEach(x => Globals_1.Globals.Drinks.push(x));\n        // Unit Categories\n        json.unitTypes.forEach(x => Globals_1.Globals.UnitTypes.push(x));\n        /* Draw to the screen */\n        DisplayService_1.DrawSidebar(Globals_1.Globals.Categories, Globals_1.Globals.Drinks);\n        /* Restore user-saved globals */\n        RestorePantryItems();\n        const thispage = NavigationService_1.findPage().toLocaleLowerCase();\n        if (thispage === 'drinks') {\n            if (window.location.search.any()) {\n                NavigationService_1.decodeDrinkNav(window.location.search, Globals_1.Globals.Drinks, Globals_1.Globals.IngredientFlat, NavObj, SelectedDrinkObject_1.SelectedDrinkObject); // TEST\n            }\n        }\n        else if (thispage === NavigationService_1.PageTypes.Pantry) {\n            DisplayService_1.populateIngredientTree(Globals_1.Globals.ingredients, SearchObject_1.SearchObject);\n        }\n        else if (thispage === 'builder') {\n            yield BuilderService_1.BuilderDraw(Globals_1.Globals.Glasses[0], Globals_1.Globals.Categories[0].name);\n        }\n        else if (thispage === 'custom') {\n            yield DisplayService_1.DrawCustom();\n        }\n        window.onhashchange = NavigationService_1.locationHashChanged;\n        NavigationService_1.locationHashChanged();\n    });\n}\nfunction m2() {\n    return __awaiter(this, void 0, void 0, function* () {\n        const maindata = yield DownloadService_1.DownloadMainJson();\n        yield main(maindata);\n    });\n}\nm2();\n"
        }
      ],
      "filteredModules": 0,
      "origins": [
        {
          "module": "",
          "moduleIdentifier": "",
          "moduleName": "",
          "loc": "main",
          "request": "./main.ts",
          "reasons": []
        }
      ]
    }
  ],
  "modules": [
    {
      "id": 0,
      "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/utils/object.js",
      "name": "../node_modules/mathjs/lib/utils/object.js",
      "index": 14,
      "index2": 8,
      "size": 6635,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "issuer": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/core/core.js",
      "issuerId": 44,
      "issuerName": "../node_modules/mathjs/lib/core/core.js",
      "issuerPath": [
        {
          "id": 49,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
          "name": "./main.ts",
          "profile": {
            "factory": 58,
            "building": 1843
          }
        },
        {
          "id": 18,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DisplayService.ts",
          "name": "./services/DisplayService.ts",
          "profile": {
            "factory": 83,
            "building": 1193,
            "dependencies": 637
          }
        },
        {
          "id": 8,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DrinkDisplayService.ts",
          "name": "./services/DrinkDisplayService.ts",
          "profile": {
            "factory": 735,
            "building": 523,
            "dependencies": 1
          }
        },
        {
          "id": 46,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/MathService.ts",
          "name": "./services/MathService.ts",
          "profile": {
            "factory": 394,
            "building": 17
          }
        },
        {
          "id": 45,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/core.js",
          "name": "../node_modules/mathjs/core.js",
          "profile": {
            "factory": 54,
            "building": 107
          }
        },
        {
          "id": 44,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/core/core.js",
          "name": "../node_modules/mathjs/lib/core/core.js",
          "profile": {
            "factory": 111,
            "building": 7
          }
        }
      ],
      "profile": {
        "factory": 15,
        "building": 26,
        "dependencies": 19
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 16,
          "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/utils/number.js",
          "module": "../node_modules/mathjs/lib/utils/number.js",
          "moduleName": "../node_modules/mathjs/lib/utils/number.js",
          "type": "cjs require",
          "userRequest": "./object",
          "loc": "3:18-37"
        },
        {
          "moduleId": 27,
          "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/utils/bignumber/formatter.js",
          "module": "../node_modules/mathjs/lib/utils/bignumber/formatter.js",
          "moduleName": "../node_modules/mathjs/lib/utils/bignumber/formatter.js",
          "type": "cjs require",
          "userRequest": "../object",
          "loc": "3:18-38"
        },
        {
          "moduleId": 35,
          "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/core/function/config.js",
          "module": "../node_modules/mathjs/lib/core/function/config.js",
          "moduleName": "../node_modules/mathjs/lib/core/function/config.js",
          "type": "cjs require",
          "userRequest": "../../utils/object",
          "loc": "3:13-42"
        },
        {
          "moduleId": 37,
          "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/core/function/import.js",
          "module": "../node_modules/mathjs/lib/core/function/import.js",
          "moduleName": "../node_modules/mathjs/lib/core/function/import.js",
          "type": "cjs require",
          "userRequest": "../../utils/object",
          "loc": "5:11-40"
        },
        {
          "moduleId": 37,
          "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/core/function/import.js",
          "module": "../node_modules/mathjs/lib/core/function/import.js",
          "moduleName": "../node_modules/mathjs/lib/core/function/import.js",
          "type": "cjs require",
          "userRequest": "../../utils/object",
          "loc": "7:16-45"
        },
        {
          "moduleId": 37,
          "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/core/function/import.js",
          "module": "../node_modules/mathjs/lib/core/function/import.js",
          "moduleName": "../node_modules/mathjs/lib/core/function/import.js",
          "type": "cjs require",
          "userRequest": "../../utils/object",
          "loc": "9:15-44"
        },
        {
          "moduleId": 44,
          "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/core/core.js",
          "module": "../node_modules/mathjs/lib/core/core.js",
          "moduleName": "../node_modules/mathjs/lib/core/core.js",
          "type": "cjs require",
          "userRequest": "./../utils/object",
          "loc": "5:16-44"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 6,
      "source": "'use strict';\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar isBigNumber = require('./bignumber/isBigNumber');\n/**\n * Clone an object\n *\n *     clone(x)\n *\n * Can clone any primitive type, array, and object.\n * If x has a function clone, this function will be invoked to clone the object.\n *\n * @param {*} x\n * @return {*} clone\n */\n\n\nexports.clone = function clone(x) {\n  var type = _typeof(x); // immutable primitive types\n\n\n  if (type === 'number' || type === 'string' || type === 'boolean' || x === null || x === undefined) {\n    return x;\n  } // use clone function of the object when available\n\n\n  if (typeof x.clone === 'function') {\n    return x.clone();\n  } // array\n\n\n  if (Array.isArray(x)) {\n    return x.map(function (value) {\n      return clone(value);\n    });\n  }\n\n  if (x instanceof Date) return new Date(x.valueOf());\n  if (isBigNumber(x)) return x; // bignumbers are immutable\n\n  if (x instanceof RegExp) throw new TypeError('Cannot clone ' + x); // TODO: clone a RegExp\n  // object\n\n  return exports.map(x, clone);\n};\n/**\n * Apply map to all properties of an object\n * @param {Object} object\n * @param {function} callback\n * @return {Object} Returns a copy of the object with mapped properties\n */\n\n\nexports.map = function (object, callback) {\n  var clone = {};\n\n  for (var key in object) {\n    if (exports.hasOwnProperty(object, key)) {\n      clone[key] = callback(object[key]);\n    }\n  }\n\n  return clone;\n};\n/**\n * Extend object a with the properties of object b\n * @param {Object} a\n * @param {Object} b\n * @return {Object} a\n */\n\n\nexports.extend = function (a, b) {\n  for (var prop in b) {\n    if (exports.hasOwnProperty(b, prop)) {\n      a[prop] = b[prop];\n    }\n  }\n\n  return a;\n};\n/**\n * Deep extend an object a with the properties of object b\n * @param {Object} a\n * @param {Object} b\n * @returns {Object}\n */\n\n\nexports.deepExtend = function deepExtend(a, b) {\n  // TODO: add support for Arrays to deepExtend\n  if (Array.isArray(b)) {\n    throw new TypeError('Arrays are not supported by deepExtend');\n  }\n\n  for (var prop in b) {\n    if (exports.hasOwnProperty(b, prop)) {\n      if (b[prop] && b[prop].constructor === Object) {\n        if (a[prop] === undefined) {\n          a[prop] = {};\n        }\n\n        if (a[prop].constructor === Object) {\n          deepExtend(a[prop], b[prop]);\n        } else {\n          a[prop] = b[prop];\n        }\n      } else if (Array.isArray(b[prop])) {\n        throw new TypeError('Arrays are not supported by deepExtend');\n      } else {\n        a[prop] = b[prop];\n      }\n    }\n  }\n\n  return a;\n};\n/**\n * Deep test equality of all fields in two pairs of arrays or objects.\n * @param {Array | Object} a\n * @param {Array | Object} b\n * @returns {boolean}\n */\n\n\nexports.deepEqual = function deepEqual(a, b) {\n  var prop, i, len;\n\n  if (Array.isArray(a)) {\n    if (!Array.isArray(b)) {\n      return false;\n    }\n\n    if (a.length !== b.length) {\n      return false;\n    }\n\n    for (i = 0, len = a.length; i < len; i++) {\n      if (!exports.deepEqual(a[i], b[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  } else if (a instanceof Object) {\n    if (Array.isArray(b) || !(b instanceof Object)) {\n      return false;\n    }\n\n    for (prop in a) {\n      // noinspection JSUnfilteredForInLoop\n      if (!exports.deepEqual(a[prop], b[prop])) {\n        return false;\n      }\n    }\n\n    for (prop in b) {\n      // noinspection JSUnfilteredForInLoop\n      if (!exports.deepEqual(a[prop], b[prop])) {\n        return false;\n      }\n    }\n\n    return true;\n  } else {\n    return a === b;\n  }\n};\n/**\n * Test whether the current JavaScript engine supports Object.defineProperty\n * @returns {boolean} returns true if supported\n */\n\n\nexports.canDefineProperty = function () {\n  // test needed for broken IE8 implementation\n  try {\n    if (Object.defineProperty) {\n      Object.defineProperty({}, 'x', {\n        get: function get() {}\n      });\n      return true;\n    }\n  } catch (e) {}\n\n  return false;\n};\n/**\n * Attach a lazy loading property to a constant.\n * The given function `fn` is called once when the property is first requested.\n * On older browsers (<IE8), the function will fall back to direct evaluation\n * of the properties value.\n * @param {Object} object   Object where to add the property\n * @param {string} prop     Property name\n * @param {Function} fn     Function returning the property value. Called\n *                          without arguments.\n */\n\n\nexports.lazy = function (object, prop, fn) {\n  if (exports.canDefineProperty()) {\n    var _uninitialized = true;\n\n    var _value;\n\n    Object.defineProperty(object, prop, {\n      get: function get() {\n        if (_uninitialized) {\n          _value = fn();\n          _uninitialized = false;\n        }\n\n        return _value;\n      },\n      set: function set(value) {\n        _value = value;\n        _uninitialized = false;\n      },\n      configurable: true,\n      enumerable: true\n    });\n  } else {\n    // fall back to immediate evaluation\n    object[prop] = fn();\n  }\n};\n/**\n * Traverse a path into an object.\n * When a namespace is missing, it will be created\n * @param {Object} object\n * @param {string} path   A dot separated string like 'name.space'\n * @return {Object} Returns the object at the end of the path\n */\n\n\nexports.traverse = function (object, path) {\n  var obj = object;\n\n  if (path) {\n    var names = path.split('.');\n\n    for (var i = 0; i < names.length; i++) {\n      var name = names[i];\n\n      if (!(name in obj)) {\n        obj[name] = {};\n      }\n\n      obj = obj[name];\n    }\n  }\n\n  return obj;\n};\n/**\n * A safe hasOwnProperty\n * @param {Object} object\n * @param {string} property\n */\n\n\nexports.hasOwnProperty = function (object, property) {\n  return object && Object.hasOwnProperty.call(object, property);\n};\n/**\n * Test whether an object is a factory. a factory has fields:\n *\n * - factory: function (type: Object, config: Object, load: function, typed: function [, math: Object])   (required)\n * - name: string (optional)\n * - path: string    A dot separated path (optional)\n * - math: boolean   If true (false by default), the math namespace is passed\n *                   as fifth argument of the factory function\n *\n * @param {*} object\n * @returns {boolean}\n */\n\n\nexports.isFactory = function (object) {\n  return object && typeof object.factory === 'function';\n};"
    },
    {
      "id": 1,
      "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/Globals.ts",
      "name": "./services/Globals.ts",
      "index": 33,
      "index2": 29,
      "size": 242,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "issuer": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
      "issuerId": 49,
      "issuerName": "./main.ts",
      "issuerPath": [
        {
          "id": 49,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
          "name": "./main.ts",
          "profile": {
            "factory": 58,
            "building": 1843
          }
        }
      ],
      "profile": {
        "factory": 83,
        "building": 1193,
        "dependencies": 637
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 3,
          "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/IngredientService.ts",
          "module": "./services/IngredientService.ts",
          "moduleName": "./services/IngredientService.ts",
          "type": "cjs require",
          "userRequest": "./Globals",
          "loc": "3:18-38"
        },
        {
          "moduleId": 6,
          "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/UnitService.ts",
          "module": "./services/UnitService.ts",
          "moduleName": "./services/UnitService.ts",
          "type": "cjs require",
          "userRequest": "./Globals",
          "loc": "3:18-38"
        },
        {
          "moduleId": 8,
          "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DrinkDisplayService.ts",
          "module": "./services/DrinkDisplayService.ts",
          "moduleName": "./services/DrinkDisplayService.ts",
          "type": "cjs require",
          "userRequest": "./Globals",
          "loc": "4:18-38"
        },
        {
          "moduleId": 11,
          "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/BuilderService.ts",
          "module": "./services/BuilderService.ts",
          "moduleName": "./services/BuilderService.ts",
          "type": "cjs require",
          "userRequest": "./Globals",
          "loc": "12:18-38"
        },
        {
          "moduleId": 18,
          "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DisplayService.ts",
          "module": "./services/DisplayService.ts",
          "moduleName": "./services/DisplayService.ts",
          "type": "cjs require",
          "userRequest": "./Globals",
          "loc": "18:18-38"
        },
        {
          "moduleId": 49,
          "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
          "module": "./main.ts",
          "moduleName": "./main.ts",
          "type": "cjs require",
          "userRequest": "./services/Globals",
          "loc": "20:18-47"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 1,
      "source": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Globals = {\n    Glasses: [],\n    Drinks: [],\n    Categories: [],\n    IngredientFlat: {},\n    ingredients: [],\n    UnitTypes: [],\n};\nexports.Globals = Globals;\n"
    },
    {
      "id": 2,
      "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/models/ITree.ts",
      "name": "./models/ITree.ts",
      "index": 39,
      "index2": 34,
      "size": 2618,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "issuer": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DisplayService.ts",
      "issuerId": 18,
      "issuerName": "./services/DisplayService.ts",
      "issuerPath": [
        {
          "id": 49,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
          "name": "./main.ts",
          "profile": {
            "factory": 58,
            "building": 1843
          }
        },
        {
          "id": 18,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DisplayService.ts",
          "name": "./services/DisplayService.ts",
          "profile": {
            "factory": 83,
            "building": 1193,
            "dependencies": 637
          }
        }
      ],
      "profile": {
        "factory": 735,
        "building": 523,
        "dependencies": 1
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 5,
          "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/SVGService.ts",
          "module": "./services/SVGService.ts",
          "moduleName": "./services/SVGService.ts",
          "type": "cjs require",
          "userRequest": "../models/ITree",
          "loc": "12:16-42"
        },
        {
          "moduleId": 11,
          "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/BuilderService.ts",
          "module": "./services/BuilderService.ts",
          "moduleName": "./services/BuilderService.ts",
          "type": "cjs require",
          "userRequest": "../models/ITree",
          "loc": "13:16-42"
        },
        {
          "moduleId": 13,
          "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DrinkService.ts",
          "module": "./services/DrinkService.ts",
          "moduleName": "./services/DrinkService.ts",
          "type": "cjs require",
          "userRequest": "../models/ITree",
          "loc": "5:16-42"
        },
        {
          "moduleId": 18,
          "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DisplayService.ts",
          "module": "./services/DisplayService.ts",
          "moduleName": "./services/DisplayService.ts",
          "type": "cjs require",
          "userRequest": "../models/ITree",
          "loc": "15:16-42"
        },
        {
          "moduleId": 23,
          "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/SubstituteService.ts",
          "module": "./services/SubstituteService.ts",
          "moduleName": "./services/SubstituteService.ts",
          "type": "cjs require",
          "userRequest": "../models/ITree",
          "loc": "3:16-42"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 2,
      "source": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nrequire(\"../extensions/array.extensions\");\n/**\n * Searches an entire tree, calling `functor(currentNode, currentDepth)` for each node visited\n * @param tree - The tree to traverse\n * @param functor - the function to be called on each node\n */\nfunction DFS(tree, functor) {\n    function dfsh(node, depth, f) {\n        f(node, depth);\n        for (let i = 0; i < node.children.length; i++) {\n            dfsh(node.children[i], depth + 1, f);\n        }\n    }\n    return dfsh(tree, 0, functor);\n}\nexports.DFS = DFS;\n/**\n * Searches the entire tree, calling the `functor` for each node visited, while also passing\n * the accumulator to each invocation of the functor.\n * @param tree The tree to search\n * @param functor The function to apply to each node. Takes (node, depth, accumulator)\n * @param accumulator An argument to pass along to each node.\n */\nfunction DFSAcc(tree, functor, accumulator) {\n    function dfsh(node, depth, f, accumulator) {\n        accumulator = f(node, depth, accumulator);\n        for (let i = 0; i < node.children.length; i++) {\n            dfsh(node.children[i], depth + 1, f, accumulator);\n        }\n    }\n    dfsh(tree, 0, functor, accumulator);\n}\nexports.DFS2 = DFSAcc;\n/**\n * Given a Tree, returns a branch-pruned version of the three where the only children are the\n * nodes on the way to the target.\n * @param branch - tree to search through\n * @param target - node to find\n * @param noChildren - Whether to include a full children array in the target element. Default `true`.\n *\n * @returns Returns an ITree with no siblings and only the critical path nodes,\n * or an empty ITree (id === -1) if nothing was found.\n */\nfunction NoSiblings(branch, target, noChildren = false) {\n    const nb = JSON.parse(JSON.stringify(branch));\n    function dfs2(b, stack) {\n        stack.push(b);\n        if (b.id === target.id) {\n            if (noChildren) {\n                b.children.clear();\n            }\n            return true;\n        }\n        const c = b.children;\n        while (c.any()) {\n            const child = c[c.length - 1];\n            const found = dfs2(child, stack);\n            if (found) {\n                c.filter(x => !stack.contains(x)).forEach(x => c.remove(x));\n                return true;\n            }\n            c.remove(child);\n        }\n        stack.pop();\n        return false;\n    }\n    const stack = [];\n    const found = dfs2(nb, stack);\n    if (!found) {\n        return { id: -1, children: [] };\n    }\n    else {\n        return nb; // stack\n    }\n}\nexports.NoSiblings = NoSiblings;\n"
    },
    {
      "id": 3,
      "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/IngredientService.ts",
      "name": "./services/IngredientService.ts",
      "index": 35,
      "index2": 32,
      "size": 7607,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "issuer": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
      "issuerId": 49,
      "issuerName": "./main.ts",
      "issuerPath": [
        {
          "id": 49,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
          "name": "./main.ts",
          "profile": {
            "factory": 58,
            "building": 1843
          }
        }
      ],
      "profile": {
        "factory": 83,
        "building": 1193,
        "dependencies": 637
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 5,
          "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/SVGService.ts",
          "module": "./services/SVGService.ts",
          "moduleName": "./services/SVGService.ts",
          "type": "cjs require",
          "userRequest": "./IngredientService",
          "loc": "13:28-58"
        },
        {
          "moduleId": 8,
          "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DrinkDisplayService.ts",
          "module": "./services/DrinkDisplayService.ts",
          "moduleName": "./services/DrinkDisplayService.ts",
          "type": "cjs require",
          "userRequest": "./IngredientService",
          "loc": "6:28-58"
        },
        {
          "moduleId": 11,
          "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/BuilderService.ts",
          "module": "./services/BuilderService.ts",
          "moduleName": "./services/BuilderService.ts",
          "type": "cjs require",
          "userRequest": "./IngredientService",
          "loc": "15:28-58"
        },
        {
          "moduleId": 49,
          "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
          "module": "./main.ts",
          "moduleName": "./main.ts",
          "type": "cjs require",
          "userRequest": "./services/IngredientService",
          "loc": "21:28-67"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 1,
      "source": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Globals_1 = require(\"./Globals\");\nconst UnitService_1 = require(\"./UnitService\");\nfunction mapIngs(ingredient, flat) {\n    if (!(ingredient.id in flat)) {\n        flat[ingredient.id] = ingredient;\n    }\n    for (let i = 0; i < ingredient.children.length; i++) {\n        const ing = ingredient.children[i];\n        mapIngs(ing, flat);\n    }\n}\nfunction constructIngredients(jings) {\n    const ingredientFlat = {};\n    const ingredientArr = [];\n    jings.forEach((x) => {\n        mapIngs(x, ingredientFlat);\n        ingredientArr.push(x);\n    });\n    return [ingredientArr, ingredientFlat];\n}\nexports.constructIngredients = constructIngredients;\nfunction makeIngredientIdForHTML(ingredient) {\n    const unit = ingredient.Unit.replace(/ /g, '');\n    const idLinkToFind = `ingredient_${ingredient.IngredientId}_${unit}`;\n    return idLinkToFind;\n}\nexports.makeIngredientIdForHTML = makeIngredientIdForHTML;\nconst UnitAndPlurals = [\n    { unit: 'oz', plural: 'oz' },\n    { unit: 'bs', plural: 'bs' },\n    { unit: 'ts', plural: 'ts' },\n    { unit: 'tbs', plural: 'tbs' },\n    { unit: 'shot', plural: 'shots' },\n    { unit: 'dash', plural: 'dashes' },\n    { unit: 'pinch', plural: 'pinches' },\n    { unit: 'drop', plural: 'drops' },\n    { unit: 'leaf', plural: 'leaves' },\n    { unit: 'stick', plural: 'sticks' },\n];\nexports.UnitAndPlurals = UnitAndPlurals;\n/**\n * Converts an Ingredient to its equivalent Ingredient Node form.\n *\n * this is not a perfect conversation and the resulting node will not\n * have the correct distance or children fields.\n * @param ingredient\n */\nfunction Ingredient2IngredientNode(ingredient) {\n    return {\n        id: ingredient.IngredientId,\n        distance: -1,\n        name: ingredient.IngredientName,\n        children: []\n    };\n}\nexports.Ingredient2IngredientNode = Ingredient2IngredientNode;\nfunction IngredientVal2IngredientNode(val) {\n    if (val in Globals_1.Globals.IngredientFlat) {\n        return Globals_1.Globals.IngredientFlat[val];\n    }\n    console.error(`failed to find an ingredient of the value given: (${val})`);\n}\nexports.IngredientVal2IngredientNode = IngredientVal2IngredientNode;\nfunction EncodeIngredientForUrl(ingredient) {\n    return `${ingredient.IngredientId}_${ingredient.Quantity}_${ingredient.Unit}_${ingredient.IsGarnish}_${ingredient.DisplayOrder}_${ingredient.DisplayText ? ingredient.DisplayText : ''}`;\n}\nexports.EncodeIngredientForUrl = EncodeIngredientForUrl;\nfunction DecodeIngredientFromUrl(fragment) {\n    const splits = fragment.split('_');\n    if (splits.length !== 6) {\n        console.error(`failed to decode drink, an ingredient was malformed. Incorrect number of separators: ${fragment}`);\n        return;\n    }\n    const ingId_raw = splits[0];\n    const quantity_raw = splits[1];\n    const unit_raw = splits[2];\n    const garnish_raw = splits[3];\n    const displayorder_raw = splits[4];\n    const dtext_raw = splits[5];\n    /* Ingredient Id */\n    const ingid = parseInt(ingId_raw);\n    if (isNaN(ingid)) {\n        console.error(`failed to decode ingredient, supplied ingredient id was invalid: ${ingId_raw}`);\n        return undefined;\n    }\n    const realIngredient = Globals_1.Globals.IngredientFlat[ingid];\n    if (!realIngredient) {\n        console.error(`failed to decode ingredient, supplied ingredient id was not found: ${ingId_raw}`);\n        return undefined;\n    }\n    /* Display Order */\n    const dorder = parseInt(displayorder_raw);\n    if (isNaN(dorder)) {\n        console.error(`failed to decode ingredient, supplied ingredient display order was invalid: ${displayorder_raw}`);\n        return undefined;\n    }\n    /* Is Garnish */\n    const isGarnishCheck = (garnish_raw === 'true' || garnish_raw === 'false');\n    if (!isGarnishCheck) {\n        console.error(`Failed to decode ingredient, supplied IsGarnish check wasn't valid: ${garnish_raw}`);\n    }\n    const isGarnish = garnish_raw === 'true';\n    /* Unit */\n    const unit = UnitService_1.UnitString2Unit(unit_raw);\n    if (!unit) {\n        console.error(`Failed to decode ingredient, supplied unit check wasn't valid: ${unit_raw}`);\n        return undefined;\n    }\n    /* Quantity */\n    const quantity = quantity_raw; /* we have no special checks yet */\n    /* Display Text */\n    /* todo sanitize dispaly text input? */\n    const dtext = dtext_raw;\n    const ing = {\n        IngredientId: realIngredient.id,\n        DisplayOrder: dorder,\n        IsGarnish: isGarnish,\n        Unit: unit.Name,\n        Quantity: quantity,\n        IngredientName: realIngredient.name,\n        DisplayText: dtext\n    };\n    return ing;\n}\nexports.DecodeIngredientFromUrl = DecodeIngredientFromUrl;\n/**\n * Given a pantry of ingredients, searches through a drink list\n * and determines what ingredients you should buy to make the most new drinks.\n *\n * Returns an object of {ingredient: ingredient}\n */\nfunction GetRecommendedIngredients(results) {\n    // Gets all drinks that cannot be made\n    let invalids = results.invalid;\n    // Construct a list of all unique missing items\n    let missingIngredients = [];\n    const missingIds = [];\n    for (let i = 0; i < invalids.length; i++) {\n        const missing = invalids[i].missing;\n        for (let k = 0; k < missing.length; k++) {\n            const ing = missing[k];\n            if (!missingIds.contains(ing.IngredientId)) {\n                missingIds.push(ing.IngredientId);\n                missingIngredients.push({ count: 1, id: ing.IngredientId, ingredient: Ingredient2IngredientNode(ing) });\n            }\n            else {\n                const misser = missingIngredients.find(x => x.id === ing.IngredientId);\n                misser.count += 1;\n            }\n        }\n    }\n    // Order by number of missing items\n    missingIngredients = missingIngredients.sort((x, y) => { return x.count > y.count ? 0 : 1; }); // descending order\n    invalids = invalids.sort((x, y) => { return x.missing.length < y.missing.length ? 0 : 1; }); // ascending order\n    const WillingToPurchase = 2;\n    const invsWithWilling = invalids.filter(x => x.missing.length <= WillingToPurchase);\n    const considered = [];\n    const consideredIds = [];\n    for (let i = 0; i < invsWithWilling.length; i++) {\n        const inv = invalids[i];\n        const ings = inv.missing.map(x => x.IngredientId);\n        // how many others are also only missing these ingredient?\n        for (let k = 0; k < invsWithWilling.length; k++) {\n            if (consideredIds.contains(invsWithWilling[k].id)) {\n                continue;\n            }\n            const otherInv = Object.assign({}, invsWithWilling[k], { missing: invsWithWilling[k].missing.map(x => x.IngredientId) });\n            for (let z = 0; z < ings.length; z++) {\n                const pop = ings[z];\n                otherInv.missing.remove(pop);\n            }\n            if (otherInv.missing.length === 0) {\n                console.log(`if you can only purchase ${WillingToPurchase} items, purchase ${inv.missing.map(x => x.IngredientName).join(', ')}`);\n                console.log(otherInv);\n                considered.push(otherInv);\n                consideredIds.push(otherInv.id);\n            }\n        }\n    }\n    // for xn numnber of ingredients\n    // S0 = set of all drinks missing ingredient x0\n    // S1 = set all drinks missing ingredient x1\n    //   ...\n    // SN = set all drinks missing ingredient xn\n    // console.log('If you had these ingredients...');\n    // console.log(invalids);\n    // console.log(missingIngredients);\n}\nexports.GetRecommendedIngredients = GetRecommendedIngredients;\n"
    },
    {
      "id": 4,
      "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/models/SearchObject.ts",
      "name": "./models/SearchObject.ts",
      "index": 44,
      "index2": 41,
      "size": 442,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "issuer": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
      "issuerId": 49,
      "issuerName": "./main.ts",
      "issuerPath": [
        {
          "id": 49,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
          "name": "./main.ts",
          "profile": {
            "factory": 58,
            "building": 1843
          }
        }
      ],
      "profile": {
        "factory": 83,
        "building": 1193,
        "dependencies": 637
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 13,
          "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DrinkService.ts",
          "module": "./services/DrinkService.ts",
          "moduleName": "./services/DrinkService.ts",
          "type": "cjs require",
          "userRequest": "../models/SearchObject",
          "loc": "3:23-56"
        },
        {
          "moduleId": 18,
          "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DisplayService.ts",
          "module": "./services/DisplayService.ts",
          "moduleName": "./services/DisplayService.ts",
          "type": "cjs require",
          "userRequest": "../models/SearchObject",
          "loc": "17:23-56"
        },
        {
          "moduleId": 49,
          "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
          "module": "./main.ts",
          "moduleName": "./main.ts",
          "type": "cjs require",
          "userRequest": "./models/SearchObject",
          "loc": "23:23-55"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 1,
      "source": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst SearchObject = {\n    ConsiderSubstitutions: true,\n    RequireGarnish: false,\n    RequireCube: false,\n    RequireRinse: false,\n    RequireSplash: false,\n    RequireBitters: true,\n    RequireSpray: false,\n    RequirePinch: true,\n    RequireFloat: false,\n    Inventory: [],\n    _InventoryIds: [],\n    SubstitutionMap: {},\n};\nexports.SearchObject = SearchObject;\n"
    },
    {
      "id": 5,
      "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/SVGService.ts",
      "name": "./services/SVGService.ts",
      "index": 37,
      "index2": 37,
      "size": 23980,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "issuer": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DisplayService.ts",
      "issuerId": 18,
      "issuerName": "./services/DisplayService.ts",
      "issuerPath": [
        {
          "id": 49,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
          "name": "./main.ts",
          "profile": {
            "factory": 58,
            "building": 1843
          }
        },
        {
          "id": 18,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DisplayService.ts",
          "name": "./services/DisplayService.ts",
          "profile": {
            "factory": 83,
            "building": 1193,
            "dependencies": 637
          }
        }
      ],
      "profile": {
        "factory": 735,
        "building": 523,
        "dependencies": 1
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 8,
          "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DrinkDisplayService.ts",
          "module": "./services/DrinkDisplayService.ts",
          "moduleName": "./services/DrinkDisplayService.ts",
          "type": "cjs require",
          "userRequest": "./SVGService",
          "loc": "7:21-44"
        },
        {
          "moduleId": 11,
          "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/BuilderService.ts",
          "module": "./services/BuilderService.ts",
          "moduleName": "./services/BuilderService.ts",
          "type": "cjs require",
          "userRequest": "./SVGService",
          "loc": "11:21-44"
        },
        {
          "moduleId": 18,
          "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DisplayService.ts",
          "module": "./services/DisplayService.ts",
          "moduleName": "./services/DisplayService.ts",
          "type": "cjs require",
          "userRequest": "./SVGService",
          "loc": "19:21-44"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 2,
      "source": "\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst SVG = require(\"svg.js\");\nconst ITree_1 = require(\"../models/ITree\");\nconst IngredientService_1 = require(\"./IngredientService\");\nconst GlassService_1 = require(\"./GlassService\");\nconst UnitService_1 = require(\"./UnitService\");\nconst SVGOptions = {\n    WidthCanvas: 250,\n    HeightCanvas: 80 * 4,\n    WidthElement: 10,\n    HeightElement: 10,\n    ScaleElement: 1,\n    DropletMeta: { Height: 25, Width: 25 },\n    LiquidMeta: { Height: 10, Width: 10 },\n    TwistMeta: { Height: 50, Width: 100 },\n    DropMeta: { Height: 50, Width: 50 },\n    IceCollinsMeta: { Height: 9999, Width: 9999 },\n    IceRegularMeta: { Height: 25, Width: 25 },\n    IceLargeMeta: { Height: 34, Width: 34 },\n    SugarCubeMeta: { Height: 20, Width: 20 },\n};\n/* Used so we know what to highlight or de-highlight for mouseovers */\nconst GroupRegister = [];\n/* these two variables help with layering ingredients in a criss-cross pattern */\nlet toff = false;\nlet offcounter = 0;\n/* Constants for how many rows of a glass to dedicate to drawing particular ingredient types */\nconst BSRowCount = 2; /* number of rows we dedicate to drawing barspoons */\nconst FloatRowCoat = 1; /* number of rows we dedicate to drawing floats */\n/* SVG Document variables */\nlet temp = null;\nlet canv = null;\nlet iceG = null;\nlet mainG = null;\nlet glassG = null;\nlet topG = null;\nlet mask = null;\n/**\n * Resets the SVG space to a known initialization. Called before each new drink draw\n * @param glass Optional glass to call the reset with. Helps to properly size the bounding boxes. (Collins and punch bowls are bigger than whiskey glasses, for instance)\n */\nfunction ResetSVGSpace(glass) {\n    GroupRegister.clear(); // Reset the array\n    toff = false;\n    offcounter = 0;\n    mask ? mask.remove() : '';\n    glassG ? glassG.remove() : '';\n    mainG ? mainG.remove() : '';\n    iceG ? iceG.remove() : '';\n    topG ? topG.remove() : '';\n    canv ? canv.remove().attr('id', 'main_canvas') : '';\n    temp ? temp.remove().attr('id', 'temp') : '';\n    temp = SVG('svgtmp').attr('id', 'svgtmp');\n    canv = SVG('svg').attr('height', null).attr('width', null).viewbox(0, 0, SVGOptions.WidthCanvas, SVGOptions.HeightCanvas).attr('id', 'canv_vb');\n    mainG = canv.nested().attr({ id: 'mg' });\n    iceG = canv.nested().attr('id', 'iceg');\n    glassG = canv.nested().attr('id', 'glassg');\n    topG = canv.nested().attr('id', 'topg');\n    mask = null;\n    if (glass) {\n        /* We set the viewbox to the height of the glass if we are handed one */\n        canv.viewbox(0, 0, glass.Width, glass.Height);\n    }\n}\nexports.ResetSVGSpace = ResetSVGSpace;\n/**\n * Generates a function that will assist in mouseover events for each ingredient.\n * @param ingredient Ingredient to assign to the highlighter\n */\nfunction highlightGroupGenerator(ingredient) {\n    const f = function () {\n        GroupRegister.forEach(x => x.attr('opacity', 0.3));\n        GroupRegister.filter(x => x.id() === makeIngredientGroupId(ingredient))[0].attr('opacity', 1);\n        const idLinkToFind = IngredientService_1.makeIngredientIdForHTML(ingredient);\n        $('.ingdisplay').removeClass('inghighlight').addClass('ingdepress');\n        $(`#${idLinkToFind}`).addClass('inghighlight').removeClass('ingdepress');\n    };\n    return f;\n}\nexports.highlightGroupGenerator = highlightGroupGenerator;\n/**\n * Resets any ingredient highlighting\n */\nfunction restoreGroups() {\n    GroupRegister.forEach(x => x.attr('opacity', 1));\n    $('.ingdisplay').removeClass('inghighlight').removeClass('ingdepress');\n}\nexports.restoreGroups = restoreGroups;\n/**\n * Using the inherit tree-structure of the Ingredients, we search for the lowest available\n * svg symbol type in a given branch. This lets us use whatever top-level defaults\n * are available if a specific symbol doesn't exist.\n *\n * Converts the ingredient to an IngredientNode and calls `getIngredientSVGStyle()`\n * @param ing Ingredient type to retrieve an SVG type for\n * @param available list of all available ingredients to search over\n *\n * @returns a string representing the svg symbol type, or `null` if nothing at all was found\n */\nfunction getIngredientSVGStyle(ing, available) {\n    const converted = IngredientService_1.Ingredient2IngredientNode(ing);\n    return getIngredientNodeSVGStyle(converted, available);\n}\n/**\n * Using the inherit tree-structure of the Ingredients, we search for the lowest available\n * svg symbol type in a given branch. This lets us use whatever top-level defaults\n * are available if a specific symbol doesn't exist.\n *\n * This is the base method for `getIngredientSVGStyle`\n *\n * @param ing Ingredient type to retrieve an SVG type for\n * @param available list of all available ingredients to search over\n *\n * @returns a string representing the svg symbol type, or `null` if nothing at all was found\n */\nfunction getIngredientNodeSVGStyle(ing, available) {\n    let path = null;\n    for (let i = 0; i < available.length; i++) {\n        const tree = available[i];\n        const res = ITree_1.NoSiblings(tree, ing, true);\n        if (res && res.id !== -1) {\n            path = res;\n            break;\n        }\n    }\n    if (!path) {\n        console.error('Failed to find any matching ingredient path for the supplied ingredient');\n        return null;\n    }\n    let highestImageUrl = null;\n    ITree_1.DFS(path, (n) => {\n        if (n.symbol) {\n            highestImageUrl = n.symbol;\n        }\n    });\n    return highestImageUrl;\n}\nexports.getIngredientNodeSVGStyle = getIngredientNodeSVGStyle;\nconst smap = {};\n/**\n * Ingredient quantites are always strings and sometimes contain ranges in the form of `\"a-b\"`\n * This method takes any quantity and returns the numerical version of that numer-string.\n *\n *\n * In the event of ranges, selects the highest range.\n * @param quantity Ingredient quantity to parse\n */\nfunction useThisNumber(quantity) {\n    if (quantity.contains('-')) {\n        const splits = quantity.split('-');\n        const numarr = splits.map((x) => {\n            const num = parseFloat(x);\n            if (isNaN(num)) {\n                console.error(`Error parsing a number from drink quantity value. Received ${x}`);\n                return 0;\n            }\n            return num;\n        });\n        const toUse = numarr.reduce((p, c) => {\n            return c > p ? c : p;\n        }, 0);\n        return toUse;\n    }\n    return +quantity;\n}\n/**\n * Returns the number of rows each ingredient should take up given the drink's glass.\n * @param drink the drink containing the list of ingredients and their quantites to use\n */\nfunction calculateLiquidRatios(drink) {\n    const ounces = drink.Ingredients.filter(x => x.Unit === 'oz' || x.Unit === 'shot');\n    const total = ounces.reduce((p, c) => {\n        let num = useThisNumber(c.Quantity);\n        // get unit\n        const unit = UnitService_1.UnitString2Unit(c.Unit);\n        const inOunces = UnitService_1.Unit2OunceConverter(unit);\n        if (inOunces === -1) {\n            return p; // skip invalids\n        }\n        num *= inOunces;\n        return p + num;\n    }, 0);\n    const numOtherRows = drink.Ingredients.filter(x => x.Unit === 'splash' || x.Unit === 'float' || x.Unit === 'top').length * FloatRowCoat; // We dedicate a single row to each of these types.\n    const numBarSpoons = drink.Ingredients.filter(x => x.Unit === 'bs' || x.Unit === 'ts').length * BSRowCount; // we dedicate 2 rows to each bs ingreditent.\n    const glass = GlassService_1.GlassString2Glass(drink.Glass);\n    const ratios = ounces.map(x => {\n        const q = useThisNumber(x.Quantity);\n        const ratf = (q / total);\n        const rati = Math.ceil(ratf * 100);\n        const rt = (glass.AvailableRows - numOtherRows - numBarSpoons) * ratf;\n        const obj = {\n            ingredient: x,\n            rational_base: ratf,\n            rational_float: ratf * 100,\n            rational_integer: rati,\n            rowcount: Math.floor(rt)\n        };\n        return obj;\n    });\n    return ratios;\n}\n/**\n * Returns an array of ice cubes in a given drink, if any\n * @param drink Drink to get ice cubes from\n */\nfunction getIceCubeIngredients(drink) {\n    const cubes = drink.Ingredients.filter(x => x.IngredientName.toLocaleLowerCase().contains('ice cube') && x.Unit !== 'long cube' && x.DisplayOrder > -1);\n    return cubes;\n}\nfunction getOtherGanirshes(drink) {\n    const ret = drink.Ingredients.filter((x) => {\n        return x.IsGarnish && x.Unit !== 'twist' && x.Unit !== 'drop' && x.Unit !== 'pinch' && x.Unit !== 'float' && x.DisplayOrder > -1;\n    });\n    return ret;\n}\nfunction getTwistsAndDrops(drink) {\n    const ret = drink.Ingredients.filter(x => (x.Unit === 'twist' || x.Unit === 'drop') && x.DisplayOrder > -1);\n    return ret;\n}\nfunction getPinchesAndDashes(drink) {\n    const ret = drink.Ingredients.filter(x => (x.Unit === 'dash' || x.Unit === 'pinch') && x.DisplayOrder > -1);\n    return ret;\n}\nfunction GetSVG(url) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (url in smap) {\n            return smap[url];\n        }\n        else {\n            const r = yield fetch(url);\n            const t = yield r.text();\n            smap[url] = t;\n            return t;\n        }\n    });\n}\nfunction mdraw(maskS, id) {\n    const m = temp.clone().svg(maskS);\n    m.remove().attr('id', id);\n    return m;\n}\nfunction gdraw(glassS, maskS) {\n    const g = temp.clone().svg(glassS);\n    g.remove().attr('id', 'glasss_main');\n    glassG.add(g);\n    const m = mdraw(maskS, 'glass_mask');\n    glassG.add(m);\n    mask = m;\n}\nfunction icdraw(cube, cubeS, count, g, glass) {\n    // What is the height of an icecube?\n    let iceheight = 34; // todo encode this better for each ice cube.\n    let magicMult = 0;\n    if (cube.IngredientId === 223) {\n        iceheight = SVGOptions.IceLargeMeta.Height;\n        magicMult = 4;\n    }\n    else if (cube.IngredientId === 221 || cube.IngredientId === 224) {\n        iceheight = SVGOptions.IceRegularMeta.Height;\n        magicMult = 3;\n    }\n    else {\n        console.error('Attempted to draw ice cube with an incorrect ingredient id: ' + cube.IngredientId);\n        return;\n    }\n    const ice = temp.clone().svg(cubeS);\n    ice.remove().attr('id', 'ice_cube');\n    ice.x(glass.Width / 4); // width begins counting from farthest left. We go 25% in to center againt the backing element (the GlassG)\n    ice.y(glass.Height - ((iceheight * (count + 1)) * magicMult)); // +1 to account for zero being off screen *4 because??\n    g.add(ice);\n}\n/* Makes a row of SVG ingredient icons */\nfunction makeRow(s) {\n    const spacing = SVGOptions.HeightElement * 2;\n    const cloneTimes = 15;\n    const rowGroup = canv.nested().attr('id', `rowgroup_${offcounter}`);\n    const first = rowGroup.nested().svg(s).attr('id', `stamp_${offcounter}`).height(SVGOptions.HeightElement);\n    for (let i = 1; i < cloneTimes; i++) {\n        const dx = i * spacing;\n        const stamp = rowGroup.use(first).attr('id', `use_${offcounter}_${i - 1}`).x(dx);\n    }\n    rowGroup.remove();\n    return rowGroup;\n}\n/* Given a grouped row of ingredient icons, place it in our main group */\nfunction drawRow(s, g) {\n    const row = makeRow(s);\n    const dx = toff ? SVGOptions.HeightElement : 0;\n    const dy = offcounter * SVGOptions.HeightElement;\n    row.x(dx).y(dy);\n    g.add(row);\n}\nfunction addStack(s, g) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const t = yield GetSVG(s);\n        drawRow(t, g);\n        toff = !toff;\n        offcounter += 1;\n    });\n}\nfunction makeIngredientGroupId(ingredient) {\n    const gid = `group_${ingredient.IngredientId}_${ingredient.Unit.replace(' ', '')}_${ingredient.Quantity.replace('-', '_')}`;\n    return gid;\n}\nexports.makeIngredientGroupId = makeIngredientGroupId;\nfunction makeIngredientGroup(ingredient) {\n    const gid = makeIngredientGroupId(ingredient);\n    const svgg = temp.group();\n    svgg.attr('id', gid).addClass('svginghighlighter');\n    svgg.remove();\n    GroupRegister.push(svgg);\n    svgg.on('mouseover', highlightGroupGenerator(ingredient));\n    svgg.on('mouseout', restoreGroups);\n    return svgg;\n}\nfunction drawIngredient(ingArr, rowCount, universe) {\n    return __awaiter(this, void 0, void 0, function* () {\n        for (let i = 0; i < ingArr.length; i++) {\n            const ing = ingArr[i];\n            const svgu = getIngredientSVGStyle(ing, universe);\n            if (svgu === null) {\n                console.error('Whoaaaah something happened while trying to draw an SVG bs');\n                return;\n            }\n            const svgg = makeIngredientGroup(ing);\n            mainG.add(svgg);\n            for (let k = 0; k < rowCount; k++) {\n                yield addStack(`/img/ingredients/${svgu}.svg`, svgg);\n            }\n        }\n    });\n}\nfunction drawTop(ingredient, start_x, off_x, start_y, off_y, elem_height, universe) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const g = makeIngredientGroup(ingredient);\n        const svgu = getIngredientSVGStyle(ingredient, universe);\n        const s = yield GetSVG(`/img/ingredients/${svgu}.svg`);\n        const first = temp.clone().svg(s).remove();\n        first.x(start_x - off_x);\n        first.y(start_y - off_y);\n        g.add(first);\n        const utn = useThisNumber(ingredient.Quantity);\n        for (let k = 1; k < utn; k++) {\n            const stamp = g.use(first);\n            stamp.dy(-(k * elem_height));\n        }\n        return g;\n    });\n}\nfunction DrawDrinkSVG(drink, universe) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const glass = GlassService_1.GlassString2Glass(drink.Glass);\n        ResetSVGSpace(glass);\n        /* Get Glass svgs */\n        const glassS = yield GetSVG(glass.SVGURL);\n        const glassM = yield GetSVG(glass.MaskURL);\n        /* Draw Splashes */\n        const splashes = drink.Ingredients.filter(x => x.Unit === 'splash' || x.Unit === 'float' || x.Unit === 'top');\n        yield drawIngredient(splashes, FloatRowCoat, universe);\n        /* Draw bar spoons */\n        const bss = drink.Ingredients.filter(x => x.Unit === 'bs' || x.Unit === 'ts');\n        yield drawIngredient(bss, BSRowCount, universe);\n        /* Draw the liquid ingredients */\n        const liqrats = calculateLiquidRatios(drink);\n        for (let i = liqrats.length - 1; i >= 0; i--) {\n            /* full arayy not handed in because each liquid has a unique row count. So we wrap each in a single-array */\n            yield drawIngredient([liqrats[i].ingredient], liqrats[i].rowcount, universe);\n        }\n        gdraw(glassS, glassM);\n        mainG.maskWith(mask);\n        /* Draw the Ice Cubes if any */\n        const cubes = getIceCubeIngredients(drink);\n        for (let i = 0; i < cubes.length; i++) {\n            const cube = cubes[i];\n            const cubeCount = useThisNumber(cube.Quantity);\n            const svgu = getIngredientSVGStyle(cube, universe);\n            const s = yield GetSVG(`/img/ingredients/${svgu}.svg`);\n            const svgg = makeIngredientGroup(cube);\n            mainG.add(svgg);\n            for (let c = 0; c < cubeCount; c++) {\n                icdraw(cube, s, c, svgg, glass);\n            }\n        }\n        /**\n         * Draw top items\n         * we collect all height information up front so we can draw properly\n         */\n        const additionalHeights = [0];\n        const additionalSidePush = [0];\n        const garnishes = getOtherGanirshes(drink);\n        additionalSidePush.push(Math.min(1, garnishes.length) * 90 / 2); // todo height of garnish. We only take one, we do not stack garnishes\n        additionalHeights.push(Math.min(1, garnishes.length) * 90 / 2); // we split the dimensions of a garnish across the x and y vectors\n        /* here we calculate the additional height we need to add to our drawing to account for top-items like drops and pinches and bitters */\n        const twists = getTwistsAndDrops(drink);\n        additionalHeights.push(twists.length * SVGOptions.TwistMeta.Height);\n        const pinchesAndDashes = getPinchesAndDashes(drink);\n        additionalHeights.push(pinchesAndDashes.map(x => useThisNumber(x.Quantity)).reduce((p, c) => {\n            if (c > p) {\n                return c;\n            }\n            else {\n                return p;\n            }\n        }, 0) * SVGOptions.DropletMeta.Height);\n        const additionalHeightNeeded = Math.max(...additionalHeights);\n        const additionalSidePushNeeded = Math.max(...additionalSidePush);\n        /* Draw Twists and Drops */\n        for (let i = 0; i < twists.length; i++) {\n            const twist = twists[i];\n            const elem_height = SVGOptions.TwistMeta.Height;\n            const start_x = 0; /* Draws from right-to-left */\n            const off_x = 0; /* Does not move x's */\n            const off_y = ((i + 1) * elem_height); /* will move down by some amount for each ingredient */\n            const start_y = additionalHeightNeeded; /* Starts drawing bottom up */\n            const svgg = yield drawTop(twist, start_x, off_x, start_y, off_y, elem_height, universe);\n            topG.add(svgg);\n        }\n        /* Draw pinches and dashes */\n        for (let i = 0; i < pinchesAndDashes.length; i++) {\n            const dash = pinchesAndDashes[i];\n            const elem_height = SVGOptions.DropletMeta.Height;\n            const start_x = glass.Width; /* Draws from left-to-right */\n            const off_x = (elem_height * (i + 1)); /* will move some amount to the side for each different-type ingredient */\n            const off_y = elem_height; /* will move down by some amount for each same-ingredient */\n            const start_y = additionalHeightNeeded; /* starts drawing bottom up */\n            const svgg = yield drawTop(dash, start_x, off_x, start_y, off_y, elem_height, universe);\n            topG.add(svgg);\n        }\n        /* Draw Cracked or Crushed Ice if any */\n        const crackedIce = drink.Ingredients.filter(x => x.Unit === 'cracked' || x.Unit === 'crushed').find(x => true);\n        if (crackedIce) {\n            const heightIce = 25;\n            function crackedDraw(s, g) {\n                return __awaiter(this, void 0, void 0, function* () {\n                    const t = yield GetSVG(s);\n                    const spacing = heightIce * 2;\n                    const cloneTimes = 15;\n                    const rowGroup = temp.nested().attr('id', `rowgroup_cracked_${iceoff}`);\n                    const first = rowGroup.nested().svg(t).attr('id', `stamp_cracked_${iceoff}`).height(heightIce);\n                    for (let i = 1; i < cloneTimes; i++) {\n                        const dx = i * spacing;\n                        const stamp = rowGroup.use(first).attr('id', `use_cracked_${iceoff}_${i - 1}`).x(dx);\n                    }\n                    const row = rowGroup.remove();\n                    const dx = icetoff ? heightIce : 0;\n                    const dy = iceoff * heightIce;\n                    row.x(dx).y(glass.Height - dy);\n                    g.add(row);\n                    icetoff = !icetoff;\n                    iceoff += 1;\n                });\n            }\n            let iceoff = 0;\n            let icetoff = false;\n            const svgu = getIngredientSVGStyle(crackedIce, universe);\n            const svgs = `/img/ingredients/${svgu}.svg`;\n            const svgg = makeIngredientGroup(crackedIce).remove();\n            const count = (crackedIce.Quantity === 'half' ? glass.Height / 2 : glass.Height) / heightIce;\n            for (let i = 0; i < count; i++) {\n                yield crackedDraw(svgs, svgg);\n            }\n            const m = mdraw(glassM, 'icemask');\n            iceG.maskWith(m);\n            iceG.add(svgg);\n            mainG.front();\n        }\n        /* Draw Collins Ice Cubes, if any */\n        const collins = drink.Ingredients.filter(x => x.Unit === 'long cube').find(x => true);\n        if (collins) {\n            function collinsDraw(s, g) {\n                return __awaiter(this, void 0, void 0, function* () {\n                    const t = yield GetSVG(s);\n                    const rowGroup = temp.nested().attr('id', `rowgroup_collins`);\n                    const first = rowGroup.nested().svg(t).attr('id', `stamp_collins`);\n                    const row = rowGroup.remove();\n                    const widthIce = 90;\n                    first.x((glass.Width / 2) - (widthIce / 2));\n                    first.dy(glass.Height / 10);\n                    g.add(row);\n                });\n            }\n            const svgu = getIngredientSVGStyle(collins, universe);\n            const svgs = `/img/ingredients/${svgu}.svg`;\n            const svgg = makeIngredientGroup(collins).remove();\n            yield collinsDraw(svgs, svgg);\n            const m = mdraw(glassM, 'icemask');\n            iceG.maskWith(m); /* we mask with another glass_mask */\n            iceG.add(svgg);\n            mainG.front(); /* ingredients come forward, meaning ice gets drawn behind. */\n        }\n        /* draw garnishes, if any */\n        // todo fix side push collisions with bitters and pinches\n        if (garnishes.length > 0) {\n            for (let i = 0; i < garnishes.length; i++) {\n                // todo we cheat here to only draw one of each garnish. Garnishes are special and only drawn one time per.\n                const garnish = Object.assign({}, garnishes[i], { Quantity: '1' });\n                const isMint = (garnish.Unit === 'leaf' || garnish.Unit === 'sprig');\n                const elem_height = isMint ? 90 : (90 / 2); // todo height of garnish element divided by 2\n                const start_x = isMint ? 0 : -(elem_height); /* Draws from right-to-left */\n                const off_x = 0; /* Does not move x's */\n                const off_y = ((i + 1) * elem_height); /* will move down by some amount for each ingredient */\n                const start_y = additionalHeightNeeded; /* Starts drawing bottom up */\n                const svgg = yield drawTop(garnish, start_x, off_x, start_y, off_y, elem_height, universe);\n                topG.add(svgg);\n            }\n        }\n        const currentVbHeight = canv.viewbox().height;\n        canv.viewbox(0, 0, SVGOptions.WidthCanvas + additionalSidePushNeeded, currentVbHeight + additionalHeightNeeded);\n        /* shift everything over by the needed amounts */\n        /* y */\n        mainG.dy(additionalHeightNeeded);\n        glassG.dy(additionalHeightNeeded);\n        iceG.dy(additionalHeightNeeded);\n        /* x */\n        mainG.dx(additionalSidePushNeeded);\n        glassG.dx(additionalSidePushNeeded);\n        iceG.dx(additionalSidePushNeeded);\n        topG.dx(additionalSidePushNeeded);\n    });\n}\nexports.DrawDrinkSVG = DrawDrinkSVG;\nfunction DrawIngredientSVG(ingredient, universe) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const svgu = getIngredientNodeSVGStyle(ingredient, universe);\n        if (svgu === null) {\n            console.error('Whoaaaah something happened while trying to draw an SVG');\n            return;\n        }\n        const svgs = yield GetSVG(`/img/ingredients/${svgu}.svg`);\n        const scale = 1;\n        const canvas = SVG('svgholder').attr('width', `${SVGOptions.HeightElement * scale}px`).attr('height', `${SVGOptions.HeightElement * scale}px`);\n        canvas.svg(svgs).scale(scale);\n        return;\n    });\n}\nexports.DrawIngredientSVG = DrawIngredientSVG;\n"
    },
    {
      "id": 6,
      "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/UnitService.ts",
      "name": "./services/UnitService.ts",
      "index": 36,
      "index2": 31,
      "size": 1576,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "issuer": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/IngredientService.ts",
      "issuerId": 3,
      "issuerName": "./services/IngredientService.ts",
      "issuerPath": [
        {
          "id": 49,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
          "name": "./main.ts",
          "profile": {
            "factory": 58,
            "building": 1843
          }
        },
        {
          "id": 3,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/IngredientService.ts",
          "name": "./services/IngredientService.ts",
          "profile": {
            "factory": 83,
            "building": 1193,
            "dependencies": 637
          }
        }
      ],
      "profile": {
        "factory": 330,
        "building": 225,
        "dependencies": 1
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 3,
          "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/IngredientService.ts",
          "module": "./services/IngredientService.ts",
          "moduleName": "./services/IngredientService.ts",
          "type": "cjs require",
          "userRequest": "./UnitService",
          "loc": "4:22-46"
        },
        {
          "moduleId": 5,
          "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/SVGService.ts",
          "module": "./services/SVGService.ts",
          "moduleName": "./services/SVGService.ts",
          "type": "cjs require",
          "userRequest": "./UnitService",
          "loc": "15:22-46"
        },
        {
          "moduleId": 11,
          "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/BuilderService.ts",
          "module": "./services/BuilderService.ts",
          "moduleName": "./services/BuilderService.ts",
          "type": "cjs require",
          "userRequest": "./UnitService",
          "loc": "14:22-46"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 2,
      "source": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Globals_1 = require(\"./Globals\");\nfunction UnitVal2Unit(val) {\n    for (let i = 0; i < Globals_1.Globals.UnitTypes.length; i++) {\n        const ucat = Globals_1.Globals.UnitTypes[i];\n        const unit = ucat.Units.find(x => x.Id === val);\n        if (unit) {\n            return unit.Unit;\n        }\n    }\n    console.error(`Failed to find a unit by the value given (${val})`);\n    return undefined;\n}\nexports.UnitVal2Unit = UnitVal2Unit;\nfunction UnitString2Unit(val) {\n    for (let i = 0; i < Globals_1.Globals.UnitTypes.length; i++) {\n        const ucat = Globals_1.Globals.UnitTypes[i];\n        const unit = ucat.Units.find(x => x.Unit.Name === val);\n        if (unit) {\n            return unit.Unit;\n        }\n    }\n    console.error(`Failed to find a unit by the value given (${val})`);\n    return undefined;\n}\nexports.UnitString2Unit = UnitString2Unit;\n/**\n * given a unit, convert it to an equivalent number of ounces\n * @param u Unit to convert to ounces\n * @returns the number of ounces the given unit reprents, or `-1` if not valid\n */\nfunction Unit2OunceConverter(u) {\n    if (u.Name === 'oz') {\n        return 1;\n    }\n    if (u.Name === 'ts' || u.Name === 'bs') {\n        return 1 / 6;\n    }\n    if (u.Name === 'ml') {\n        return 1 / 32;\n    }\n    if (u.Name === 'lb') {\n        return 16;\n    }\n    if (u.Name === 'tbs') {\n        return 1 / 2;\n    }\n    if (u.Name === 'shot') {\n        return 1.5;\n    }\n    return -1;\n}\nexports.Unit2OunceConverter = Unit2OunceConverter;\n"
    },
    {
      "id": 7,
      "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/utils/bignumber/isBigNumber.js",
      "name": "../node_modules/mathjs/lib/utils/bignumber/isBigNumber.js",
      "index": 15,
      "index2": 7,
      "size": 204,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "issuer": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/utils/string.js",
      "issuerId": 28,
      "issuerName": "../node_modules/mathjs/lib/utils/string.js",
      "issuerPath": [
        {
          "id": 49,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
          "name": "./main.ts",
          "profile": {
            "factory": 58,
            "building": 1843
          }
        },
        {
          "id": 18,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DisplayService.ts",
          "name": "./services/DisplayService.ts",
          "profile": {
            "factory": 83,
            "building": 1193,
            "dependencies": 637
          }
        },
        {
          "id": 8,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DrinkDisplayService.ts",
          "name": "./services/DrinkDisplayService.ts",
          "profile": {
            "factory": 735,
            "building": 523,
            "dependencies": 1
          }
        },
        {
          "id": 46,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/MathService.ts",
          "name": "./services/MathService.ts",
          "profile": {
            "factory": 394,
            "building": 17
          }
        },
        {
          "id": 29,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/function/string/format.js",
          "name": "../node_modules/mathjs/lib/function/string/format.js",
          "profile": {
            "factory": 54,
            "building": 107
          }
        },
        {
          "id": 28,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/utils/string.js",
          "name": "../node_modules/mathjs/lib/utils/string.js",
          "profile": {
            "factory": 7,
            "building": 13
          }
        }
      ],
      "profile": {
        "factory": 32,
        "building": 6,
        "dependencies": 1
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 0,
          "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/utils/object.js",
          "module": "../node_modules/mathjs/lib/utils/object.js",
          "moduleName": "../node_modules/mathjs/lib/utils/object.js",
          "type": "cjs require",
          "userRequest": "./bignumber/isBigNumber",
          "loc": "5:18-52"
        },
        {
          "moduleId": 28,
          "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/utils/string.js",
          "module": "../node_modules/mathjs/lib/utils/string.js",
          "moduleName": "../node_modules/mathjs/lib/utils/string.js",
          "type": "cjs require",
          "userRequest": "./bignumber/isBigNumber",
          "loc": "9:18-52"
        },
        {
          "moduleId": 42,
          "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/core/typed.js",
          "module": "../node_modules/mathjs/lib/core/typed.js",
          "moduleName": "../node_modules/mathjs/lib/core/typed.js",
          "type": "cjs require",
          "userRequest": "./../utils/bignumber/isBigNumber",
          "loc": "9:18-61"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 6,
      "source": "'use strict';\n/**\n * Test whether a value is a BigNumber\n * @param {*} x\n * @return {boolean}\n */\n\nmodule.exports = function isBigNumber(x) {\n  return x && x.constructor.prototype.isBigNumber || false;\n};"
    },
    {
      "id": 8,
      "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DrinkDisplayService.ts",
      "name": "./services/DrinkDisplayService.ts",
      "index": 9,
      "index2": 39,
      "size": 8950,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "issuer": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DisplayService.ts",
      "issuerId": 18,
      "issuerName": "./services/DisplayService.ts",
      "issuerPath": [
        {
          "id": 49,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
          "name": "./main.ts",
          "profile": {
            "factory": 58,
            "building": 1843
          }
        },
        {
          "id": 18,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DisplayService.ts",
          "name": "./services/DisplayService.ts",
          "profile": {
            "factory": 83,
            "building": 1193,
            "dependencies": 637
          }
        }
      ],
      "profile": {
        "factory": 735,
        "building": 523,
        "dependencies": 1
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 9,
          "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/NavigationService.ts",
          "module": "./services/NavigationService.ts",
          "moduleName": "./services/NavigationService.ts",
          "type": "cjs require",
          "userRequest": "./DrinkDisplayService",
          "loc": "5:30-62"
        },
        {
          "moduleId": 11,
          "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/BuilderService.ts",
          "module": "./services/BuilderService.ts",
          "moduleName": "./services/BuilderService.ts",
          "type": "cjs require",
          "userRequest": "./DrinkDisplayService",
          "loc": "16:30-62"
        },
        {
          "moduleId": 18,
          "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DisplayService.ts",
          "module": "./services/DisplayService.ts",
          "moduleName": "./services/DisplayService.ts",
          "type": "cjs require",
          "userRequest": "./DrinkDisplayService",
          "loc": "22:30-62"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 2,
      "source": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst MathService_1 = require(\"./MathService\");\nconst Globals_1 = require(\"./Globals\");\nconst SelectedDrinkObject_1 = require(\"../models/SelectedDrinkObject\");\nconst IngredientService_1 = require(\"./IngredientService\");\nconst SVGService_1 = require(\"./SVGService\");\nconst WLM_1 = require(\"../models/WLM\");\n/* Drink Display */\nfunction DrawDrink() {\n    $('li').removeClass('liSelected');\n    const darr = Globals_1.Globals.Drinks.filter(x => x.DrinkId === parseInt(location.hash.substring(1)));\n    if (darr) {\n        SelectedDrinkObject_1.SelectedDrinkObject.Drink = darr[0];\n    }\n    else {\n        SelectedDrinkObject_1.SelectedDrinkObject.Drink = null;\n    }\n    if (SelectedDrinkObject_1.SelectedDrinkObject.Drink) {\n        $('#li_drink_' + SelectedDrinkObject_1.SelectedDrinkObject.Drink.DrinkId).addClass('liSelected');\n        DisplayDrink(SelectedDrinkObject_1.SelectedDrinkObject);\n        window.document.title = SelectedDrinkObject_1.SelectedDrinkObject.Drink.Name + ' - Nondari';\n    }\n}\nexports.DrawDrink = DrawDrink;\nfunction ingredientLink(ingredient) {\n    let a = null;\n    if (ingredient.name) {\n        a = $('<a>').attr('href', 'ingredient.html#' + ingredient.id).text((ingredient.name));\n    }\n    else if (ingredient.IngredientName) {\n        a = $('<a>').attr('href', 'ingredient.html#' + ingredient.IngredientId).text((ingredient.DisplayText ? ingredient.DisplayText : ingredient.IngredientName));\n    }\n    return a;\n}\nfunction ingredientText(ingredient, additionalText, sdo) {\n    const sp = $('<span>').addClass('ingdisplay').attr('id', IngredientService_1.makeIngredientIdForHTML(ingredient));\n    function quantityText(ingredient) {\n        function doFrac(d) {\n            // http://westblog.com/2014/02/26/javascript-fractional-part-of-a-number/\n            function fraction(fraction) {\n                const fr = MathService_1.math.fraction(fraction);\n                const res = MathService_1.math.format(fr, { fraction: 'ratio' });\n                return res;\n            }\n            function frac(num) {\n                return +(+num).toExponential().replace(/(-?)(\\d+(\\.?)\\d*)e(.+)/, function (m, neg, num, dot, offset) {\n                    const zeroes = Array(Math.abs(offset) + 2).join('0');\n                    num = (zeroes + num + (dot ? '' : '.') + zeroes).split('.');\n                    return String(+(neg + '.' + num.join('').slice(+offset + num[0].length)));\n                });\n            }\n            const dd = parseFloat(d);\n            const f = frac(dd);\n            if (f === 0) {\n                return dd;\n            }\n            else if (f === 33) {\n            }\n            else if (f === 66) {\n            }\n            const rat = dd - f;\n            const ff = fraction(f);\n            if (rat >= 1) {\n                return rat + ' ' + ff;\n            }\n            else {\n                return ff;\n            }\n        }\n        const u = ingredient.Unit;\n        const blanks = ['cracked', 'egg', 'float', 'half', 'full', 'rinse', 'splash', 'spray', 'top'];\n        if (blanks.contains(u)) {\n            return '';\n        }\n        const us = ['oz', 'bs', 'ts', 'tbs', 'shot'];\n        const quants = ingredient.Quantity.split('-');\n        for (let i = 0; i < quants.length; i++) {\n            const tp = parseFloat(quants[i]);\n            if (isNaN(tp)) {\n                return '';\n            }\n        }\n        if (us.contains(u)) {\n            const fracs = quants.map((x) => {\n                return doFrac(x);\n            });\n            return fracs.join('-');\n        }\n        else {\n            return ingredient.Quantity;\n        }\n    }\n    function unitText(ingredient) {\n        const unit = IngredientService_1.UnitAndPlurals.filter(x => x.unit === ingredient.Unit).find(x => true);\n        if (unit) {\n            const n = parseFloat(ingredient.Quantity);\n            return ` ${isNaN(n) || n > 1 ? unit.plural : unit.unit} `;\n        }\n        else {\n            return ' ';\n        }\n    }\n    const tfirst = `${quantityText(ingredient)}${unitText(ingredient)}`;\n    sp.append(tfirst);\n    sp.append(ingredientLink(ingredient));\n    sp.append(additionalText);\n    if (sdo && sdo.Builder) {\n        const but = $('<button>').text('X').addClass(['btn', 'btn-xs', 'btn-danger']);\n        but.on('click', () => {\n            console.log('shrug emoji');\n        });\n        sp.append(but);\n    }\n    if (ingredient.DisplayOrder > -1) {\n        sp.on('mouseover', SVGService_1.highlightGroupGenerator(ingredient));\n        sp.on('mouseout', SVGService_1.restoreGroups);\n    }\n    else {\n        const notDisplayedSpan = $('<span>').text('*');\n        $('#asterisk').removeClass('hidden');\n        sp.append(notDisplayedSpan);\n    }\n    return sp;\n}\n/* eliminate all html */\nfunction strip(html) {\n    const doc = new DOMParser().parseFromString(html, 'text/html');\n    return doc.body.textContent || '';\n}\n/**\n * A small DSL parser to keep our user-submitted preludes and instructions XSS safe.\n *\n* the DSL for prelude and intructions is as follows:\n*\n* {dNUM_text}, i.e., {d17_Bee's Knees} == <a href='drinks.html#17>Bee's Knees</a>\n*\n* {i_text}, i.e., {i_guey} == <i>guey</i>\n*/\nfunction replaceDSL(t) {\n    const open = '{';\n    const close = '}';\n    const italicToken = 'i';\n    const drinkToken = 'd';\n    let ret = t; /* string we will be operating on for replacements */\n    let openB = 0; /* initialized to something above -1 */\n    while (openB > -1) {\n        openB = ret.indexOf(`${open}d`);\n        /* changing links */\n        if (openB > -1) {\n            const closeB = ret.indexOf(close, openB);\n            const sub = ret.substr(openB, closeB - openB + 1);\n            const replacer = sub.replace(open, '').replace(close, '').replace(drinkToken, '');\n            const splits = replacer.split('_');\n            const drinkNum = parseInt(splits[0]);\n            const drinkName = splits[1];\n            const drink = Globals_1.Globals.Drinks.find(x => x.DrinkId === drinkNum);\n            if (!drink) {\n                console.error('tried to find drinkid ' + drinkNum + ' but none was found.');\n                // replace with drink name It doesn't matter.\n                ret = ret.replace(sub, drinkName);\n            }\n            else {\n                ret = ret.replace(sub, `<a href=\"/drinks.html#${drinkNum}\">${drinkName}</a>`);\n            }\n        }\n        /* changing italics */\n        openB = ret.indexOf(`${open}i`);\n        if (openB > -1) {\n            const closeB = ret.indexOf(close, openB);\n            const sub = ret.substr(openB, closeB - openB + 1);\n            const replacer = sub.replace(open, '').replace(close, '').replace(italicToken, '');\n            const splits = replacer.split('_');\n            const fancy = splits[1];\n            ret = ret.replace(sub, `<i>${fancy}</i>`);\n        }\n    }\n    return ret;\n}\nfunction decorateText(t) {\n    let s = strip(t);\n    s = replaceDSL(s);\n    s = s.replace(/\\n/g, '<br />');\n    return s;\n}\nfunction DisplayDrink(SDO) {\n    $('#drinkHeader').text(SDO.Drink.Name);\n    $('#drinkDescription').html(decorateText(SDO.Drink.Prelude));\n    $('#drinkInstructions').html(decorateText(SDO.Drink.Instructions));\n    $('#drinkCategory').text(SDO.Drink.Category);\n    $('#drinkGlass').text(SDO.Drink.Glass);\n    $('#drinkIngredients').empty();\n    $('#asterisk').addClass('hidden');\n    SDO.Drink.Ingredients.forEach((x) => {\n        const sp = $('<span>');\n        const li = $('<li>');\n        const ul = li.append(sp);\n        let additionalText = '';\n        if (SDO.Optionals.contains(x.IngredientId)) {\n            sp.addClass('optionalIngredient');\n            additionalText = '(optional)';\n        }\n        else if (x.IngredientId in SDO.Substitutions) {\n            sp.addClass('substitutionAvailable');\n            additionalText = '(substitutions available)';\n            const ul2 = $('<ul>');\n            const isubs = SDO.Substitutions[x.IngredientId];\n            for (const distance in isubs) {\n                const dist = $('<li>').addClass('substitutionItem');\n                const sp2 = $('<span>');\n                const iter = isubs[distance];\n                sp2.text(`${WLM_1.WeirdnessLevelMap[Number(distance)]}: `);\n                for (let i = 0; i < iter.length; i++) {\n                    const id = iter[i];\n                    const ing = Globals_1.Globals.IngredientFlat[id];\n                    sp2.append(ingredientLink(ing)).append(', ');\n                }\n                dist.append(sp2);\n                ul2.append(dist);\n            }\n            li.append(ul2);\n        }\n        const t = ingredientText(x, additionalText, SDO); // TODO typescript being a bitch\n        sp.html(t);\n        $('#drinkIngredients').append(ul);\n    });\n    SVGService_1.DrawDrinkSVG(SDO.Drink, Globals_1.Globals.ingredients);\n}\nexports.DisplayDrink = DisplayDrink;\n"
    },
    {
      "id": 9,
      "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/NavigationService.ts",
      "name": "./services/NavigationService.ts",
      "index": 7,
      "index2": 40,
      "size": 7851,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "issuer": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
      "issuerId": 49,
      "issuerName": "./main.ts",
      "issuerPath": [
        {
          "id": 49,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
          "name": "./main.ts",
          "profile": {
            "factory": 58,
            "building": 1843
          }
        }
      ],
      "profile": {
        "factory": 83,
        "building": 1193,
        "dependencies": 637
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 13,
          "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DrinkService.ts",
          "module": "./services/DrinkService.ts",
          "moduleName": "./services/DrinkService.ts",
          "type": "cjs require",
          "userRequest": "./NavigationService",
          "loc": "6:28-58"
        },
        {
          "moduleId": 18,
          "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DisplayService.ts",
          "module": "./services/DisplayService.ts",
          "moduleName": "./services/DisplayService.ts",
          "type": "cjs require",
          "userRequest": "./NavigationService",
          "loc": "14:28-58"
        },
        {
          "moduleId": 49,
          "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
          "module": "./main.ts",
          "moduleName": "./main.ts",
          "type": "cjs require",
          "userRequest": "./services/NavigationService",
          "loc": "22:28-67"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 1,
      "source": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Utils_1 = require(\"./Utils\");\nconst DisplayService_1 = require(\"./DisplayService\");\nconst DrinkDisplayService_1 = require(\"./DrinkDisplayService\");\nconst PageTypes = {\n    Drink: 'drink',\n    Pantry: 'pantry',\n    Ingredient: 'ingredient',\n};\nexports.PageTypes = PageTypes;\nfunction findPage() {\n    const l = window.location.pathname.split('/');\n    const last = l[l.length - 1].split('.')[0];\n    return last;\n}\nexports.findPage = findPage;\nfunction drinkhrefmaker() {\n    const loc = findPage();\n    if (loc === 'drinks') {\n        return '#';\n    }\n    else {\n        return 'drinks.html#';\n    }\n}\nexports.drinkhrefmaker = drinkhrefmaker;\nfunction makeNavForDrink(foundDrink) {\n    /* Storing substitutes for a given drink */\n    function encodeSubstitutions(subs) {\n        // sub is {key: {0: [items], ..., n: [items]}}\n        // i24 d3 s18,24,67\n        // i6 d2 s9 d3 10\n        let s = '';\n        for (const ingidA in subs) {\n            let si = `i${ingidA}`;\n            for (const dist in subs[ingidA]) {\n                const sdss = `d${dist}s${subs[ingidA][dist].join(',')}`;\n                si += sdss;\n            }\n            s += si;\n        }\n        return s;\n    }\n    // need to encode(id of thing to replace, id of thing to replace with, distance of replacement);\n    const q2 = new URLSearchParams('?');\n    q2.set('page', 'drink');\n    q2.set('id', String(foundDrink.id));\n    if (!Utils_1.Any(foundDrink.substitutions)) {\n        const subs = encodeSubstitutions(foundDrink.substitutions);\n        q2.set('substitutions', subs);\n    }\n    if (foundDrink.optionals.any()) {\n        const opts = foundDrink.optionals.map(x => x.IngredientId).join(',');\n        q2.set('optionals', opts);\n    }\n    foundDrink.anchor = q2.toString();\n    return q2.toString();\n}\nexports.makeNavForDrink = makeNavForDrink;\nfunction decodeDrinkNav(qstring, drinkUniverse, ingredientUniverse, NavObject, SDO) {\n    /* Note: validate everything. */\n    const q = new URLSearchParams(qstring);\n    const pageq = q.get('page');\n    const didq = q.get('id');\n    const subsq = q.get('substitutions');\n    const optsq = q.get('optionals');\n    /* setting the current page */\n    if (pageq && (pageq === 'drink' || pageq === 'pantry')) {\n        NavObject.currentPage = pageq;\n    }\n    /* setting the drinkid */\n    if (didq) {\n        const did = parseInt(didq);\n        if (isNaN(did)) {\n            console.error('Failed to parse drink id for value: ' + didq);\n            return; /* failed to parse the drink id */\n        }\n        const drinkids = drinkUniverse.map(x => x.DrinkId);\n        const drinkidx = drinkids.indexOf(did);\n        if (drinkidx === -1) {\n            console.error('Supplied drink id was not a valid drink id');\n            return;\n        }\n        SDO.Drink = drinkUniverse[drinkidx];\n    }\n    /* Setting optionals */\n    // const ingredientids = ingredientFlat.map(x => x.id);\n    if (optsq) {\n        const optionals = [];\n        const splits = optsq.split(',');\n        for (let i = 0; i < splits.length; i++) {\n            const sp = splits[i];\n            const sn = parseInt(sp);\n            if (isNaN(sn)) {\n                console.error('Failed to parse optional id for value: ' + sp);\n            }\n            if (!(sn in ingredientUniverse)) {\n                console.error('An optional input id of ' + sn + ' was supplied but this is not a valid ingredient id');\n            }\n            else {\n                optionals.push(sn);\n            }\n        }\n        SDO.Optionals = optionals;\n    }\n    /* Setting Substitutions */\n    if (subsq) {\n        let subo = {};\n        // handles raw Ingredient Strings\n        // returns an object of the format {ingredientId: {[distance]: [itemids]}}\n        function handle_i(s) {\n            let ad = -1;\n            const dindexes = [];\n            let cont = true;\n            while (cont) {\n                ad = s.indexOf('d', ad + 1);\n                if (ad === -1) {\n                    cont = false;\n                }\n                else {\n                    dindexes.push(ad);\n                }\n            }\n            if (!dindexes.any()) {\n                console.error('Attempted to parse a substitution object, but there were no distances in the querystring');\n                return;\n            }\n            const ingIdS = s.substr(0, dindexes[0]);\n            const ingId = parseInt(ingIdS);\n            if (isNaN(ingId)) {\n                console.error('Failed to parse substitution id for value: ' + ingIdS);\n                return null;\n            }\n            else if (!(ingId in ingredientUniverse)) {\n                console.error('A substitution input id of ' + ingId + ' was supplied but this is not a valid ingredient id');\n                return null;\n            }\n            let distances = {};\n            for (let i = 0; i < dindexes.length; i++) {\n                const dindex = dindexes[i];\n                let until = undefined;\n                if (i + 1 < dindex.length) {\n                    until = dindex[i + 1];\n                }\n                const dsub = s.substr(dindex + 1, until);\n                const d = handle_d(dsub); // an object of {[distance]: [itemids]}\n                if (!d) {\n                    continue; // error from below\n                }\n                distances = Object.assign(distances, d);\n            }\n            const obj = {};\n            obj[ingId] = distances;\n            return obj;\n        }\n        // handles Distance substrings\n        // returns an object of {distance: [itemids]}\n        function handle_d(s) {\n            // s25,26\n            const sindex = s.indexOf('s');\n            if (sindex === -1) {\n                console.error('Failed to get an ingredient index');\n                return null;\n            }\n            const distS = s.substr(0, sindex);\n            const dist = parseInt(distS);\n            if (isNaN(dist)) {\n                console.error('Failed to parse distance key for value: ' + distS);\n                return null;\n            }\n            const dobj = {};\n            dobj[dist] = [];\n            const ingredientS = s.substr(sindex + 1);\n            const ingredients = ingredientS.split(',');\n            for (let i = 0; i < ingredients.length; i++) {\n                const ingIdS = ingredients[i];\n                const ingId = parseInt(ingIdS);\n                if (isNaN(ingId)) {\n                    console.error('Failed to parse replacement id for value: ' + ingIdS);\n                    return null;\n                }\n                else if (!(ingId in ingredientUniverse)) {\n                    console.error('A replacement input id of ' + ingId + ' was supplied but this is not a valid ingredient id');\n                    return null;\n                }\n                dobj[dist].push(ingId);\n            }\n            return dobj;\n        }\n        const is = subsq.split('i');\n        for (let i = 0; i < is.length; i++) {\n            if (is[i].length > 0) {\n                const mergeMe = handle_i(is[i]);\n                subo = Object.assign(subo, mergeMe);\n            }\n        }\n        SDO.Substitutions = subo;\n    }\n    window.location.hash = String(didq);\n}\nexports.decodeDrinkNav = decodeDrinkNav;\nfunction locationHashChanged() {\n    const page = findPage().toLocaleLowerCase();\n    if (page === PageTypes.Ingredient.toLocaleLowerCase()) {\n        DisplayService_1.DrawIngredient();\n        return;\n    }\n    else if (page === PageTypes.Drink || page === 'drinks') {\n        DrinkDisplayService_1.DrawDrink();\n        return;\n    }\n    else if (page === 'builder') {\n        DisplayService_1.DrawBuilder();\n        return;\n    }\n    window.document.title = 'Nondari';\n}\nexports.locationHashChanged = locationHashChanged;\n"
    },
    {
      "id": 10,
      "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/QRCodeService.ts",
      "name": "./services/QRCodeService.ts",
      "index": 48,
      "index2": 45,
      "size": 177,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "issuer": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DisplayService.ts",
      "issuerId": 18,
      "issuerName": "./services/DisplayService.ts",
      "issuerPath": [
        {
          "id": 49,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
          "name": "./main.ts",
          "profile": {
            "factory": 58,
            "building": 1843
          }
        },
        {
          "id": 18,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DisplayService.ts",
          "name": "./services/DisplayService.ts",
          "profile": {
            "factory": 83,
            "building": 1193,
            "dependencies": 637
          }
        }
      ],
      "profile": {
        "factory": 735,
        "building": 523,
        "dependencies": 1
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 11,
          "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/BuilderService.ts",
          "module": "./services/BuilderService.ts",
          "moduleName": "./services/BuilderService.ts",
          "type": "cjs require",
          "userRequest": "./QRCodeService",
          "loc": "17:24-50"
        },
        {
          "moduleId": 18,
          "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DisplayService.ts",
          "module": "./services/DisplayService.ts",
          "moduleName": "./services/DisplayService.ts",
          "type": "cjs require",
          "userRequest": "./QRCodeService",
          "loc": "23:24-50"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 2,
      "source": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst QRDataLimit_AlphaNumeric = 4296;\nexports.QRDataLimit_AlphaNumeric = QRDataLimit_AlphaNumeric;\n"
    },
    {
      "id": 11,
      "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/BuilderService.ts",
      "name": "./services/BuilderService.ts",
      "index": 47,
      "index2": 46,
      "size": 14014,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "issuer": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
      "issuerId": 49,
      "issuerName": "./main.ts",
      "issuerPath": [
        {
          "id": 49,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
          "name": "./main.ts",
          "profile": {
            "factory": 58,
            "building": 1843
          }
        }
      ],
      "profile": {
        "factory": 83,
        "building": 1193,
        "dependencies": 637
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 18,
          "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DisplayService.ts",
          "module": "./services/DisplayService.ts",
          "moduleName": "./services/DisplayService.ts",
          "type": "cjs require",
          "userRequest": "./BuilderService",
          "loc": "21:25-52"
        },
        {
          "moduleId": 49,
          "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
          "module": "./main.ts",
          "moduleName": "./main.ts",
          "type": "cjs require",
          "userRequest": "./services/BuilderService",
          "loc": "27:25-61"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 1,
      "source": "\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst SVGService_1 = require(\"./SVGService\");\nconst Globals_1 = require(\"./Globals\");\nconst ITree_1 = require(\"../models/ITree\");\nconst UnitService_1 = require(\"./UnitService\");\nconst IngredientService_1 = require(\"./IngredientService\");\nconst DrinkDisplayService_1 = require(\"./DrinkDisplayService\");\nconst QRCodeService_1 = require(\"./QRCodeService\");\nlet qrCodeAllotment = 0;\nconst units = [];\nconst AddedIngredients = [];\nlet timesAdded = 0;\nconst DrinkToDraw = {\n    Category: undefined,\n    DrinkId: -1,\n    Glass: undefined,\n    Ingredients: [],\n    Name: '',\n    Prelude: '',\n    Instructions: '',\n};\nfunction updateQRCodeAllotment(textOld, textNew) {\n    qrCodeAllotment -= textOld.length;\n    qrCodeAllotment += textNew.length;\n    $('#qr_limit_current').text(qrCodeAllotment);\n}\nfunction setDrinkName(text) {\n    return __awaiter(this, void 0, void 0, function* () {\n        updateQRCodeAllotment(DrinkToDraw.Name, text);\n        DrinkToDraw.Name = text;\n        yield BuilderDraw();\n    });\n}\nexports.setDrinkName = setDrinkName;\nfunction setCategoryType(val) {\n    return __awaiter(this, void 0, void 0, function* () {\n        DrinkToDraw.Category = val;\n        yield BuilderDraw();\n    });\n}\nexports.setCategoryType = setCategoryType;\nfunction setGlassType(val) {\n    return __awaiter(this, void 0, void 0, function* () {\n        DrinkToDraw.Glass = val;\n        yield BuilderDraw();\n    });\n}\nexports.setGlassType = setGlassType;\nfunction setPrelude(val) {\n    updateQRCodeAllotment(DrinkToDraw.Prelude, val);\n    DrinkToDraw.Prelude = val;\n    console.log(val);\n}\nexports.setPrelude = setPrelude;\nfunction setInstructions(val) {\n    updateQRCodeAllotment(DrinkToDraw.Instructions, val);\n    DrinkToDraw.Instructions = val;\n    console.log(val);\n}\nexports.setInstructions = setInstructions;\nfunction pushIngredient(globalId, ingredient) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const ai = {\n            id: globalId,\n            ingredient: ingredient,\n        };\n        AddedIngredients.push(ai);\n        DrinkToDraw.Ingredients.clear();\n        AddedIngredients.forEach(x => DrinkToDraw.Ingredients.push(x.ingredient));\n        BuilderDraw();\n    });\n}\nfunction editIngredient(globalId) {\n    // wat do.\n    // don't push again, find the ingredient and change values\n}\nfunction removeIngredient(gloabalId) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const remove = AddedIngredients.filter(x => x.id === gloabalId);\n        remove.forEach(x => AddedIngredients.remove(x));\n        DrinkToDraw.Ingredients.clear();\n        AddedIngredients.forEach(x => DrinkToDraw.Ingredients.push(x.ingredient));\n    });\n}\nexports.removeIngredient = removeIngredient;\n/* also functions as an init function when passed parameters */\nfunction BuilderDraw(glass, category) {\n    return __awaiter(this, void 0, void 0, function* () {\n        updateQRCodeAllotment('', '');\n        /* populate initial units */\n        if (units.any()) {\n            Globals_1.Globals.Drinks.map(x => x.Ingredients.map(y => y.Unit)).reduce((p, c) => {\n                // c is a list of units\n                c.forEach((z) => {\n                    p.contains(z) ? null : p.push(z);\n                });\n                return p;\n            }, units);\n        }\n        if (glass) {\n            DrinkToDraw.Glass = glass;\n        }\n        if (category) {\n            DrinkToDraw.Category = category;\n        }\n        SVGService_1.ResetSVGSpace();\n        const sdo = {\n            Drink: DrinkToDraw,\n            Optionals: [],\n            Substitutions: {},\n            Builder: true\n        };\n        DrinkDisplayService_1.DisplayDrink(sdo);\n    });\n}\nexports.BuilderDraw = BuilderDraw;\nfunction assignUnitPulldown(ingredientId, pulldown) {\n    pulldown.empty();\n    let path = null;\n    for (let i = 0; i < Globals_1.Globals.ingredients.length; i++) {\n        const tree = Globals_1.Globals.ingredients[i];\n        const res = ITree_1.NoSiblings(tree, { id: ingredientId, children: [] }, true);\n        if (res && res.id !== -1) {\n            path = res;\n            break;\n        }\n    }\n    if (!path) {\n        console.error('Failed to find any matching ingredient path for the supplied ingredient');\n        return null;\n    }\n    let highestIngredientType = null;\n    ITree_1.DFS(path, (n) => {\n        if (n.unitpreference) {\n            highestIngredientType = n.unitpreference;\n        }\n    });\n    let cat = Globals_1.Globals.UnitTypes.find(x => x.Id === highestIngredientType).Units;\n    cat = cat.sort((x, y) => { return x.OrderPreference <= y.OrderPreference ? 1 : 0; });\n    // refresh available units\n    /* populate units */\n    cat.forEach((x) => {\n        const opt = $('<option>');\n        opt.val(x.Id);\n        opt.text(x.Unit.Name);\n        pulldown.append(opt);\n    });\n    return cat[0].Unit;\n}\nfunction createIngredientPulldown(base, unitPulldown, ingredient) {\n    const id = `${base}_ingredient_select`;\n    const label = $('<label>').attr('for', id).text('Ingredient');\n    // create Ingredient Pulldown\n    const sel = $('<select>').attr('id', id);\n    // populate ingredient pulldown\n    for (const key in Globals_1.Globals.IngredientFlat) {\n        const ingredient = Globals_1.Globals.IngredientFlat[key];\n        const symbol = SVGService_1.getIngredientNodeSVGStyle(ingredient, Globals_1.Globals.ingredients);\n        if (symbol) { /* only symbolized ingredients */\n            const ingId = ingredient.id;\n            const ingName = ingredient.name;\n            const opt = $('<option>').attr('id', `${base}_ingredient_select_option_${ingId}`);\n            opt.val(ingId);\n            opt.text(ingName);\n            sel.append(opt);\n        }\n    }\n    // when option select changes, reset the unit pulldown\n    sel.on('change', () => {\n        const ingVal = parseInt(sel.val());\n        ingredient.Unit = assignUnitPulldown(ingVal, unitPulldown).Name;\n        const node = IngredientService_1.IngredientVal2IngredientNode(ingVal);\n        if (!node) {\n            return; // ERROR\n        }\n        ingredient.IngredientName = node.name;\n        ingredient.IngredientId = node.id;\n    });\n    label.append(sel);\n    return label;\n}\nfunction createUnitPulldown(base, ingredient) {\n    const id = `${base}_unit_select`;\n    const label = $('<label>').attr('for', id).text('Unit');\n    const sel = $('<select>').attr('id', id);\n    sel.on('change', () => {\n        const unitVal = parseInt(sel.val());\n        const u = UnitService_1.UnitVal2Unit(unitVal);\n        if (!u) {\n            return; // ERROR\n        }\n        ingredient.Unit = u.Name;\n    });\n    label.append(sel);\n    return [label, sel];\n}\nfunction createDisplayTextInput(base, ingredient) {\n    const id = `${base}_displaytext_input`;\n    const label = $('<label>').attr('for', id).text('Display Text:');\n    const inp = $('<input>').attr('type', 'text').attr('id', id);\n    inp.on('change', (x) => {\n        const text = x.target.value;\n        if (!text || text.length === 0) {\n            ingredient.DisplayText = undefined;\n        }\n        else {\n            ingredient.DisplayText = text;\n        }\n    });\n    label.append(inp);\n    return label;\n}\nfunction createQuantityTextInput(base, ingredient) {\n    const id = `${base}_quantity_input`;\n    const label = $('<label>').text('Quantity').attr('for', id);\n    const inp = $('<input>').attr('type', 'number').attr('step', '0.01').attr('id', id); // TODO we restrict users to numbers. No handfuls.\n    inp.val(1); // default 1\n    inp.on('change paste keyup', (x) => {\n        const quantity = x.target.value;\n        const float = parseFloat(quantity);\n        if (isNaN(float)) {\n            console.error(`attempted to parse float for builder quantity, but failed. Supplied value was invalid: ${quantity}`);\n            return;\n        }\n        ingredient.Quantity = String(float);\n    });\n    label.append(inp);\n    return label;\n}\nfunction createIsGarnishButton(base, ingredient) {\n    const id = `${base}_isgarnish_input`;\n    const label = $('<label>').text('Garnish?').attr('for', id);\n    const but = $('<input>').attr('id', id).attr('type', 'checkbox');\n    let isOn = false;\n    but.text('is garnish');\n    but.on('change', () => {\n        isOn = !isOn;\n        isOn ? but.attr('checked', 'true') : but.removeAttr('checked');\n        // todo store check value somewhere\n        ingredient.IsGarnish = isOn;\n    });\n    label.append(but);\n    return label;\n}\nfunction createAcceptButton(base, iid, ingredient) {\n    const id = `${base}_accept_button`;\n    const but = $('<button>').attr('id', id).addClass(['btn', 'btn-xs', 'btn-primary']).text('OK');\n    but.on('click', () => __awaiter(this, void 0, void 0, function* () {\n        yield pushIngredient(iid, ingredient);\n        $(`#addIngredient_${timesAdded}_li`).remove();\n    }));\n    return but;\n}\nfunction createDeleteButton(base, globalId) {\n    const id = `${base}_cancel_button`;\n    const but = $('<button>').attr('id', id).addClass(['btn', 'btn-xs', 'btn-danger']).text('X');\n    but.on('click', () => __awaiter(this, void 0, void 0, function* () {\n        $(`#${base}_li`).remove();\n        removeIngredient(globalId);\n        yield BuilderDraw();\n    }));\n    return but;\n}\nfunction createIngredientEditor(base, iid, ingredient) {\n    // the editing menu of the add ingredient.\n    // Not the same as the display menu of the ingredient.\n    const sp = $('<span>').addClass('editorGird').attr('id', `${base}_editor`);\n    const unitPulldown = createUnitPulldown(base, ingredient);\n    const ingPulldown = createIngredientPulldown(base, unitPulldown[1], ingredient);\n    const dtextInput = createDisplayTextInput(base, ingredient);\n    const qInput = createQuantityTextInput(base, ingredient);\n    const gbutton = createIsGarnishButton(base, ingredient);\n    const okButton = createAcceptButton(base, iid, ingredient);\n    const deleteButton = createDeleteButton(base, iid);\n    const buttonsSp = $('<span>').css('display', 'inline');\n    buttonsSp.append(okButton).append(deleteButton);\n    sp.append(ingPulldown);\n    sp.append(unitPulldown);\n    sp.append(dtextInput);\n    sp.append(qInput);\n    sp.append(gbutton);\n    sp.append(buttonsSp);\n    return sp;\n}\nfunction addIngredient() {\n    return __awaiter(this, void 0, void 0, function* () {\n        timesAdded += 1;\n        const ingToEdit = {\n            DisplayOrder: 0,\n            DisplayText: undefined,\n            IngredientId: -1,\n            IngredientName: null,\n            Quantity: '1',\n            Unit: 'oz',\n            IsGarnish: false,\n        };\n        const baseId = `addIngredient_${timesAdded}`;\n        const editor = createIngredientEditor(baseId, timesAdded, ingToEdit);\n        const ul = $('#drinkIngredientsEdit');\n        const li = $('<li>').attr('id', `${baseId}_li`);\n        li.append(editor);\n        ul.append(li);\n    });\n}\nexports.addIngredient = addIngredient;\nconst Keys = {\n    NameKey: 'name',\n    CatKey: 'category',\n    GlassKey: 'glass',\n    PreludeKey: 'prelude',\n    InstructionsKey: 'instructions',\n    IngredientKey: 'ingredient'\n};\nfunction CreateDrink() {\n    const params = new URLSearchParams();\n    params.set(Keys.NameKey, DrinkToDraw.Name);\n    params.set(Keys.CatKey, DrinkToDraw.Category);\n    params.set(Keys.GlassKey, DrinkToDraw.Glass);\n    params.set(Keys.PreludeKey, DrinkToDraw.Prelude);\n    params.set(Keys.InstructionsKey, DrinkToDraw.Instructions);\n    for (let i = 0; i < DrinkToDraw.Ingredients.length; i++) {\n        const ing = DrinkToDraw.Ingredients[i];\n        params.append(Keys.IngredientKey, IngredientService_1.EncodeIngredientForUrl(ing));\n    }\n    const hash = params.toString();\n    const url = `${window.location.origin}/custom.html?${hash}`;\n    if (url.length > QRCodeService_1.QRDataLimit_AlphaNumeric) {\n        console.error('Supplied drink is too big to make a QR code for.');\n    }\n    window.location.assign(url); // Go!\n}\nexports.CreateDrink = CreateDrink;\nfunction DecodeDrink(urlstr) {\n    const url = new URL(urlstr);\n    console.log(url);\n    const params = new URLSearchParams(url.search);\n    const name = params.get(Keys.NameKey);\n    const category = params.get(Keys.CatKey);\n    const glass = params.get(Keys.GlassKey);\n    const prelude = params.get(Keys.PreludeKey);\n    const instructions = params.get(Keys.InstructionsKey);\n    const ingredients_raw = params.getAll(Keys.IngredientKey);\n    if ((!name || !name.any()) || (!category || !category.any()) || (!glass || !glass.any()) || (!ingredients_raw || !ingredients_raw.any())) { // todo add checks against prelude and instructions?\n        console.error('failed to decode drink uri, url was invalid');\n        return;\n    }\n    const ingredients = [];\n    for (let i = 0; i < ingredients_raw.length; i++) {\n        const raw = ingredients_raw[i];\n        const ing = IngredientService_1.DecodeIngredientFromUrl(raw);\n        if (!ing) {\n            console.error('failed to decode ingredient, raw string was invalid');\n            return;\n        }\n        ingredients.push(ing);\n    }\n    const drink = {\n        DrinkId: -1,\n        Category: category,\n        Glass: glass,\n        Instructions: instructions,\n        Prelude: prelude,\n        Name: name,\n        Ingredients: ingredients\n    };\n    return drink;\n}\nexports.DecodeDrink = DecodeDrink;\n"
    },
    {
      "id": 12,
      "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/StorageService.ts",
      "name": "./services/StorageService.ts",
      "index": 46,
      "index2": 44,
      "size": 1108,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "issuer": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
      "issuerId": 49,
      "issuerName": "./main.ts",
      "issuerPath": [
        {
          "id": 49,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
          "name": "./main.ts",
          "profile": {
            "factory": 58,
            "building": 1843
          }
        }
      ],
      "profile": {
        "factory": 83,
        "building": 1193,
        "dependencies": 637
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 18,
          "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DisplayService.ts",
          "module": "./services/DisplayService.ts",
          "moduleName": "./services/DisplayService.ts",
          "type": "cjs require",
          "userRequest": "./StorageService",
          "loc": "20:25-52"
        },
        {
          "moduleId": 49,
          "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
          "module": "./main.ts",
          "moduleName": "./main.ts",
          "type": "cjs require",
          "userRequest": "./services/StorageService",
          "loc": "26:25-61"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 1,
      "source": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst PantryKey = 'pantry';\nfunction StorageGetPantryItems() {\n    const x = localStorage.getItem(PantryKey);\n    if (!x || x.length === 0) {\n        return [];\n    }\n    const y = JSON.parse(x);\n    return y;\n}\nexports.StorageGetPantryItems = StorageGetPantryItems;\nfunction StorageAddPantryItem(item) {\n    const iarr = StorageGetPantryItems();\n    iarr.push(item);\n    const x = JSON.stringify(iarr);\n    localStorage.setItem(PantryKey, x);\n}\nexports.StorageAddPantryItem = StorageAddPantryItem;\nfunction StorageRemovePantryItem(item) {\n    const iarr = StorageGetPantryItems();\n    for (let i = 0; i < iarr.length; i++) {\n        if (iarr[i].id === item.id) {\n            // if found, kill it. break.\n            iarr.splice(i, 1);\n            break;\n        }\n    }\n    const x = JSON.stringify(iarr);\n    localStorage.setItem(PantryKey, x);\n}\nexports.StorageRemovePantryItem = StorageRemovePantryItem;\nfunction StorageClearPantry() {\n    localStorage.removeItem(PantryKey);\n}\nexports.StorageClearPantry = StorageClearPantry;\n"
    },
    {
      "id": 13,
      "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DrinkService.ts",
      "name": "./services/DrinkService.ts",
      "index": 43,
      "index2": 43,
      "size": 11981,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "issuer": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
      "issuerId": 49,
      "issuerName": "./main.ts",
      "issuerPath": [
        {
          "id": 49,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
          "name": "./main.ts",
          "profile": {
            "factory": 58,
            "building": 1843
          }
        }
      ],
      "profile": {
        "factory": 83,
        "building": 1193,
        "dependencies": 637
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 18,
          "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DisplayService.ts",
          "module": "./services/DisplayService.ts",
          "moduleName": "./services/DisplayService.ts",
          "type": "cjs require",
          "userRequest": "./DrinkService",
          "loc": "16:23-48"
        },
        {
          "moduleId": 49,
          "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
          "module": "./main.ts",
          "moduleName": "./main.ts",
          "type": "cjs require",
          "userRequest": "./services/DrinkService",
          "loc": "18:23-57"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 1,
      "source": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst SearchObject_1 = require(\"../models/SearchObject\");\nconst SubstituteService_1 = require(\"./SubstituteService\");\nconst ITree_1 = require(\"../models/ITree\");\nconst NavigationService_1 = require(\"./NavigationService\");\n/*\n    Because the pantry may be filled with supersets AND subsets of a given ingredient branch,\n    we want to return the elements closest to the available supersets.\n\n    Returns an array of only the biggest supersets from the pantry.\n    e.g., if [bourbon, elijah-craig-12-year, whiskey, aveze, tawny-port, wine] -> [whiskey, aveze, wine]\n*/\nfunction getPantrySupersets(available) {\n    const eliminated = []; // Set of items that have been eliminated\n    const final = []; // Set of final items\n    function eliminate(item) {\n        if (eliminated.filter(x => x.id === item.id).length === 0) {\n            eliminated.push(item);\n        }\n    }\n    function finalize(item) {\n        if (final.filter(x => x.id === item.id).length === 0) {\n            final.push(item);\n        }\n    }\n    /* for each of the available elements, we crawl down each other element until we find our element. We ignore the self index */\n    for (let i = 0; i < available.length; i++) {\n        const car = available[i];\n        /* check car is in eliminated, or in final */\n        if (eliminated.contains(car) || final.contains(car)) {\n            continue; /* this item is either eliminated or finally counted. Skip it */\n        }\n        /* This item is neither final nor eliminated, so we actually have to do work */\n        const cdr = available.filter(x => x.id !== car.id); /* a list of only not-checker elements */\n        /* for each other item in cdr, DFS it */\n        const foundAtDepth = []; // tuples of(depth, super);\n        for (let k = 0; k < cdr.length; k++) {\n            const caar = cdr[k];\n            ITree_1.DFS(caar, (n, d) => {\n                if (n.name === car.name) {\n                    const fad = { depth: d, item: caar };\n                    foundAtDepth.push(fad);\n                }\n            });\n        }\n        /* no further subsets were found, so we can skip everything and push this item to Final */\n        if (foundAtDepth.length === 0) {\n            final.push(car);\n        }\n        else {\n            /* find the item with the biggest depth. This is our Final */\n            const depthMax = foundAtDepth.reduce((p, c) => {\n                if (!p || p.depth < c.depth) {\n                    return c;\n                }\n                return p;\n            });\n            /* remove depthMax from foundatdepth */\n            foundAtDepth.remove(depthMax);\n            // foundAtDepth.splice(foundAtDepth.indexOf(depthMax), 1);\n            /* Eliminate remaining FoundAts */\n            foundAtDepth.forEach(x => eliminate(x.item));\n            /* push DepthMax to Final */\n            finalize(depthMax.item);\n        }\n    }\n    return final;\n}\nfunction flattenInventoryTree(pantry) {\n    const reducedInventory = getPantrySupersets(pantry);\n    const flattenedInventory = [];\n    reducedInventory.forEach(x => {\n        ITree_1.DFS(x, (n) => {\n            flattenedInventory.push(n);\n        });\n    });\n    return flattenedInventory;\n}\nfunction collapseZeros(pantry, universe) {\n    const inventory = [];\n    for (let i = 0; i < pantry.length; i++) {\n        const ing = pantry[i];\n        if (ing.distance === 0 && ing.parent !== null) {\n            const p = universe[ing.parent];\n            inventory.push(p);\n        }\n        inventory.push(ing);\n    }\n    return inventory;\n}\n/* Returns whether the given ingredient is optional, given our criteria */\nfunction ingredientRequireChecker(ingredient) {\n    /* Check Floats */\n    if (ingredient.Unit === 'top' || ingredient.Unit === 'float') {\n        return !SearchObject_1.SearchObject.RequireFloat; /* It is a Float and are requiring floats, it is NOT OPTIONAL */\n    }\n    /* Check Splashes */\n    if (ingredient.Unit === 'splash') {\n        return !SearchObject_1.SearchObject.RequireSplash; /* It is a Splash and we are requiring splashes, it is NOT OPTIONAL */\n    }\n    /* Check Rinses */\n    if (ingredient.Unit === 'rinse') {\n        return !SearchObject_1.SearchObject.RequireRinse; /* It is a rinse and we are requiring rinse, it is NOT OPTIONAL */\n    }\n    /* Check Spray */\n    if (ingredient.Unit === 'spray') {\n        return !SearchObject_1.SearchObject.RequireSpray; /* It is a Spray and we are requiring sprays, it is NOT OPTIONAL */\n    }\n    /* Check Ice */\n    if (ingredient.Unit === 'cracked' || ingredient.Unit === 'half' || ingredient.Unit === 'large cube' || ingredient.Unit === 'regular cube' || ingredient.Unit === 'small cube') {\n        return !SearchObject_1.SearchObject.RequireCube; /* It is an ice thing are requiring ice-things, it is NOT OPTIONAL */\n    }\n    /* Check Garnishes */\n    if (ingredient.DisplayText.toLocaleLowerCase().contains('garnish')) {\n        return !SearchObject_1.SearchObject.RequireGarnish; /* It is a garnish and we are requiring garnishes, it is NOT OPTIONAL */\n    }\n    /* Check Bitters */\n    if (ingredient.Unit === 'dash') {\n        return !SearchObject_1.SearchObject.RequireBitters; /* It is a bitters, and we require bitters so it is NOT OPTIONAL */\n    }\n    /* Check Pinches */\n    if (ingredient.Unit === 'pinch') {\n        return !SearchObject_1.SearchObject.RequirePinch; /* It is a pinch, and we require pinches so it is NOT OPTIONAL */\n    }\n    return false; /* Unless specifically exempted by the above rules, all ingredients are required by default. */\n}\nfunction findSubstitution(ing, pantry, universe) {\n    // function checkPantryCache(ing: IIngredientNode, pantry: Array<IIngredientNode>): ReplacementsObj {\n    //     const repls: ReplacementsObj = { any: false, subs: null };\n    //     if (ing.id in SearchObject.SubstitutionMap) {\n    //         /* check if any of the available mappings exist in users pantry */\n    //         const subs: any = SearchObject.SubstitutionMap[ing.id];\n    //         for (let i = 0; i < subs.length; i++) {\n    //             const subi = subs[i];\n    //             if (pantry.contains(subi)) {\n    //                 repls.any = true;\n    //                 if (IsUndefined(repls[i])) {\n    //                     repls[i] = [subi];\n    //                 } else {\n    //                     repls[i].push(subi);\n    //                 }\n    //             }\n    //         }\n    //     }\n    //     return repls;\n    // }\n    // function updateSubCache(repls: any): void {\n    //     if (repls.any) {\n    //         for (let key in repls.subs) {\n    //             if (IsUndefined(SearchObject.SubstitutionMap[key])) {\n    //                 SearchObject.SubstitutionMap[key] = repls[key];\n    //             } else {\n    //                 const sosm = SearchObject.SubstitutionMap[key];\n    //                 for (let distkey in sosm) {\n    //                     if (IsUndefined(repls[key][distkey])) {\n    //                         repls[key][distkey] = sosm[distkey];\n    //                     } else {\n    //                         const rplm = repls[key][distkey];\n    //                         for (let i = 0; i < rplm.length; i++) {\n    //                             if (!sosm[distkey].contains(rplm[i])) {\n    //                                 sosm[distkey].push(rplm[i]);\n    //                             }\n    //                         }\n    //                     }\n    //                 }\n    //             }\n    //         }\n    //     }\n    // }\n    /* first we check that this ingredient doesn't already have a pre-computed substitution mapping */\n    // const repls = checkPantryCache(ing, pantry);\n    // if (!Any(repls)) {\n    //     return repls;\n    // }\n    /* We didn't have any cached substitution maps, so we'll scan for some. */\n    const availableSubs = SubstituteService_1.fs2(ing, pantry, universe);\n    /* update substitution cache */\n    // updateSubCache(availableSubs);\n    return availableSubs;\n}\n/* Returns whether a given drink matches our search criteria */\nfunction evaluateDrink(drink, pantry, universe) {\n    /* Reduce the pantry to only supplied supersets */\n    pantry = collapseZeros(pantry, universe);\n    pantry = flattenInventoryTree(pantry);\n    const pantryIds = pantry.map(x => x.id);\n    const evaluationObject = {\n        is_exact: false,\n        name: drink.Name,\n        id: drink.DrinkId,\n        substitutions: {},\n        optionals: [],\n        drink: drink,\n        missing: [],\n        is_valid: true,\n        anchor: '',\n    };\n    for (let i = 0; i < drink.Ingredients.length; i++) {\n        const ing = drink.Ingredients[i];\n        const optional = ingredientRequireChecker(ing);\n        if (!optional) {\n            /* we need this ingredient according to our criteria, so check if it is in our panrty */\n            const preferenceInPanrty = pantryIds.contains(ing.IngredientId);\n            const baseInPantry = pantryIds.contains(ing.PreferenceFor);\n            const inPantry = preferenceInPanrty || baseInPantry;\n            if (!inPantry) {\n                if (!SearchObject_1.SearchObject.ConsiderSubstitutions) {\n                    evaluationObject.is_valid = false;\n                    evaluationObject.missing.push(ing);\n                    // return evaluationObject;\n                }\n                else {\n                    /* We are considering substitutions, so we will attempt to find an available sub from our pantry */\n                    const sub = findSubstitution(ing, pantry, universe);\n                    if (sub.any) {\n                        evaluationObject.substitutions[ing.IngredientId] = sub.subs; /* Substitution was available, we add it to out mapping */\n                        // evaluationObject.substitutions[ing.IngredientId] = sub.IngredientId; /* Substitution was available, we add it to out mapping */\n                    }\n                    else {\n                        /* No substitution could be found for this mandatory object, so we fail early */\n                        evaluationObject.is_valid = false;\n                        evaluationObject.missing.push(ing);\n                        // return evaluationObject;\n                    }\n                }\n            }\n        }\n        else {\n            evaluationObject.optionals.push(ing); /* We make note of items that are optional so we can inform the user when they request the drink recipe */\n        }\n    }\n    evaluationObject.is_exact = Object.keys(evaluationObject.substitutions).length === 0;\n    evaluationObject.anchor = NavigationService_1.makeNavForDrink(evaluationObject);\n    return evaluationObject;\n}\nfunction calculateDrinks(pantry, drinkUniverse, ingredientUniverse) {\n    const resultObj = {\n        exact: [],\n        substitutes: [],\n        invalid: [],\n    };\n    drinkUniverse.forEach((x) => {\n        const evalobj = evaluateDrink(x, pantry, ingredientUniverse);\n        if (evalobj.is_valid) {\n            if (evalobj.is_exact) {\n                resultObj.exact.push(evalobj);\n            }\n            else {\n                resultObj.substitutes.push(evalobj);\n            }\n        }\n        else {\n            resultObj.invalid.push(evalobj);\n        }\n    });\n    return resultObj;\n}\nexports.calculateDrinks = calculateDrinks;\nfunction getDrinksForIngredient(ingredient, ingredientUniverse, drinkUniverse, subtypes = true) {\n    const ids = [];\n    if (subtypes) {\n        const ing = ingredientUniverse[ingredient.id];\n        ITree_1.DFS(ing, (n) => {\n            ids.push(n.id);\n        });\n    }\n    else {\n        ids.push(ingredient.id);\n    }\n    const ret = drinkUniverse.filter(x => x.Ingredients.any(y => ids.contains(y.IngredientId)));\n    return ret;\n}\nexports.getDrinksForIngredient = getDrinksForIngredient;\nfunction constructDrinks(jdrinks) {\n    const ret = jdrinks;\n    return ret;\n}\nexports.constructDrinks = constructDrinks;\n"
    },
    {
      "id": 14,
      "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/GlassService.ts",
      "name": "./services/GlassService.ts",
      "index": 40,
      "index2": 36,
      "size": 589,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "issuer": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
      "issuerId": 49,
      "issuerName": "./main.ts",
      "issuerPath": [
        {
          "id": 49,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
          "name": "./main.ts",
          "profile": {
            "factory": 58,
            "building": 1843
          }
        }
      ],
      "profile": {
        "factory": 83,
        "building": 1193,
        "dependencies": 637
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 5,
          "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/SVGService.ts",
          "module": "./services/SVGService.ts",
          "moduleName": "./services/SVGService.ts",
          "type": "cjs require",
          "userRequest": "./GlassService",
          "loc": "14:23-48"
        },
        {
          "moduleId": 49,
          "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
          "module": "./main.ts",
          "moduleName": "./main.ts",
          "type": "cjs require",
          "userRequest": "./services/GlassService",
          "loc": "19:23-57"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 1,
      "source": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst IGlass_1 = require(\"../models/IGlass\");\nfunction constructGlasses(jdrinks) {\n    const ret = jdrinks.map((x) => x.Glass).filter((v, i, s) => { return s.indexOf(v) === i; }).sort();\n    return ret;\n}\nexports.constructGlasses = constructGlasses;\nfunction GlassString2Glass(gstring) {\n    const gs = IGlass_1.Glasses.filter(x => x.Name.toLocaleLowerCase() === gstring.toLocaleLowerCase());\n    if (gs.length > 0) {\n        return gs[0];\n    }\n    return null;\n}\nexports.GlassString2Glass = GlassString2Glass;\n"
    },
    {
      "id": 15,
      "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/models/SelectedDrinkObject.ts",
      "name": "./models/SelectedDrinkObject.ts",
      "index": 34,
      "index2": 30,
      "size": 240,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "issuer": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
      "issuerId": 49,
      "issuerName": "./main.ts",
      "issuerPath": [
        {
          "id": 49,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
          "name": "./main.ts",
          "profile": {
            "factory": 58,
            "building": 1843
          }
        }
      ],
      "profile": {
        "factory": 83,
        "building": 1193,
        "dependencies": 637
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 8,
          "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DrinkDisplayService.ts",
          "module": "./services/DrinkDisplayService.ts",
          "moduleName": "./services/DrinkDisplayService.ts",
          "type": "cjs require",
          "userRequest": "../models/SelectedDrinkObject",
          "loc": "5:30-70"
        },
        {
          "moduleId": 49,
          "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
          "module": "./main.ts",
          "moduleName": "./main.ts",
          "type": "cjs require",
          "userRequest": "./models/SelectedDrinkObject",
          "loc": "24:30-69"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 1,
      "source": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst SelectedDrinkObject = {\n    Drink: null,\n    Optionals: [],\n    Substitutions: {},\n    Builder: false,\n};\nexports.SelectedDrinkObject = SelectedDrinkObject;\n"
    },
    {
      "id": 16,
      "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/utils/number.js",
      "name": "../node_modules/mathjs/lib/utils/number.js",
      "index": 18,
      "index2": 10,
      "size": 16956,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "issuer": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/utils/string.js",
      "issuerId": 28,
      "issuerName": "../node_modules/mathjs/lib/utils/string.js",
      "issuerPath": [
        {
          "id": 49,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
          "name": "./main.ts",
          "profile": {
            "factory": 58,
            "building": 1843
          }
        },
        {
          "id": 18,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DisplayService.ts",
          "name": "./services/DisplayService.ts",
          "profile": {
            "factory": 83,
            "building": 1193,
            "dependencies": 637
          }
        },
        {
          "id": 8,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DrinkDisplayService.ts",
          "name": "./services/DrinkDisplayService.ts",
          "profile": {
            "factory": 735,
            "building": 523,
            "dependencies": 1
          }
        },
        {
          "id": 46,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/MathService.ts",
          "name": "./services/MathService.ts",
          "profile": {
            "factory": 394,
            "building": 17
          }
        },
        {
          "id": 29,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/function/string/format.js",
          "name": "../node_modules/mathjs/lib/function/string/format.js",
          "profile": {
            "factory": 54,
            "building": 107
          }
        },
        {
          "id": 28,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/utils/string.js",
          "name": "../node_modules/mathjs/lib/utils/string.js",
          "profile": {
            "factory": 7,
            "building": 13
          }
        }
      ],
      "profile": {
        "factory": 32,
        "building": 6,
        "dependencies": 1
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 28,
          "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/utils/string.js",
          "module": "../node_modules/mathjs/lib/utils/string.js",
          "moduleName": "../node_modules/mathjs/lib/utils/string.js",
          "type": "cjs require",
          "userRequest": "./number",
          "loc": "5:19-38"
        },
        {
          "moduleId": 42,
          "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/core/typed.js",
          "module": "../node_modules/mathjs/lib/core/typed.js",
          "moduleName": "../node_modules/mathjs/lib/core/typed.js",
          "type": "cjs require",
          "userRequest": "./../utils/number",
          "loc": "7:13-41"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 6,
      "source": "'use strict';\n\nvar objectUtils = require('./object');\n/**\n * @typedef {{sign: '+' | '-' | '', coefficients: number[], exponent: number}} SplitValue\n */\n\n/**\n * Test whether value is a number\n * @param {*} value\n * @return {boolean} isNumber\n */\n\n\nexports.isNumber = function (value) {\n  return typeof value === 'number';\n};\n/**\n * Check if a number is integer\n * @param {number | boolean} value\n * @return {boolean} isInteger\n */\n\n\nexports.isInteger = function (value) {\n  if (typeof value === 'boolean') {\n    return true;\n  }\n\n  return isFinite(value) ? value === Math.round(value) : false; // Note: we use ==, not ===, as we can have Booleans as well\n};\n/**\n * Calculate the sign of a number\n * @param {number} x\n * @returns {*}\n */\n\n\nexports.sign = Math.sign || function (x) {\n  if (x > 0) {\n    return 1;\n  } else if (x < 0) {\n    return -1;\n  } else {\n    return 0;\n  }\n};\n/**\n * Convert a number to a formatted string representation.\n *\n * Syntax:\n *\n *    format(value)\n *    format(value, options)\n *    format(value, precision)\n *    format(value, fn)\n *\n * Where:\n *\n *    {number} value   The value to be formatted\n *    {Object} options An object with formatting options. Available options:\n *                     {string} notation\n *                         Number notation. Choose from:\n *                         'fixed'          Always use regular number notation.\n *                                          For example '123.40' and '14000000'\n *                         'exponential'    Always use exponential notation.\n *                                          For example '1.234e+2' and '1.4e+7'\n *                         'engineering'    Always use engineering notation.\n *                                          For example '123.4e+0' and '14.0e+6'\n *                         'auto' (default) Regular number notation for numbers\n *                                          having an absolute value between\n *                                          `lowerExp` and `upperExp` bounds, and\n *                                          uses exponential notation elsewhere.\n *                                          Lower bound is included, upper bound\n *                                          is excluded.\n *                                          For example '123.4' and '1.4e7'.\n *                     {number} precision   A number between 0 and 16 to round\n *                                          the digits of the number.\n *                                          In case of notations 'exponential',\n *                                          'engineering', and 'auto',\n *                                          `precision` defines the total\n *                                          number of significant digits returned.\n *                                          In case of notation 'fixed',\n *                                          `precision` defines the number of\n *                                          significant digits after the decimal\n *                                          point.\n *                                          `precision` is undefined by default,\n *                                          not rounding any digits.\n *                     {number} lowerExp    Exponent determining the lower boundary\n *                                          for formatting a value with an exponent\n *                                          when `notation='auto`.\n *                                          Default value is `-3`.\n *                     {number} upperExp    Exponent determining the upper boundary\n *                                          for formatting a value with an exponent\n *                                          when `notation='auto`.\n *                                          Default value is `5`.\n *    {Function} fn    A custom formatting function. Can be used to override the\n *                     built-in notations. Function `fn` is called with `value` as\n *                     parameter and must return a string. Is useful for example to\n *                     format all values inside a matrix in a particular way.\n *\n * Examples:\n *\n *    format(6.4)                                        // '6.4'\n *    format(1240000)                                    // '1.24e6'\n *    format(1/3)                                        // '0.3333333333333333'\n *    format(1/3, 3)                                     // '0.333'\n *    format(21385, 2)                                   // '21000'\n *    format(12.071, {notation: 'fixed'})                // '12'\n *    format(2.3,    {notation: 'fixed', precision: 2})  // '2.30'\n *    format(52.8,   {notation: 'exponential'})          // '5.28e+1'\n *    format(12345678, {notation: 'engineering'})        // '12.345678e+6'\n *\n * @param {number} value\n * @param {Object | Function | number} [options]\n * @return {string} str The formatted value\n */\n\n\nexports.format = function (value, options) {\n  if (typeof options === 'function') {\n    // handle format(value, fn)\n    return options(value);\n  } // handle special cases\n\n\n  if (value === Infinity) {\n    return 'Infinity';\n  } else if (value === -Infinity) {\n    return '-Infinity';\n  } else if (isNaN(value)) {\n    return 'NaN';\n  } // default values for options\n\n\n  var notation = 'auto';\n  var precision;\n\n  if (options) {\n    // determine notation from options\n    if (options.notation) {\n      notation = options.notation;\n    } // determine precision from options\n\n\n    if (exports.isNumber(options)) {\n      precision = options;\n    } else if (exports.isNumber(options.precision)) {\n      precision = options.precision;\n    }\n  } // handle the various notations\n\n\n  switch (notation) {\n    case 'fixed':\n      return exports.toFixed(value, precision);\n\n    case 'exponential':\n      return exports.toExponential(value, precision);\n\n    case 'engineering':\n      return exports.toEngineering(value, precision);\n\n    case 'auto':\n      // TODO: clean up some day. Deprecated since: 2018-01-24\n      // @deprecated upper and lower are replaced with upperExp and lowerExp since v4.0.0\n      if (options && options.exponential && (options.exponential.lower !== undefined || options.exponential.upper !== undefined)) {\n        var fixedOptions = objectUtils.map(options, function (x) {\n          return x;\n        });\n        fixedOptions.exponential = undefined;\n\n        if (options.exponential.lower !== undefined) {\n          fixedOptions.lowerExp = Math.round(Math.log(options.exponential.lower) / Math.LN10);\n        }\n\n        if (options.exponential.upper !== undefined) {\n          fixedOptions.upperExp = Math.round(Math.log(options.exponential.upper) / Math.LN10);\n        }\n\n        console.warn('Deprecation warning: Formatting options exponential.lower and exponential.upper ' + '(minimum and maximum value) ' + 'are replaced with exponential.lowerExp and exponential.upperExp ' + '(minimum and maximum exponent) since version 4.0.0. ' + 'Replace ' + JSON.stringify(options) + ' with ' + JSON.stringify(fixedOptions));\n        return exports.toPrecision(value, precision, fixedOptions);\n      }\n\n      return exports.toPrecision(value, precision, options && options) // remove trailing zeros after the decimal point\n      .replace(/((\\.\\d*?)(0+))($|e)/, function () {\n        var digits = arguments[2];\n        var e = arguments[4];\n        return digits !== '.' ? digits + e : e;\n      });\n\n    default:\n      throw new Error('Unknown notation \"' + notation + '\". ' + 'Choose \"auto\", \"exponential\", or \"fixed\".');\n  }\n};\n/**\n * Split a number into sign, coefficients, and exponent\n * @param {number | string} value\n * @return {SplitValue}\n *              Returns an object containing sign, coefficients, and exponent\n */\n\n\nexports.splitNumber = function (value) {\n  // parse the input value\n  var match = String(value).toLowerCase().match(/^0*?(-?)(\\d+\\.?\\d*)(e([+-]?\\d+))?$/);\n\n  if (!match) {\n    throw new SyntaxError('Invalid number ' + value);\n  }\n\n  var sign = match[1];\n  var digits = match[2];\n  var exponent = parseFloat(match[4] || '0');\n  var dot = digits.indexOf('.');\n  exponent += dot !== -1 ? dot - 1 : digits.length - 1;\n  var coefficients = digits.replace('.', '') // remove the dot (must be removed before removing leading zeros)\n  .replace(/^0*/, function (zeros) {\n    // remove leading zeros, add their count to the exponent\n    exponent -= zeros.length;\n    return '';\n  }).replace(/0*$/, '') // remove trailing zeros\n  .split('').map(function (d) {\n    return parseInt(d);\n  });\n\n  if (coefficients.length === 0) {\n    coefficients.push(0);\n    exponent++;\n  }\n\n  return {\n    sign: sign,\n    coefficients: coefficients,\n    exponent: exponent\n  };\n};\n/**\n * Format a number in engineering notation. Like '1.23e+6', '2.3e+0', '3.500e-3'\n * @param {number | string} value\n * @param {number} [precision]        Optional number of significant figures to return.\n */\n\n\nexports.toEngineering = function (value, precision) {\n  if (isNaN(value) || !isFinite(value)) {\n    return String(value);\n  }\n\n  var rounded = exports.roundDigits(exports.splitNumber(value), precision);\n  var e = rounded.exponent;\n  var c = rounded.coefficients; // find nearest lower multiple of 3 for exponent\n\n  var newExp = e % 3 === 0 ? e : e < 0 ? e - 3 - e % 3 : e - e % 3;\n\n  if (exports.isNumber(precision)) {\n    // add zeroes to give correct sig figs\n    if (precision > c.length) c = c.concat(zeros(precision - c.length));\n  } else {\n    // concatenate coefficients with necessary zeros\n    var significandsDiff = e >= 0 ? e : Math.abs(newExp); // add zeros if necessary (for ex: 1e+8)\n\n    if (c.length - 1 < significandsDiff) c = c.concat(zeros(significandsDiff - (c.length - 1)));\n  } // find difference in exponents\n\n\n  var expDiff = Math.abs(e - newExp);\n  var decimalIdx = 1; // push decimal index over by expDiff times\n\n  while (--expDiff >= 0) {\n    decimalIdx++;\n  } // if all coefficient values are zero after the decimal point and precision is unset, don't add a decimal value.\n  // otherwise concat with the rest of the coefficients\n\n\n  var decimals = c.slice(decimalIdx).join('');\n  var decimalVal = exports.isNumber(precision) && decimals.length || decimals.match(/[1-9]/) ? '.' + decimals : '';\n  var str = c.slice(0, decimalIdx).join('') + decimalVal + 'e' + (e >= 0 ? '+' : '') + newExp.toString();\n  return rounded.sign + str;\n};\n/**\n * Format a number with fixed notation.\n * @param {number | string} value\n * @param {number} [precision=undefined]  Optional number of decimals after the\n *                                        decimal point. null by default.\n */\n\n\nexports.toFixed = function (value, precision) {\n  if (isNaN(value) || !isFinite(value)) {\n    return String(value);\n  }\n\n  var splitValue = exports.splitNumber(value);\n  var rounded = typeof precision === 'number' ? exports.roundDigits(splitValue, splitValue.exponent + 1 + precision) : splitValue;\n  var c = rounded.coefficients;\n  var p = rounded.exponent + 1; // exponent may have changed\n  // append zeros if needed\n\n  var pp = p + (precision || 0);\n\n  if (c.length < pp) {\n    c = c.concat(zeros(pp - c.length));\n  } // prepend zeros if needed\n\n\n  if (p < 0) {\n    c = zeros(-p + 1).concat(c);\n    p = 1;\n  } // insert a dot if needed\n\n\n  if (p < c.length) {\n    c.splice(p, 0, p === 0 ? '0.' : '.');\n  }\n\n  return rounded.sign + c.join('');\n};\n/**\n * Format a number in exponential notation. Like '1.23e+5', '2.3e+0', '3.500e-3'\n * @param {number | string} value\n * @param {number} [precision]  Number of digits in formatted output.\n *                              If not provided, the maximum available digits\n *                              is used.\n */\n\n\nexports.toExponential = function (value, precision) {\n  if (isNaN(value) || !isFinite(value)) {\n    return String(value);\n  } // round if needed, else create a clone\n\n\n  var split = exports.splitNumber(value);\n  var rounded = precision ? exports.roundDigits(split, precision) : split;\n  var c = rounded.coefficients;\n  var e = rounded.exponent; // append zeros if needed\n\n  if (c.length < precision) {\n    c = c.concat(zeros(precision - c.length));\n  } // format as `C.CCCe+EEE` or `C.CCCe-EEE`\n\n\n  var first = c.shift();\n  return rounded.sign + first + (c.length > 0 ? '.' + c.join('') : '') + 'e' + (e >= 0 ? '+' : '') + e;\n};\n/**\n * Format a number with a certain precision\n * @param {number | string} value\n * @param {number} [precision=undefined] Optional number of digits.\n * @param {{lowerExp: number | undefined, upperExp: number | undefined}} [options]\n *                                       By default:\n *                                         lowerExp = -3 (incl)\n *                                         upper = +5 (excl)\n * @return {string}\n */\n\n\nexports.toPrecision = function (value, precision, options) {\n  if (isNaN(value) || !isFinite(value)) {\n    return String(value);\n  } // determine lower and upper bound for exponential notation.\n\n\n  var lowerExp = options && options.lowerExp !== undefined ? options.lowerExp : -3;\n  var upperExp = options && options.upperExp !== undefined ? options.upperExp : 5;\n  var split = exports.splitNumber(value);\n\n  if (split.exponent < lowerExp || split.exponent >= upperExp) {\n    // exponential notation\n    return exports.toExponential(value, precision);\n  } else {\n    var rounded = precision ? exports.roundDigits(split, precision) : split;\n    var c = rounded.coefficients;\n    var e = rounded.exponent; // append trailing zeros\n\n    if (c.length < precision) {\n      c = c.concat(zeros(precision - c.length));\n    } // append trailing zeros\n    // TODO: simplify the next statement\n\n\n    c = c.concat(zeros(e - c.length + 1 + (c.length < precision ? precision - c.length : 0))); // prepend zeros\n\n    c = zeros(-e).concat(c);\n    var dot = e > 0 ? e : 0;\n\n    if (dot < c.length - 1) {\n      c.splice(dot + 1, 0, '.');\n    }\n\n    return rounded.sign + c.join('');\n  }\n};\n/**\n * Round the number of digits of a number *\n * @param {SplitValue} split       A value split with .splitNumber(value)\n * @param {number} precision  A positive integer\n * @return {SplitValue}\n *              Returns an object containing sign, coefficients, and exponent\n *              with rounded digits\n */\n\n\nexports.roundDigits = function (split, precision) {\n  // create a clone\n  var rounded = {\n    sign: split.sign,\n    coefficients: split.coefficients,\n    exponent: split.exponent\n  };\n  var c = rounded.coefficients; // prepend zeros if needed\n\n  while (precision <= 0) {\n    c.unshift(0);\n    rounded.exponent++;\n    precision++;\n  }\n\n  if (c.length > precision) {\n    var removed = c.splice(precision, c.length - precision);\n\n    if (removed[0] >= 5) {\n      var i = precision - 1;\n      c[i]++;\n\n      while (c[i] === 10) {\n        c.pop();\n\n        if (i === 0) {\n          c.unshift(0);\n          rounded.exponent++;\n          i++;\n        }\n\n        i--;\n        c[i]++;\n      }\n    }\n  }\n\n  return rounded;\n};\n/**\n * Create an array filled with zeros.\n * @param {number} length\n * @return {Array}\n */\n\n\nfunction zeros(length) {\n  var arr = [];\n\n  for (var i = 0; i < length; i++) {\n    arr.push(0);\n  }\n\n  return arr;\n}\n/**\n * Count the number of significant digits of a number.\n *\n * For example:\n *   2.34 returns 3\n *   0.0034 returns 2\n *   120.5e+30 returns 4\n *\n * @param {number} value\n * @return {number} digits   Number of significant digits\n */\n\n\nexports.digits = function (value) {\n  return value.toExponential().replace(/e.*$/, '') // remove exponential notation\n  .replace(/^0\\.?0*|\\./, '') // remove decimal point and leading zeros\n  .length;\n};\n/**\n * Minimum number added to one that makes the result different than one\n */\n\n\nexports.DBL_EPSILON = Number.EPSILON || 2.2204460492503130808472633361816E-16;\n/**\n * Compares two floating point numbers.\n * @param {number} x          First value to compare\n * @param {number} y          Second value to compare\n * @param {number} [epsilon]  The maximum relative difference between x and y\n *                            If epsilon is undefined or null, the function will\n *                            test whether x and y are exactly equal.\n * @return {boolean} whether the two numbers are nearly equal\n*/\n\nexports.nearlyEqual = function (x, y, epsilon) {\n  // if epsilon is null or undefined, test whether x and y are exactly equal\n  if (epsilon === null || epsilon === undefined) {\n    return x === y;\n  }\n\n  if (x === y) {\n    return true;\n  } // NaN\n\n\n  if (isNaN(x) || isNaN(y)) {\n    return false;\n  } // at this point x and y should be finite\n\n\n  if (isFinite(x) && isFinite(y)) {\n    // check numbers are very close, needed when comparing numbers near zero\n    var diff = Math.abs(x - y);\n\n    if (diff < exports.DBL_EPSILON) {\n      return true;\n    } else {\n      // use relative error\n      return diff <= Math.max(Math.abs(x), Math.abs(y)) * epsilon;\n    }\n  } // Infinite and Number or negative Infinite and positive Infinite cases\n\n\n  return false;\n};"
    },
    {
      "id": 17,
      "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/Utils.ts",
      "name": "./services/Utils.ts",
      "index": 8,
      "index2": 5,
      "size": 368,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "issuer": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/NavigationService.ts",
      "issuerId": 9,
      "issuerName": "./services/NavigationService.ts",
      "issuerPath": [
        {
          "id": 49,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
          "name": "./main.ts",
          "profile": {
            "factory": 58,
            "building": 1843
          }
        },
        {
          "id": 9,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/NavigationService.ts",
          "name": "./services/NavigationService.ts",
          "profile": {
            "factory": 83,
            "building": 1193,
            "dependencies": 637
          }
        }
      ],
      "profile": {
        "factory": 496,
        "building": 197,
        "dependencies": 1
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 9,
          "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/NavigationService.ts",
          "module": "./services/NavigationService.ts",
          "moduleName": "./services/NavigationService.ts",
          "type": "cjs require",
          "userRequest": "./Utils",
          "loc": "3:16-34"
        },
        {
          "moduleId": 23,
          "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/SubstituteService.ts",
          "module": "./services/SubstituteService.ts",
          "moduleName": "./services/SubstituteService.ts",
          "type": "cjs require",
          "userRequest": "./Utils",
          "loc": "4:16-34"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 2,
      "source": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nrequire(\"../extensions/object.extensions\");\n// -- Utility Functions --\\\\\nfunction Any(obj) {\n    return Object.entries(obj).length === 0 && obj.constructor === Object;\n}\nexports.Any = Any;\nfunction IsUndefined(x) {\n    return (typeof x) === 'undefined';\n}\nexports.IsUndefined = IsUndefined;\n"
    },
    {
      "id": 18,
      "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DisplayService.ts",
      "name": "./services/DisplayService.ts",
      "index": 5,
      "index2": 47,
      "size": 13827,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "issuer": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
      "issuerId": 49,
      "issuerName": "./main.ts",
      "issuerPath": [
        {
          "id": 49,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
          "name": "./main.ts",
          "profile": {
            "factory": 58,
            "building": 1843
          }
        }
      ],
      "profile": {
        "factory": 83,
        "building": 1193,
        "dependencies": 637
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 9,
          "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/NavigationService.ts",
          "module": "./services/NavigationService.ts",
          "moduleName": "./services/NavigationService.ts",
          "type": "cjs require",
          "userRequest": "./DisplayService",
          "loc": "4:25-52"
        },
        {
          "moduleId": 49,
          "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
          "module": "./main.ts",
          "moduleName": "./main.ts",
          "type": "cjs require",
          "userRequest": "./services/DisplayService",
          "loc": "15:25-61"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 1,
      "source": "\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst CategoryService_1 = require(\"./CategoryService\");\nexports.makeCategoryId = CategoryService_1.makeCategoryId;\nconst Settings_1 = require(\"../models/Settings\");\nconst NavigationService_1 = require(\"./NavigationService\");\nconst ITree_1 = require(\"../models/ITree\");\nconst DrinkService_1 = require(\"./DrinkService\");\nconst SearchObject_1 = require(\"../models/SearchObject\");\nconst Globals_1 = require(\"./Globals\");\nconst SVGService_1 = require(\"./SVGService\");\nconst StorageService_1 = require(\"./StorageService\");\nconst BuilderService_1 = require(\"./BuilderService\");\nconst DrinkDisplayService_1 = require(\"./DrinkDisplayService\");\nconst QRCodeService_1 = require(\"./QRCodeService\");\n/* Sidebar drawing */\nlet drinkListExpanded = false;\nfunction toggleDrinkList() {\n    drinkListExpanded = !drinkListExpanded;\n    if (drinkListExpanded) {\n        $('#drinkslistcontainer').addClass('collapse');\n        $('#drinklistarrow').text(Settings_1.Settings.symbols.downsymbol);\n    }\n    else {\n        $('#drinkslistcontainer').removeClass('collapse');\n        $('#drinklistarrow').text(Settings_1.Settings.symbols.upsymbol);\n    }\n    Settings_1.Settings.sidebar.expanded = drinkListExpanded;\n}\nexports.toggleDrinkList = toggleDrinkList;\nfunction populateCategories(categories) {\n    categories.forEach((x) => {\n        const catheader = $(`<div id='drink_category_header_${x.id}'>`).addClass('drink_category_header').append('<h3>').text(x.name);\n        const l = catheader.append(`<ul id='drink_category_list_${x.id}'>`);\n        $('#drinkslistcontainer').append(l);\n    });\n}\nfunction populateDrinksMenu(universe) {\n    function whichList(cat) {\n        const ul = $('#drink_category_list_' + CategoryService_1.makeCategoryId(cat));\n        return ul;\n    }\n    universe.forEach((x) => {\n        const a = $('<a>').attr('href', 'drinks.html#' + x.DrinkId).addClass('sidelink');\n        const obj = $('<li>').attr('id', 'li_drink_' + x.DrinkId).append(a);\n        a.text(x.Name);\n        const ul = whichList(x.Category);\n        ul.append(obj);\n    });\n}\nfunction DrawSidebar(categories, drinks) {\n    populateCategories(categories);\n    populateDrinksMenu(drinks);\n    toggleDrinkList();\n}\nexports.DrawSidebar = DrawSidebar;\n/* Ingredient Display */\nfunction populateDrinksWithThisIngredient(drinks) {\n    const drinkListElem = $('#withIngredient');\n    drinkListElem.empty();\n    if (!drinks.any()) {\n        drinkListElem.text('No drinks with this ingredient could be found. Sorry!');\n    }\n    for (let i = 0; i < drinks.length; i++) {\n        const drink = drinks[i];\n        const li = $('<li>').addClass('litext');\n        const sp = $('<a>').attr('href', 'drinks.html#' + drink.DrinkId).text(drink.Name);\n        li.append(sp);\n        drinkListElem.append(li);\n    }\n}\nfunction displayIngredient(ingredient, ingredientUniverse, ingredientUniverseFlat, drinkUniverse) {\n    $('#ingredientHeader').text(ingredient.name);\n    function findBranch(ingredient) {\n        let found = false;\n        let branch = null;\n        for (let i = 0; i < ingredientUniverse.length; i++) {\n            const tbranch = ingredientUniverse[i];\n            if (!found) {\n                ITree_1.DFS(tbranch, (n) => {\n                    if (n.id === ingredient.id) {\n                        found = true;\n                        branch = tbranch;\n                    }\n                });\n            }\n        }\n        return branch;\n    }\n    const branch = findBranch(ingredient);\n    $('#tree').empty();\n    const ns = ITree_1.NoSiblings(branch, ingredient);\n    const TreeOptions = {\n        CollapseDepth: 99,\n        ShowCheckBox: false,\n        ShowCollapse: false,\n        Highlight: [ingredient.id],\n    };\n    populateIngredientTree([ns], SearchObject_1.SearchObject, TreeOptions);\n    const drinks = DrinkService_1.getDrinksForIngredient(ingredient, ingredientUniverseFlat, drinkUniverse, true);\n    populateDrinksWithThisIngredient(drinks);\n    SVGService_1.DrawIngredientSVG(ingredient, ingredientUniverse);\n}\nexports.displayIngredient = displayIngredient;\n/* Ingredient Tree Display */\nfunction clearPantry() {\n    $('#your_pantry').empty();\n}\nfunction EliminatePantry() {\n    clearPantry();\n    StorageService_1.StorageClearPantry();\n    SearchObject_1.SearchObject.Inventory.clear();\n    SearchObject_1.SearchObject._InventoryIds.clear();\n}\nexports.EliminatePantry = EliminatePantry;\nfunction removeFromYourPantry(ing) {\n    for (let i = 0; i < SearchObject_1.SearchObject.Inventory.length; i++) {\n        if (SearchObject_1.SearchObject.Inventory[i].id === ing.id) {\n            // if found, kill it. break.\n            StorageService_1.StorageRemovePantryItem(SearchObject_1.SearchObject.Inventory[i]);\n            SearchObject_1.SearchObject.Inventory.splice(i, 1);\n            SearchObject_1.SearchObject._InventoryIds.splice(i, 1);\n            return true;\n        }\n    }\n    return false;\n}\nfunction redrawPantry() {\n    clearPantry();\n    SearchObject_1.SearchObject.Inventory.forEach((x) => {\n        const button = $('<button>').addClass('pantrytext').addClass('pantrybutton').attr('id', 'pantrybutton_' + x.id).addClass('btn').addClass('btn-xs').text('x').on('click', function () {\n            removeFromYourPantry(x);\n            redrawPantry();\n        });\n        const label = $('<label>').addClass('pantrytext').attr('for', 'pantrybutton_' + x).addClass('pantrylabel').text(x.name);\n        const span = $('<span>').addClass('pantryspan').append(label).append(button);\n        $('#your_pantry').append(span);\n    });\n}\nfunction populateIngredientTree(branches, SearchObject, options = Settings_1.Settings.tree) {\n    redrawPantry();\n    //  clone tree settings\n    options = Object.assign({}, Settings_1.Settings.tree, options);\n    const page = NavigationService_1.findPage().toLocaleLowerCase();\n    if (page !== NavigationService_1.PageTypes.Pantry && page !== NavigationService_1.PageTypes.Ingredient) {\n        return;\n    }\n    function fontCollapseF(depth) {\n        const fs = (options.FontStart);\n        const fc = (options.FontCollapse);\n        const collapse = Math.max(fs - (depth * fc), 12);\n        return collapse;\n    }\n    function ingOncheck(node) {\n        function closure() {\n            // scan yourpanty for this item\n            const canAdd = !removeFromYourPantry(node);\n            // otherwise, add it.\n            if (canAdd) {\n                StorageService_1.StorageAddPantryItem(node);\n                SearchObject.Inventory.push(node);\n                SearchObject._InventoryIds.push(node.id);\n            }\n            // add pantry elements\n            redrawPantry();\n        }\n        return closure;\n    }\n    function makeLabel(node, depth) {\n        const hdiv = $('<div>').attr('id', 'hdiv_' + node.id).addClass('ingredientDiv');\n        const label = $('<label>').addClass('ingredientLabel').css('font-size', fontCollapseF(depth) + 'px');\n        if (options.Highlight.contains(node.id)) {\n            label.addClass('treeMark');\n        }\n        hdiv.append(label);\n        const a = $('<a>').attr('href', 'ingredient.html#' + node.id).text((node.name)).css('margin-left', ((options.DepthMult) * depth) + 'px');\n        const div2 = $('<div>').append(a);\n        // options gets an override\n        if (options.ShowCheckBox) {\n            const check = $('<input>').addClass('ingredientlayout').attr('type', 'checkbox').on('change', ingOncheck(node));\n            if (SearchObject._InventoryIds.contains(node.id)) {\n                check.attr('checked', 'true');\n            }\n            div2.append(check);\n        }\n        const appender = $('<div>').attr('id', 'appender_' + node.id);\n        if (depth >= (options.CollapseDepth)) {\n            appender.addClass('collapse');\n        }\n        if (node.children.length > 0) {\n            const expander = $('<button>').addClass('btn').addClass('btn-md').text(depth >= (options.CollapseDepth) - 1 ? Settings_1.Settings.symbols.upsymbol : Settings_1.Settings.symbols.downsymbol).on('click', function () {\n                if (expander.text() === Settings_1.Settings.symbols.upsymbol) {\n                    expander.text(Settings_1.Settings.symbols.downsymbol);\n                    appender.removeClass('collapse');\n                }\n                else {\n                    expander.text(Settings_1.Settings.symbols.upsymbol);\n                    appender.addClass('collapse');\n                }\n            });\n            div2.append(expander);\n        }\n        label.append(div2);\n        return [hdiv, appender];\n    }\n    const root = {\n        id: -1,\n        distance: -1,\n        name: 'Pantry',\n        children: branches,\n    };\n    function df(node, depth, accumulator) {\n        const l = makeLabel(node, depth);\n        const label = l[0];\n        const appender = l[1];\n        label.append(appender);\n        accumulator.append(label);\n        return appender;\n    }\n    ITree_1.DFS2(root, df, $('#tree'));\n}\nexports.populateIngredientTree = populateIngredientTree;\nfunction DrawIngredient() {\n    const an = parseInt(location.hash.substring(1));\n    if (isNaN(an)) {\n        console.error('failed to parse hash fragment ingredient id for value: ' + location.hash.substring(1));\n        return;\n    }\n    const ingredient = Globals_1.Globals.IngredientFlat[an];\n    displayIngredient(ingredient, Globals_1.Globals.ingredients, Globals_1.Globals.IngredientFlat, Globals_1.Globals.Drinks);\n    window.document.title = ingredient.name + ' - Nondari';\n}\nexports.DrawIngredient = DrawIngredient;\n/* Pantry Display */\nfunction showYourDrinks(drinksResults) {\n    function populateDrinkList(listObject, drinks) {\n        function encodeDrink(drink) {\n            return 'drinks.html?' + drink.anchor;\n        }\n        drinks.forEach((x) => {\n            const li = $('<li>').addClass('drinkFound');\n            const texts = x.drink.Ingredients.filter(x => x.Unit === 'oz').map(x => x.IngredientName).join(', ');\n            const a = $('<a>').attr('href', encodeDrink(x)).text(`${x.name} [${texts}]`); // x.name);\n            li.append(a);\n            listObject.append(li);\n        });\n    }\n    $('#your_drinks').removeClass('collapse');\n    $('#drinks_em').empty();\n    $('#drinks_sub').empty();\n    if (drinksResults && (drinksResults.exact.length > 0 || drinksResults.substitutes.length > 0)) { // not null and at least one set is defined.\n        $('#no_drinks_found').addClass('collapse');\n        $('#drinks_available').removeClass('collapse');\n        if (drinksResults.exact && drinksResults.exact.length > 0) {\n            populateDrinkList($('#drinks_em'), drinksResults.exact);\n        }\n        else {\n            const exactspn = $('<span>').text('Sorry, no exact match drinks could be found');\n            $('#drinks_em').append(exactspn);\n        }\n        if (drinksResults.substitutes.length > 0) {\n            populateDrinkList($('#drinks_sub'), drinksResults.substitutes);\n        }\n        else if (SearchObject_1.SearchObject.ConsiderSubstitutions) {\n            const subspan = $('<span>').text('Sorry, no substite drinks could be found');\n            $('#drinks_sub').append(subspan);\n        }\n    }\n    else {\n        $('#no_drinks_found').removeClass('collapse');\n        $('#drinks_available').addClass('collapse');\n    }\n}\nexports.showYourDrinks = showYourDrinks;\n/* Builder Display */\nfunction DrawBuilder() {\n    $('#qr_limit_max').text(QRCodeService_1.QRDataLimit_AlphaNumeric);\n    const sel_glass = $('#selectGlass');\n    const sel_cat = $('#selectCategory');\n    sel_glass.empty();\n    Globals_1.Globals.Glasses.forEach((x) => {\n        const opt = $('<option>').attr('id', `select_glass_${x.toLocaleLowerCase()}`);\n        opt.val(String(x));\n        opt.text(String(x));\n        sel_glass.append(opt);\n    });\n    Globals_1.Globals.Categories.forEach((x) => {\n        const opt = $('<option>').attr('id', `select_glass_${x.name.toLocaleLowerCase()}`);\n        opt.val(String(x.id));\n        opt.text(String(x.name));\n        sel_cat.append(opt);\n    });\n}\nexports.DrawBuilder = DrawBuilder;\n/* Custom Display */\nfunction DrawCustom() {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (window.location.search.any()) {\n            const drink = BuilderService_1.DecodeDrink(window.location.toString());\n            console.log(drink);\n            const sdo = {\n                Builder: false,\n                Drink: drink,\n                Optionals: [],\n                Substitutions: {},\n            };\n            DrinkDisplayService_1.DisplayDrink(sdo);\n            DisplayQR(window.location.toString());\n            const title = drink.Name + ' - Nondari';\n            console.log(title);\n            document.title = title;\n            console.log(window.document.title);\n        }\n    });\n}\nexports.DrawCustom = DrawCustom;\nfunction DisplayQR(qrdata) {\n    // console.log(qrdata);\n    // const qrcode = new QRCode(document.getElementById('qrcode'), {\n    //     text: qrdata,\n    //     width: 128,\n    //     height: 128,\n    //     colorDark : '#000000',\n    //     colorLight : '#ffffff',\n    //     correctLevel : QRCode.CorrectLevel.L\n    // });\n}\n"
    },
    {
      "id": 19,
      "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/CategoryService.ts",
      "name": "./services/CategoryService.ts",
      "index": 4,
      "index2": 3,
      "size": 727,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "issuer": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
      "issuerId": 49,
      "issuerName": "./main.ts",
      "issuerPath": [
        {
          "id": 49,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
          "name": "./main.ts",
          "profile": {
            "factory": 58,
            "building": 1843
          }
        }
      ],
      "profile": {
        "factory": 83,
        "building": 1193,
        "dependencies": 637
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 18,
          "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DisplayService.ts",
          "module": "./services/DisplayService.ts",
          "moduleName": "./services/DisplayService.ts",
          "type": "cjs require",
          "userRequest": "./CategoryService",
          "loc": "11:26-54"
        },
        {
          "moduleId": 49,
          "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
          "module": "./main.ts",
          "moduleName": "./main.ts",
          "type": "cjs require",
          "userRequest": "./services/CategoryService",
          "loc": "14:26-63"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 1,
      "source": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction makeCategoryId(c) {\n    return c.replace(/ /g, '_');\n}\nexports.makeCategoryId = makeCategoryId;\nfunction constructCategories(jdrinks) {\n    const carr = [];\n    const catids = [];\n    const cats = [];\n    for (let i = 0; i < jdrinks.length; i++) {\n        const cid = makeCategoryId(jdrinks[i].Category);\n        if (!catids.contains(cid)) {\n            const cat = {\n                id: cid,\n                name: jdrinks[i].Category\n            };\n            cats.push(cat);\n            catids.push(cat.id);\n        }\n    }\n    cats.sort().forEach(x => carr.push(x));\n    return carr;\n}\nexports.constructCategories = constructCategories;\n"
    },
    {
      "id": 20,
      "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/extensions/object.extensions.ts",
      "name": "./extensions/object.extensions.ts",
      "index": 2,
      "index2": 1,
      "size": 77,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "issuer": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
      "issuerId": 49,
      "issuerName": "./main.ts",
      "issuerPath": [
        {
          "id": 49,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
          "name": "./main.ts",
          "profile": {
            "factory": 58,
            "building": 1843
          }
        }
      ],
      "profile": {
        "factory": 83,
        "building": 1193,
        "dependencies": 637
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 17,
          "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/Utils.ts",
          "module": "./services/Utils.ts",
          "moduleName": "./services/Utils.ts",
          "type": "cjs require",
          "userRequest": "../extensions/object.extensions",
          "loc": "3:0-42"
        },
        {
          "moduleId": 49,
          "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
          "module": "./main.ts",
          "moduleName": "./main.ts",
          "type": "cjs require",
          "userRequest": "./extensions/object.extensions",
          "loc": "12:0-41"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 1,
      "source": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n"
    },
    {
      "id": 21,
      "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/extensions/array.extensions.ts",
      "name": "./extensions/array.extensions.ts",
      "index": 1,
      "index2": 0,
      "size": 860,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "issuer": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
      "issuerId": 49,
      "issuerName": "./main.ts",
      "issuerPath": [
        {
          "id": 49,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
          "name": "./main.ts",
          "profile": {
            "factory": 58,
            "building": 1843
          }
        }
      ],
      "profile": {
        "factory": 83,
        "building": 1193,
        "dependencies": 637
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 2,
          "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/models/ITree.ts",
          "module": "./models/ITree.ts",
          "moduleName": "./models/ITree.ts",
          "type": "cjs require",
          "userRequest": "../extensions/array.extensions",
          "loc": "3:0-41"
        },
        {
          "moduleId": 49,
          "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
          "module": "./main.ts",
          "moduleName": "./main.ts",
          "type": "cjs require",
          "userRequest": "./extensions/array.extensions",
          "loc": "11:0-40"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 1,
      "source": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nArray.prototype.clear = function () {\n    this.length = 0;\n};\nArray.prototype.contains = function (x) {\n    return this.indexOf(x) > -1;\n};\nArray.prototype.remove = function (x) {\n    const idx = this.indexOf(x);\n    if (idx !== -1) {\n        this.splice(idx, 1);\n    }\n    return idx;\n};\nArray.prototype.removeAt = function (x) {\n    const n = parseInt(x);\n    if (isNaN(n)) {\n        throw 'Array.removeAt() takes an integer, or a integer-like string';\n    }\n    if (this.length > x) {\n        return this.splice(n, 1);\n    }\n    return undefined;\n};\nArray.prototype.any = function (func) {\n    if (!func) {\n        return this.length > 0;\n    }\n    for (let i = 0; i < this.length; i++) {\n        if (func(this[i])) {\n            return true;\n        }\n    }\n    return false;\n};\n"
    },
    {
      "id": 22,
      "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DownloadService.ts",
      "name": "./services/DownloadService.ts",
      "index": 49,
      "index2": 48,
      "size": 887,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "issuer": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
      "issuerId": 49,
      "issuerName": "./main.ts",
      "issuerPath": [
        {
          "id": 49,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
          "name": "./main.ts",
          "profile": {
            "factory": 58,
            "building": 1843
          }
        }
      ],
      "profile": {
        "factory": 83,
        "building": 1193,
        "dependencies": 637
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 49,
          "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
          "module": "./main.ts",
          "moduleName": "./main.ts",
          "type": "cjs require",
          "userRequest": "./services/DownloadService",
          "loc": "25:26-63"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 1,
      "source": "\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction DownloadMainJson() {\n    return __awaiter(this, void 0, void 0, function* () {\n        return (yield (yield fetch('/json/drinks.json')).json());\n    });\n}\nexports.DownloadMainJson = DownloadMainJson;\n"
    },
    {
      "id": 23,
      "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/SubstituteService.ts",
      "name": "./services/SubstituteService.ts",
      "index": 45,
      "index2": 42,
      "size": 2468,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "issuer": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DrinkService.ts",
      "issuerId": 13,
      "issuerName": "./services/DrinkService.ts",
      "issuerPath": [
        {
          "id": 49,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
          "name": "./main.ts",
          "profile": {
            "factory": 58,
            "building": 1843
          }
        },
        {
          "id": 13,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DrinkService.ts",
          "name": "./services/DrinkService.ts",
          "profile": {
            "factory": 83,
            "building": 1193,
            "dependencies": 637
          }
        }
      ],
      "profile": {
        "factory": 639,
        "building": 183,
        "dependencies": 1
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 13,
          "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DrinkService.ts",
          "module": "./services/DrinkService.ts",
          "moduleName": "./services/DrinkService.ts",
          "type": "cjs require",
          "userRequest": "./SubstituteService",
          "loc": "4:28-58"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 2,
      "source": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst ITree_1 = require(\"../models/ITree\");\nconst Utils_1 = require(\"./Utils\");\nfunction findIngredientById(ingid, universe) {\n    let ingredient = null;\n    for (const k in universe) {\n        ITree_1.DFS(universe[k], (n) => {\n            if (n.id === ingid) {\n                ingredient = n;\n            }\n        });\n    }\n    return ingredient;\n}\nfunction fs2(ingredient, available, universe) {\n    const replacements = {\n        any: false,\n        subs: {}\n    };\n    const realIngredient = findIngredientById(ingredient.IngredientId, universe);\n    if (!realIngredient) {\n        return replacements; // no such ingredient could be found.\n    }\n    /* check if eligible for going up */\n    if (realIngredient.distance === -1) {\n        return replacements; // This item is -1, meaning it is not eligible to be substituted by anything.\n    }\n    let ancestor = null;\n    let thisAncestor = null;\n    let mainDistance = 0;\n    let thisDistance = 0;\n    for (let i = 0; i < available.length; i++) {\n        const item = available[i];\n        /* we start over at the beginning of every ingredient check. */\n        ancestor = realIngredient;\n        thisAncestor = universe[item.id];\n        mainDistance = 0;\n        thisDistance = 0;\n        let commonAncestor = true;\n        // we go until the ancestors are common, OR until neither can go up anymore.\n        while (ancestor.id !== thisAncestor.id) {\n            if (ancestor.distance <= -1 && thisAncestor.distance <= -1) {\n                /* ancestors are not common but we can't advance any further. */\n                commonAncestor = false;\n                break;\n            }\n            if (ancestor.distance > -1) {\n                mainDistance += ancestor.distance;\n                ancestor = universe[ancestor.parent];\n            }\n            if (thisAncestor.distance > -1) {\n                thisDistance += thisAncestor.distance;\n                thisAncestor = universe[thisAncestor.parent];\n            }\n        }\n        if (commonAncestor) {\n            const dist = mainDistance + thisDistance;\n            replacements.any = true;\n            if (Utils_1.IsUndefined(replacements.subs[dist])) {\n                replacements.subs[dist] = [item.id];\n            }\n            else {\n                replacements.subs[dist].push(item.id);\n            }\n        }\n    }\n    return replacements;\n}\nexports.fs2 = fs2;\n"
    },
    {
      "id": 24,
      "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/models/WLM.ts",
      "name": "./models/WLM.ts",
      "index": 42,
      "index2": 38,
      "size": 373,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "issuer": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DrinkDisplayService.ts",
      "issuerId": 8,
      "issuerName": "./services/DrinkDisplayService.ts",
      "issuerPath": [
        {
          "id": 49,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
          "name": "./main.ts",
          "profile": {
            "factory": 58,
            "building": 1843
          }
        },
        {
          "id": 18,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DisplayService.ts",
          "name": "./services/DisplayService.ts",
          "profile": {
            "factory": 83,
            "building": 1193,
            "dependencies": 637
          }
        },
        {
          "id": 8,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DrinkDisplayService.ts",
          "name": "./services/DrinkDisplayService.ts",
          "profile": {
            "factory": 735,
            "building": 523,
            "dependencies": 1
          }
        }
      ],
      "profile": {
        "factory": 394,
        "building": 17
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 8,
          "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DrinkDisplayService.ts",
          "module": "./services/DrinkDisplayService.ts",
          "moduleName": "./services/DrinkDisplayService.ts",
          "type": "cjs require",
          "userRequest": "../models/WLM",
          "loc": "8:14-38"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 3,
      "source": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst WeirdnessLevelMap = {\n    '0': 'Specific Variety',\n    '1': 'Barely different',\n    '2': 'Minor differences',\n    '3': 'Noticable differences',\n    '4': 'Large differences',\n    '5': 'Quite different',\n    '6': 'Probably a different drink'\n};\nexports.WeirdnessLevelMap = WeirdnessLevelMap;\n"
    },
    {
      "id": 25,
      "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/models/IGlass.ts",
      "name": "./models/IGlass.ts",
      "index": 41,
      "index2": 35,
      "size": 2792,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "issuer": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/GlassService.ts",
      "issuerId": 14,
      "issuerName": "./services/GlassService.ts",
      "issuerPath": [
        {
          "id": 49,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
          "name": "./main.ts",
          "profile": {
            "factory": 58,
            "building": 1843
          }
        },
        {
          "id": 14,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/GlassService.ts",
          "name": "./services/GlassService.ts",
          "profile": {
            "factory": 83,
            "building": 1193,
            "dependencies": 637
          }
        }
      ],
      "profile": {
        "factory": 17,
        "building": 541
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 14,
          "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/GlassService.ts",
          "module": "./services/GlassService.ts",
          "moduleName": "./services/GlassService.ts",
          "type": "cjs require",
          "userRequest": "../models/IGlass",
          "loc": "3:17-44"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 2,
      "source": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst MartiniGlass = {\n    Name: 'coupe',\n    MaskURL: '/img/glasses/martini_mask.svg',\n    SVGURL: '/img/glasses/martini.svg',\n    AvailableRows: 17,\n    Height: 376,\n    Width: 247,\n};\nconst CoupeGlass = {\n    Name: 'coupe',\n    MaskURL: '/img/glasses/coupe2_mask.svg',\n    SVGURL: '/img/glasses/coupe2.svg',\n    AvailableRows: 13,\n    Height: 336,\n    Width: 247,\n};\nconst OldFashionedGlass = {\n    Name: 'old fashioned',\n    MaskURL: '/img/glasses/rocks2_mask.svg',\n    SVGURL: '/img/glasses/rocks2.svg',\n    AvailableRows: 22,\n    Height: 226,\n    Width: 247,\n};\nconst RocksGlass = {\n    Name: 'rocks',\n    MaskURL: '/img/glasses/rocks2_mask.svg',\n    SVGURL: '/img/glasses/rocks2.svg',\n    AvailableRows: 22,\n    Height: 226,\n    Width: 247,\n};\nconst DoubleRocksGlass = {\n    Name: 'double rocks',\n    MaskURL: '/img/glasses/rocks2_mask.svg',\n    SVGURL: '/img/glasses/rocks2.svg',\n    AvailableRows: 22,\n    Height: 226,\n    Width: 247,\n};\nconst WhiskeyGlass = {\n    Name: 'whiskey',\n    MaskURL: '/img/glasses/whiskey_mask.svg',\n    SVGURL: '/img/glasses/whiskey.svg',\n    AvailableRows: 22,\n    Height: 226,\n    Width: 247,\n};\nconst CollinsGlass = {\n    Name: 'collins',\n    MaskURL: '/img/glasses/collins3_mask.svg',\n    SVGURL: '/img/glasses/collins3.svg',\n    AvailableRows: 36,\n    Height: 376,\n    Width: 129,\n};\nconst FluteGlass = {\n    Name: 'flute',\n    MaskURL: '/img/glasses/flute_mask.svg',\n    SVGURL: '/img/glasses/flute.svg',\n    AvailableRows: 20,\n    Height: 376,\n    Width: 247,\n};\nconst SourGlass = {\n    Name: 'sour',\n    MaskURL: '/img/glasses/sour_mask.svg',\n    SVGURL: '/img/glasses/sour.svg',\n    AvailableRows: 30,\n    Height: 376,\n    Width: 247,\n};\nconst IrishMug = {\n    Name: 'irish mug',\n    MaskURL: '/img/glasses/irish_mug_mask.svg',\n    SVGURL: '/img/glasses/irish_mug.svg',\n    AvailableRows: 55,\n    Height: 376,\n    Width: 247,\n};\nconst Stout = {\n    Name: 'stout',\n    MaskURL: '/img/glasses/stout_mask.svg',\n    SVGURL: '/img/glasses/stout.svg',\n    AvailableRows: 36,\n    Height: 376,\n    Width: 247,\n};\nconst ImperialPint = {\n    Name: 'imperial pint',\n    MaskURL: '/img/glasses/imperial_pint_mask.svg',\n    SVGURL: '/img/glasses/imperial_pint.svg',\n    AvailableRows: 36,\n    Height: 376,\n    Width: 209,\n};\nconst Highball = {\n    Name: 'highball',\n    MaskURL: '/img/glasses/highball2_mask.svg',\n    SVGURL: '/img/glasses/highball2.svg',\n    AvailableRows: 29,\n    Height: 296,\n    Width: 169\n};\nconst Glasses = [\n    CoupeGlass,\n    RocksGlass,\n    DoubleRocksGlass,\n    WhiskeyGlass,\n    CollinsGlass,\n    FluteGlass,\n    OldFashionedGlass,\n    SourGlass,\n    IrishMug,\n    Stout,\n    ImperialPint,\n    Highball,\n    MartiniGlass,\n];\nexports.Glasses = Glasses;\n"
    },
    {
      "id": 26,
      "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/svg.js/dist/svg.js",
      "name": "../node_modules/svg.js/dist/svg.js",
      "index": 38,
      "index2": 33,
      "size": 149105,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "issuer": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/SVGService.ts",
      "issuerId": 5,
      "issuerName": "./services/SVGService.ts",
      "issuerPath": [
        {
          "id": 49,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
          "name": "./main.ts",
          "profile": {
            "factory": 58,
            "building": 1843
          }
        },
        {
          "id": 18,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DisplayService.ts",
          "name": "./services/DisplayService.ts",
          "profile": {
            "factory": 83,
            "building": 1193,
            "dependencies": 637
          }
        },
        {
          "id": 5,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/SVGService.ts",
          "name": "./services/SVGService.ts",
          "profile": {
            "factory": 735,
            "building": 523,
            "dependencies": 1
          }
        }
      ],
      "profile": {
        "factory": 59,
        "building": 128
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 5,
          "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/SVGService.ts",
          "module": "./services/SVGService.ts",
          "moduleName": "./services/SVGService.ts",
          "type": "cjs require",
          "userRequest": "svg.js",
          "loc": "11:12-29"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 3,
      "source": "/*!\n* svg.js - A lightweight library for manipulating and animating SVG.\n* @version 2.7.1\n* https://svgdotjs.github.io/\n*\n* @copyright Wout Fierens <wout@mick-wout.com>\n* @license MIT\n*\n* BUILT: Fri Nov 30 2018 10:01:55 GMT+0100 (GMT+01:00)\n*/;\n(function(root, factory) {\r\n  /* istanbul ignore next */\r\n  if (typeof define === 'function' && define.amd) {\r\n    define(function(){\r\n      return factory(root, root.document)\r\n    })\r\n  } else if (typeof exports === 'object') {\r\n    module.exports = root.document ? factory(root, root.document) : function(w){ return factory(w, w.document) }\r\n  } else {\r\n    root.SVG = factory(root, root.document)\r\n  }\r\n}(typeof window !== \"undefined\" ? window : this, function(window, document) {\r\n\r\n// Find global reference - uses 'this' by default when available,\r\n// falls back to 'window' otherwise (for bundlers like Webpack)\r\nvar globalRef = (typeof this !== \"undefined\") ? this : window;\r\n\r\n// The main wrapping element\r\nvar SVG = globalRef.SVG = function(element) {\r\n  if (SVG.supported) {\r\n    element = new SVG.Doc(element)\r\n\r\n    if(!SVG.parser.draw)\r\n      SVG.prepare()\r\n\r\n    return element\r\n  }\r\n}\r\n\r\n// Default namespaces\r\nSVG.ns    = 'http://www.w3.org/2000/svg'\r\nSVG.xmlns = 'http://www.w3.org/2000/xmlns/'\r\nSVG.xlink = 'http://www.w3.org/1999/xlink'\r\nSVG.svgjs = 'http://svgjs.com/svgjs'\r\n\r\n// Svg support test\r\nSVG.supported = (function() {\r\n  return !! document.createElementNS &&\r\n         !! document.createElementNS(SVG.ns,'svg').createSVGRect\r\n})()\r\n\r\n// Don't bother to continue if SVG is not supported\r\nif (!SVG.supported) return false\r\n\r\n// Element id sequence\r\nSVG.did  = 1000\r\n\r\n// Get next named element id\r\nSVG.eid = function(name) {\r\n  return 'Svgjs' + capitalize(name) + (SVG.did++)\r\n}\r\n\r\n// Method for element creation\r\nSVG.create = function(name) {\r\n  // create element\r\n  var element = document.createElementNS(this.ns, name)\r\n\r\n  // apply unique id\r\n  element.setAttribute('id', this.eid(name))\r\n\r\n  return element\r\n}\r\n\r\n// Method for extending objects\r\nSVG.extend = function() {\r\n  var modules, methods, key, i\r\n\r\n  // Get list of modules\r\n  modules = [].slice.call(arguments)\r\n\r\n  // Get object with extensions\r\n  methods = modules.pop()\r\n\r\n  for (i = modules.length - 1; i >= 0; i--)\r\n    if (modules[i])\r\n      for (key in methods)\r\n        modules[i].prototype[key] = methods[key]\r\n\r\n  // Make sure SVG.Set inherits any newly added methods\r\n  if (SVG.Set && SVG.Set.inherit)\r\n    SVG.Set.inherit()\r\n}\r\n\r\n// Invent new element\r\nSVG.invent = function(config) {\r\n  // Create element initializer\r\n  var initializer = typeof config.create == 'function' ?\r\n    config.create :\r\n    function() {\r\n      this.constructor.call(this, SVG.create(config.create))\r\n    }\r\n\r\n  // Inherit prototype\r\n  if (config.inherit)\r\n    initializer.prototype = new config.inherit\r\n\r\n  // Extend with methods\r\n  if (config.extend)\r\n    SVG.extend(initializer, config.extend)\r\n\r\n  // Attach construct method to parent\r\n  if (config.construct)\r\n    SVG.extend(config.parent || SVG.Container, config.construct)\r\n\r\n  return initializer\r\n}\r\n\r\n// Adopt existing svg elements\r\nSVG.adopt = function(node) {\r\n  // check for presence of node\r\n  if (!node) return null\r\n\r\n  // make sure a node isn't already adopted\r\n  if (node.instance) return node.instance\r\n\r\n  // initialize variables\r\n  var element\r\n\r\n  // adopt with element-specific settings\r\n  if (node.nodeName == 'svg')\r\n    element = node.parentNode instanceof window.SVGElement ? new SVG.Nested : new SVG.Doc\r\n  else if (node.nodeName == 'linearGradient')\r\n    element = new SVG.Gradient('linear')\r\n  else if (node.nodeName == 'radialGradient')\r\n    element = new SVG.Gradient('radial')\r\n  else if (SVG[capitalize(node.nodeName)])\r\n    element = new SVG[capitalize(node.nodeName)]\r\n  else\r\n    element = new SVG.Element(node)\r\n\r\n  // ensure references\r\n  element.type  = node.nodeName\r\n  element.node  = node\r\n  node.instance = element\r\n\r\n  // SVG.Class specific preparations\r\n  if (element instanceof SVG.Doc)\r\n    element.namespace().defs()\r\n\r\n  // pull svgjs data from the dom (getAttributeNS doesn't work in html5)\r\n  element.setData(JSON.parse(node.getAttribute('svgjs:data')) || {})\r\n\r\n  return element\r\n}\r\n\r\n// Initialize parsing element\r\nSVG.prepare = function() {\r\n  // Select document body and create invisible svg element\r\n  var body = document.getElementsByTagName('body')[0]\r\n    , draw = (body ? new SVG.Doc(body) : SVG.adopt(document.documentElement).nested()).size(2, 0)\r\n\r\n  // Create parser object\r\n  SVG.parser = {\r\n    body: body || document.documentElement\r\n  , draw: draw.style('opacity:0;position:absolute;left:-100%;top:-100%;overflow:hidden').attr('focusable', 'false').node\r\n  , poly: draw.polyline().node\r\n  , path: draw.path().node\r\n  , native: SVG.create('svg')\r\n  }\r\n}\r\n\r\nSVG.parser = {\r\n  native: SVG.create('svg')\r\n}\r\n\r\ndocument.addEventListener('DOMContentLoaded', function() {\r\n  if(!SVG.parser.draw)\r\n    SVG.prepare()\r\n}, false)\r\n\n// Storage for regular expressions\r\nSVG.regex = {\r\n  // Parse unit value\r\n  numberAndUnit:    /^([+-]?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?)([a-z%]*)$/i\r\n\r\n  // Parse hex value\r\n, hex:              /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i\r\n\r\n  // Parse rgb value\r\n, rgb:              /rgb\\((\\d+),(\\d+),(\\d+)\\)/\r\n\r\n  // Parse reference id\r\n, reference:        /#([a-z0-9\\-_]+)/i\r\n\r\n  // splits a transformation chain\r\n, transforms:       /\\)\\s*,?\\s*/\r\n\r\n  // Whitespace\r\n, whitespace:       /\\s/g\r\n\r\n  // Test hex value\r\n, isHex:            /^#[a-f0-9]{3,6}$/i\r\n\r\n  // Test rgb value\r\n, isRgb:            /^rgb\\(/\r\n\r\n  // Test css declaration\r\n, isCss:            /[^:]+:[^;]+;?/\r\n\r\n  // Test for blank string\r\n, isBlank:          /^(\\s+)?$/\r\n\r\n  // Test for numeric string\r\n, isNumber:         /^[+-]?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i\r\n\r\n  // Test for percent value\r\n, isPercent:        /^-?[\\d\\.]+%$/\r\n\r\n  // Test for image url\r\n, isImage:          /\\.(jpg|jpeg|png|gif|svg)(\\?[^=]+.*)?/i\r\n\r\n  // split at whitespace and comma\r\n, delimiter:        /[\\s,]+/\r\n\r\n  // The following regex are used to parse the d attribute of a path\r\n\r\n  // Matches all hyphens which are not after an exponent\r\n, hyphen:           /([^e])\\-/gi\r\n\r\n  // Replaces and tests for all path letters\r\n, pathLetters:      /[MLHVCSQTAZ]/gi\r\n\r\n  // yes we need this one, too\r\n, isPathLetter:     /[MLHVCSQTAZ]/i\r\n\r\n  // matches 0.154.23.45\r\n, numbersWithDots:  /((\\d?\\.\\d+(?:e[+-]?\\d+)?)((?:\\.\\d+(?:e[+-]?\\d+)?)+))+/gi\r\n\r\n  // matches .\r\n, dots:             /\\./g\r\n}\r\n\nSVG.utils = {\r\n  // Map function\r\n  map: function(array, block) {\r\n    var i\r\n      , il = array.length\r\n      , result = []\r\n\r\n    for (i = 0; i < il; i++)\r\n      result.push(block(array[i]))\r\n\r\n    return result\r\n  }\r\n\r\n  // Filter function\r\n, filter: function(array, block) {\r\n    var i\r\n      , il = array.length\r\n      , result = []\r\n\r\n    for (i = 0; i < il; i++)\r\n      if (block(array[i]))\r\n        result.push(array[i])\r\n\r\n    return result\r\n  }\r\n\r\n  // Degrees to radians\r\n, radians: function(d) {\r\n    return d % 360 * Math.PI / 180\r\n  }\r\n\r\n  // Radians to degrees\r\n, degrees: function(r) {\r\n    return r * 180 / Math.PI % 360\r\n  }\r\n\r\n, filterSVGElements: function(nodes) {\r\n    return this.filter( nodes, function(el) { return el instanceof window.SVGElement })\r\n  }\r\n\r\n}\n\r\nSVG.defaults = {\r\n  // Default attribute values\r\n  attrs: {\r\n    // fill and stroke\r\n    'fill-opacity':     1\r\n  , 'stroke-opacity':   1\r\n  , 'stroke-width':     0\r\n  , 'stroke-linejoin':  'miter'\r\n  , 'stroke-linecap':   'butt'\r\n  , fill:               '#000000'\r\n  , stroke:             '#000000'\r\n  , opacity:            1\r\n    // position\r\n  , x:                  0\r\n  , y:                  0\r\n  , cx:                 0\r\n  , cy:                 0\r\n    // size\r\n  , width:              0\r\n  , height:             0\r\n    // radius\r\n  , r:                  0\r\n  , rx:                 0\r\n  , ry:                 0\r\n    // gradient\r\n  , offset:             0\r\n  , 'stop-opacity':     1\r\n  , 'stop-color':       '#000000'\r\n    // text\r\n  , 'font-size':        16\r\n  , 'font-family':      'Helvetica, Arial, sans-serif'\r\n  , 'text-anchor':      'start'\r\n  }\r\n\r\n}\n// Module for color convertions\r\nSVG.Color = function(color) {\r\n  var match\r\n\r\n  // initialize defaults\r\n  this.r = 0\r\n  this.g = 0\r\n  this.b = 0\r\n\r\n  if(!color) return\r\n\r\n  // parse color\r\n  if (typeof color === 'string') {\r\n    if (SVG.regex.isRgb.test(color)) {\r\n      // get rgb values\r\n      match = SVG.regex.rgb.exec(color.replace(SVG.regex.whitespace,''))\r\n\r\n      // parse numeric values\r\n      this.r = parseInt(match[1])\r\n      this.g = parseInt(match[2])\r\n      this.b = parseInt(match[3])\r\n\r\n    } else if (SVG.regex.isHex.test(color)) {\r\n      // get hex values\r\n      match = SVG.regex.hex.exec(fullHex(color))\r\n\r\n      // parse numeric values\r\n      this.r = parseInt(match[1], 16)\r\n      this.g = parseInt(match[2], 16)\r\n      this.b = parseInt(match[3], 16)\r\n\r\n    }\r\n\r\n  } else if (typeof color === 'object') {\r\n    this.r = color.r\r\n    this.g = color.g\r\n    this.b = color.b\r\n\r\n  }\r\n\r\n}\r\n\r\nSVG.extend(SVG.Color, {\r\n  // Default to hex conversion\r\n  toString: function() {\r\n    return this.toHex()\r\n  }\r\n  // Build hex value\r\n, toHex: function() {\r\n    return '#'\r\n      + compToHex(this.r)\r\n      + compToHex(this.g)\r\n      + compToHex(this.b)\r\n  }\r\n  // Build rgb value\r\n, toRgb: function() {\r\n    return 'rgb(' + [this.r, this.g, this.b].join() + ')'\r\n  }\r\n  // Calculate true brightness\r\n, brightness: function() {\r\n    return (this.r / 255 * 0.30)\r\n         + (this.g / 255 * 0.59)\r\n         + (this.b / 255 * 0.11)\r\n  }\r\n  // Make color morphable\r\n, morph: function(color) {\r\n    this.destination = new SVG.Color(color)\r\n\r\n    return this\r\n  }\r\n  // Get morphed color at given position\r\n, at: function(pos) {\r\n    // make sure a destination is defined\r\n    if (!this.destination) return this\r\n\r\n    // normalise pos\r\n    pos = pos < 0 ? 0 : pos > 1 ? 1 : pos\r\n\r\n    // generate morphed color\r\n    return new SVG.Color({\r\n      r: ~~(this.r + (this.destination.r - this.r) * pos)\r\n    , g: ~~(this.g + (this.destination.g - this.g) * pos)\r\n    , b: ~~(this.b + (this.destination.b - this.b) * pos)\r\n    })\r\n  }\r\n\r\n})\r\n\r\n// Testers\r\n\r\n// Test if given value is a color string\r\nSVG.Color.test = function(color) {\r\n  color += ''\r\n  return SVG.regex.isHex.test(color)\r\n      || SVG.regex.isRgb.test(color)\r\n}\r\n\r\n// Test if given value is a rgb object\r\nSVG.Color.isRgb = function(color) {\r\n  return color && typeof color.r == 'number'\r\n               && typeof color.g == 'number'\r\n               && typeof color.b == 'number'\r\n}\r\n\r\n// Test if given value is a color\r\nSVG.Color.isColor = function(color) {\r\n  return SVG.Color.isRgb(color) || SVG.Color.test(color)\r\n}\n// Module for array conversion\r\nSVG.Array = function(array, fallback) {\r\n  array = (array || []).valueOf()\r\n\r\n  // if array is empty and fallback is provided, use fallback\r\n  if (array.length == 0 && fallback)\r\n    array = fallback.valueOf()\r\n\r\n  // parse array\r\n  this.value = this.parse(array)\r\n}\r\n\r\nSVG.extend(SVG.Array, {\r\n  // Make array morphable\r\n  morph: function(array) {\r\n    this.destination = this.parse(array)\r\n\r\n    // normalize length of arrays\r\n    if (this.value.length != this.destination.length) {\r\n      var lastValue       = this.value[this.value.length - 1]\r\n        , lastDestination = this.destination[this.destination.length - 1]\r\n\r\n      while(this.value.length > this.destination.length)\r\n        this.destination.push(lastDestination)\r\n      while(this.value.length < this.destination.length)\r\n        this.value.push(lastValue)\r\n    }\r\n\r\n    return this\r\n  }\r\n  // Clean up any duplicate points\r\n, settle: function() {\r\n    // find all unique values\r\n    for (var i = 0, il = this.value.length, seen = []; i < il; i++)\r\n      if (seen.indexOf(this.value[i]) == -1)\r\n        seen.push(this.value[i])\r\n\r\n    // set new value\r\n    return this.value = seen\r\n  }\r\n  // Get morphed array at given position\r\n, at: function(pos) {\r\n    // make sure a destination is defined\r\n    if (!this.destination) return this\r\n\r\n    // generate morphed array\r\n    for (var i = 0, il = this.value.length, array = []; i < il; i++)\r\n      array.push(this.value[i] + (this.destination[i] - this.value[i]) * pos)\r\n\r\n    return new SVG.Array(array)\r\n  }\r\n  // Convert array to string\r\n, toString: function() {\r\n    return this.value.join(' ')\r\n  }\r\n  // Real value\r\n, valueOf: function() {\r\n    return this.value\r\n  }\r\n  // Parse whitespace separated string\r\n, parse: function(array) {\r\n    array = array.valueOf()\r\n\r\n    // if already is an array, no need to parse it\r\n    if (Array.isArray(array)) return array\r\n\r\n    return this.split(array)\r\n  }\r\n  // Strip unnecessary whitespace\r\n, split: function(string) {\r\n    return string.trim().split(SVG.regex.delimiter).map(parseFloat)\r\n  }\r\n  // Reverse array\r\n, reverse: function() {\r\n    this.value.reverse()\r\n\r\n    return this\r\n  }\r\n, clone: function() {\r\n    var clone = new this.constructor()\r\n    clone.value = array_clone(this.value)\r\n    return clone\r\n  }\r\n})\n// Poly points array\r\nSVG.PointArray = function(array, fallback) {\r\n  SVG.Array.call(this, array, fallback || [[0,0]])\r\n}\r\n\r\n// Inherit from SVG.Array\r\nSVG.PointArray.prototype = new SVG.Array\r\nSVG.PointArray.prototype.constructor = SVG.PointArray\r\n\r\nSVG.extend(SVG.PointArray, {\r\n  // Convert array to string\r\n  toString: function() {\r\n    // convert to a poly point string\r\n    for (var i = 0, il = this.value.length, array = []; i < il; i++)\r\n      array.push(this.value[i].join(','))\r\n\r\n    return array.join(' ')\r\n  }\r\n  // Convert array to line object\r\n, toLine: function() {\r\n    return {\r\n      x1: this.value[0][0]\r\n    , y1: this.value[0][1]\r\n    , x2: this.value[1][0]\r\n    , y2: this.value[1][1]\r\n    }\r\n  }\r\n  // Get morphed array at given position\r\n, at: function(pos) {\r\n    // make sure a destination is defined\r\n    if (!this.destination) return this\r\n\r\n    // generate morphed point string\r\n    for (var i = 0, il = this.value.length, array = []; i < il; i++)\r\n      array.push([\r\n        this.value[i][0] + (this.destination[i][0] - this.value[i][0]) * pos\r\n      , this.value[i][1] + (this.destination[i][1] - this.value[i][1]) * pos\r\n      ])\r\n\r\n    return new SVG.PointArray(array)\r\n  }\r\n  // Parse point string and flat array\r\n, parse: function(array) {\r\n    var points = []\r\n\r\n    array = array.valueOf()\r\n\r\n    // if it is an array\r\n    if (Array.isArray(array)) {\r\n      // and it is not flat, there is no need to parse it\r\n      if(Array.isArray(array[0])) {\r\n        // make sure to use a clone\r\n        return array.map(function (el) { return el.slice() })\r\n      } else if (array[0].x != null){\r\n        // allow point objects to be passed\r\n        return array.map(function (el) { return [el.x, el.y] })\r\n      }\r\n    } else { // Else, it is considered as a string\r\n      // parse points\r\n      array = array.trim().split(SVG.regex.delimiter).map(parseFloat)\r\n    }\r\n\r\n    // validate points - https://svgwg.org/svg2-draft/shapes.html#DataTypePoints\r\n    // Odd number of coordinates is an error. In such cases, drop the last odd coordinate.\r\n    if (array.length % 2 !== 0) array.pop()\r\n\r\n    // wrap points in two-tuples and parse points as floats\r\n    for(var i = 0, len = array.length; i < len; i = i + 2)\r\n      points.push([ array[i], array[i+1] ])\r\n\r\n    return points\r\n  }\r\n  // Move point string\r\n, move: function(x, y) {\r\n    var box = this.bbox()\r\n\r\n    // get relative offset\r\n    x -= box.x\r\n    y -= box.y\r\n\r\n    // move every point\r\n    if (!isNaN(x) && !isNaN(y))\r\n      for (var i = this.value.length - 1; i >= 0; i--)\r\n        this.value[i] = [this.value[i][0] + x, this.value[i][1] + y]\r\n\r\n    return this\r\n  }\r\n  // Resize poly string\r\n, size: function(width, height) {\r\n    var i, box = this.bbox()\r\n\r\n    // recalculate position of all points according to new size\r\n    for (i = this.value.length - 1; i >= 0; i--) {\r\n      if(box.width) this.value[i][0] = ((this.value[i][0] - box.x) * width)  / box.width  + box.x\r\n      if(box.height) this.value[i][1] = ((this.value[i][1] - box.y) * height) / box.height + box.y\r\n    }\r\n\r\n    return this\r\n  }\r\n  // Get bounding box of points\r\n, bbox: function() {\r\n    SVG.parser.poly.setAttribute('points', this.toString())\r\n\r\n    return SVG.parser.poly.getBBox()\r\n  }\r\n})\r\n\nvar pathHandlers = {\r\n  M: function(c, p, p0) {\r\n    p.x = p0.x = c[0]\r\n    p.y = p0.y = c[1]\r\n\r\n    return ['M', p.x, p.y]\r\n  },\r\n  L: function(c, p) {\r\n    p.x = c[0]\r\n    p.y = c[1]\r\n    return ['L', c[0], c[1]]\r\n  },\r\n  H: function(c, p) {\r\n    p.x = c[0]\r\n    return ['H', c[0]]\r\n  },\r\n  V: function(c, p) {\r\n    p.y = c[0]\r\n    return ['V', c[0]]\r\n  },\r\n  C: function(c, p) {\r\n    p.x = c[4]\r\n    p.y = c[5]\r\n    return ['C', c[0], c[1], c[2], c[3], c[4], c[5]]\r\n  },\r\n  S: function(c, p) {\r\n    p.x = c[2]\r\n    p.y = c[3]\r\n    return ['S', c[0], c[1], c[2], c[3]]\r\n  },\r\n  Q: function(c, p) {\r\n    p.x = c[2]\r\n    p.y = c[3]\r\n    return ['Q', c[0], c[1], c[2], c[3]]\r\n  },\r\n  T: function(c, p) {\r\n    p.x = c[0]\r\n    p.y = c[1]\r\n    return ['T', c[0], c[1]]\r\n  },\r\n  Z: function(c, p, p0) {\r\n    p.x = p0.x\r\n    p.y = p0.y\r\n    return ['Z']\r\n  },\r\n  A: function(c, p) {\r\n    p.x = c[5]\r\n    p.y = c[6]\r\n    return ['A', c[0], c[1], c[2], c[3], c[4], c[5], c[6]]\r\n  }\r\n}\r\n\r\nvar mlhvqtcsa = 'mlhvqtcsaz'.split('')\r\n\r\nfor(var i = 0, il = mlhvqtcsa.length; i < il; ++i){\r\n  pathHandlers[mlhvqtcsa[i]] = (function(i){\r\n    return function(c, p, p0) {\r\n      if(i == 'H') c[0] = c[0] + p.x\r\n      else if(i == 'V') c[0] = c[0] + p.y\r\n      else if(i == 'A'){\r\n        c[5] = c[5] + p.x,\r\n        c[6] = c[6] + p.y\r\n      }\r\n      else\r\n        for(var j = 0, jl = c.length; j < jl; ++j) {\r\n          c[j] = c[j] + (j%2 ? p.y : p.x)\r\n        }\r\n\r\n      return pathHandlers[i](c, p, p0)\r\n    }\r\n  })(mlhvqtcsa[i].toUpperCase())\r\n}\r\n\r\n// Path points array\r\nSVG.PathArray = function(array, fallback) {\r\n  SVG.Array.call(this, array, fallback || [['M', 0, 0]])\r\n}\r\n\r\n// Inherit from SVG.Array\r\nSVG.PathArray.prototype = new SVG.Array\r\nSVG.PathArray.prototype.constructor = SVG.PathArray\r\n\r\nSVG.extend(SVG.PathArray, {\r\n  // Convert array to string\r\n  toString: function() {\r\n    return arrayToString(this.value)\r\n  }\r\n  // Move path string\r\n, move: function(x, y) {\r\n    // get bounding box of current situation\r\n    var box = this.bbox()\r\n\r\n    // get relative offset\r\n    x -= box.x\r\n    y -= box.y\r\n\r\n    if (!isNaN(x) && !isNaN(y)) {\r\n      // move every point\r\n      for (var l, i = this.value.length - 1; i >= 0; i--) {\r\n        l = this.value[i][0]\r\n\r\n        if (l == 'M' || l == 'L' || l == 'T')  {\r\n          this.value[i][1] += x\r\n          this.value[i][2] += y\r\n\r\n        } else if (l == 'H')  {\r\n          this.value[i][1] += x\r\n\r\n        } else if (l == 'V')  {\r\n          this.value[i][1] += y\r\n\r\n        } else if (l == 'C' || l == 'S' || l == 'Q')  {\r\n          this.value[i][1] += x\r\n          this.value[i][2] += y\r\n          this.value[i][3] += x\r\n          this.value[i][4] += y\r\n\r\n          if (l == 'C')  {\r\n            this.value[i][5] += x\r\n            this.value[i][6] += y\r\n          }\r\n\r\n        } else if (l == 'A')  {\r\n          this.value[i][6] += x\r\n          this.value[i][7] += y\r\n        }\r\n\r\n      }\r\n    }\r\n\r\n    return this\r\n  }\r\n  // Resize path string\r\n, size: function(width, height) {\r\n    // get bounding box of current situation\r\n    var i, l, box = this.bbox()\r\n\r\n    // recalculate position of all points according to new size\r\n    for (i = this.value.length - 1; i >= 0; i--) {\r\n      l = this.value[i][0]\r\n\r\n      if (l == 'M' || l == 'L' || l == 'T')  {\r\n        this.value[i][1] = ((this.value[i][1] - box.x) * width)  / box.width  + box.x\r\n        this.value[i][2] = ((this.value[i][2] - box.y) * height) / box.height + box.y\r\n\r\n      } else if (l == 'H')  {\r\n        this.value[i][1] = ((this.value[i][1] - box.x) * width)  / box.width  + box.x\r\n\r\n      } else if (l == 'V')  {\r\n        this.value[i][1] = ((this.value[i][1] - box.y) * height) / box.height + box.y\r\n\r\n      } else if (l == 'C' || l == 'S' || l == 'Q')  {\r\n        this.value[i][1] = ((this.value[i][1] - box.x) * width)  / box.width  + box.x\r\n        this.value[i][2] = ((this.value[i][2] - box.y) * height) / box.height + box.y\r\n        this.value[i][3] = ((this.value[i][3] - box.x) * width)  / box.width  + box.x\r\n        this.value[i][4] = ((this.value[i][4] - box.y) * height) / box.height + box.y\r\n\r\n        if (l == 'C')  {\r\n          this.value[i][5] = ((this.value[i][5] - box.x) * width)  / box.width  + box.x\r\n          this.value[i][6] = ((this.value[i][6] - box.y) * height) / box.height + box.y\r\n        }\r\n\r\n      } else if (l == 'A')  {\r\n        // resize radii\r\n        this.value[i][1] = (this.value[i][1] * width)  / box.width\r\n        this.value[i][2] = (this.value[i][2] * height) / box.height\r\n\r\n        // move position values\r\n        this.value[i][6] = ((this.value[i][6] - box.x) * width)  / box.width  + box.x\r\n        this.value[i][7] = ((this.value[i][7] - box.y) * height) / box.height + box.y\r\n      }\r\n\r\n    }\r\n\r\n    return this\r\n  }\r\n  // Test if the passed path array use the same path data commands as this path array\r\n, equalCommands: function(pathArray) {\r\n    var i, il, equalCommands\r\n\r\n    pathArray = new SVG.PathArray(pathArray)\r\n\r\n    equalCommands = this.value.length === pathArray.value.length\r\n    for(i = 0, il = this.value.length; equalCommands && i < il; i++) {\r\n      equalCommands = this.value[i][0] === pathArray.value[i][0]\r\n    }\r\n\r\n    return equalCommands\r\n  }\r\n  // Make path array morphable\r\n, morph: function(pathArray) {\r\n    pathArray = new SVG.PathArray(pathArray)\r\n\r\n    if(this.equalCommands(pathArray)) {\r\n      this.destination = pathArray\r\n    } else {\r\n      this.destination = null\r\n    }\r\n\r\n    return this\r\n  }\r\n  // Get morphed path array at given position\r\n, at: function(pos) {\r\n    // make sure a destination is defined\r\n    if (!this.destination) return this\r\n\r\n    var sourceArray = this.value\r\n      , destinationArray = this.destination.value\r\n      , array = [], pathArray = new SVG.PathArray()\r\n      , i, il, j, jl\r\n\r\n    // Animate has specified in the SVG spec\r\n    // See: https://www.w3.org/TR/SVG11/paths.html#PathElement\r\n    for (i = 0, il = sourceArray.length; i < il; i++) {\r\n      array[i] = [sourceArray[i][0]]\r\n      for(j = 1, jl = sourceArray[i].length; j < jl; j++) {\r\n        array[i][j] = sourceArray[i][j] + (destinationArray[i][j] - sourceArray[i][j]) * pos\r\n      }\r\n      // For the two flags of the elliptical arc command, the SVG spec say:\r\n      // Flags and booleans are interpolated as fractions between zero and one, with any non-zero value considered to be a value of one/true\r\n      // Elliptical arc command as an array followed by corresponding indexes:\r\n      // ['A', rx, ry, x-axis-rotation, large-arc-flag, sweep-flag, x, y]\r\n      //   0    1   2        3                 4             5      6  7\r\n      if(array[i][0] === 'A') {\r\n        array[i][4] = +(array[i][4] != 0)\r\n        array[i][5] = +(array[i][5] != 0)\r\n      }\r\n    }\r\n\r\n    // Directly modify the value of a path array, this is done this way for performance\r\n    pathArray.value = array\r\n    return pathArray\r\n  }\r\n  // Absolutize and parse path to array\r\n, parse: function(array) {\r\n    // if it's already a patharray, no need to parse it\r\n    if (array instanceof SVG.PathArray) return array.valueOf()\r\n\r\n    // prepare for parsing\r\n    var i, x0, y0, s, seg, arr\r\n      , x = 0\r\n      , y = 0\r\n      , paramCnt = { 'M':2, 'L':2, 'H':1, 'V':1, 'C':6, 'S':4, 'Q':4, 'T':2, 'A':7, 'Z':0 }\r\n\r\n    if(typeof array == 'string'){\r\n\r\n      array = array\r\n        .replace(SVG.regex.numbersWithDots, pathRegReplace) // convert 45.123.123 to 45.123 .123\r\n        .replace(SVG.regex.pathLetters, ' $& ') // put some room between letters and numbers\r\n        .replace(SVG.regex.hyphen, '$1 -')      // add space before hyphen\r\n        .trim()                                 // trim\r\n        .split(SVG.regex.delimiter)   // split into array\r\n\r\n    }else{\r\n      array = array.reduce(function(prev, curr){\r\n        return [].concat.call(prev, curr)\r\n      }, [])\r\n    }\r\n\r\n    // array now is an array containing all parts of a path e.g. ['M', '0', '0', 'L', '30', '30' ...]\r\n    var arr = []\r\n      , p = new SVG.Point()\r\n      , p0 = new SVG.Point()\r\n      , index = 0\r\n      , len = array.length\r\n\r\n    do{\r\n      // Test if we have a path letter\r\n      if(SVG.regex.isPathLetter.test(array[index])){\r\n        s = array[index]\r\n        ++index\r\n      // If last letter was a move command and we got no new, it defaults to [L]ine\r\n      }else if(s == 'M'){\r\n        s = 'L'\r\n      }else if(s == 'm'){\r\n        s = 'l'\r\n      }\r\n\r\n      arr.push(pathHandlers[s].call(null,\r\n          array.slice(index, (index = index + paramCnt[s.toUpperCase()])).map(parseFloat),\r\n          p, p0\r\n        )\r\n      )\r\n\r\n    }while(len > index)\r\n\r\n    return arr\r\n\r\n  }\r\n  // Get bounding box of path\r\n, bbox: function() {\r\n    SVG.parser.path.setAttribute('d', this.toString())\r\n\r\n    return SVG.parser.path.getBBox()\r\n  }\r\n\r\n})\r\n\n// Module for unit convertions\r\nSVG.Number = SVG.invent({\r\n  // Initialize\r\n  create: function(value, unit) {\r\n    // initialize defaults\r\n    this.value = 0\r\n    this.unit  = unit || ''\r\n\r\n    // parse value\r\n    if (typeof value === 'number') {\r\n      // ensure a valid numeric value\r\n      this.value = isNaN(value) ? 0 : !isFinite(value) ? (value < 0 ? -3.4e+38 : +3.4e+38) : value\r\n\r\n    } else if (typeof value === 'string') {\r\n      unit = value.match(SVG.regex.numberAndUnit)\r\n\r\n      if (unit) {\r\n        // make value numeric\r\n        this.value = parseFloat(unit[1])\r\n\r\n        // normalize\r\n        if (unit[5] == '%')\r\n          this.value /= 100\r\n        else if (unit[5] == 's')\r\n          this.value *= 1000\r\n\r\n        // store unit\r\n        this.unit = unit[5]\r\n      }\r\n\r\n    } else {\r\n      if (value instanceof SVG.Number) {\r\n        this.value = value.valueOf()\r\n        this.unit  = value.unit\r\n      }\r\n    }\r\n\r\n  }\r\n  // Add methods\r\n, extend: {\r\n    // Stringalize\r\n    toString: function() {\r\n      return (\r\n        this.unit == '%' ?\r\n          ~~(this.value * 1e8) / 1e6:\r\n        this.unit == 's' ?\r\n          this.value / 1e3 :\r\n          this.value\r\n      ) + this.unit\r\n    }\r\n  , toJSON: function() {\r\n      return this.toString()\r\n    }\r\n  , // Convert to primitive\r\n    valueOf: function() {\r\n      return this.value\r\n    }\r\n    // Add number\r\n  , plus: function(number) {\r\n      number = new SVG.Number(number)\r\n      return new SVG.Number(this + number, this.unit || number.unit)\r\n    }\r\n    // Subtract number\r\n  , minus: function(number) {\r\n      number = new SVG.Number(number)\r\n      return new SVG.Number(this - number, this.unit || number.unit)\r\n    }\r\n    // Multiply number\r\n  , times: function(number) {\r\n      number = new SVG.Number(number)\r\n      return new SVG.Number(this * number, this.unit || number.unit)\r\n    }\r\n    // Divide number\r\n  , divide: function(number) {\r\n      number = new SVG.Number(number)\r\n      return new SVG.Number(this / number, this.unit || number.unit)\r\n    }\r\n    // Convert to different unit\r\n  , to: function(unit) {\r\n      var number = new SVG.Number(this)\r\n\r\n      if (typeof unit === 'string')\r\n        number.unit = unit\r\n\r\n      return number\r\n    }\r\n    // Make number morphable\r\n  , morph: function(number) {\r\n      this.destination = new SVG.Number(number)\r\n\r\n      if(number.relative) {\r\n        this.destination.value += this.value\r\n      }\r\n\r\n      return this\r\n    }\r\n    // Get morphed number at given position\r\n  , at: function(pos) {\r\n      // Make sure a destination is defined\r\n      if (!this.destination) return this\r\n\r\n      // Generate new morphed number\r\n      return new SVG.Number(this.destination)\r\n          .minus(this)\r\n          .times(pos)\r\n          .plus(this)\r\n    }\r\n\r\n  }\r\n})\r\n\n\r\nSVG.Element = SVG.invent({\r\n  // Initialize node\r\n  create: function(node) {\r\n    // make stroke value accessible dynamically\r\n    this._stroke = SVG.defaults.attrs.stroke\r\n    this._event = null\r\n    this._events = {}\r\n\r\n    // initialize data object\r\n    this.dom = {}\r\n\r\n    // create circular reference\r\n    if (this.node = node) {\r\n      this.type = node.nodeName\r\n      this.node.instance = this\r\n      this._events = node._events || {}\r\n\r\n      // store current attribute value\r\n      this._stroke = node.getAttribute('stroke') || this._stroke\r\n    }\r\n  }\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Move over x-axis\r\n    x: function(x) {\r\n      return this.attr('x', x)\r\n    }\r\n    // Move over y-axis\r\n  , y: function(y) {\r\n      return this.attr('y', y)\r\n    }\r\n    // Move by center over x-axis\r\n  , cx: function(x) {\r\n      return x == null ? this.x() + this.width() / 2 : this.x(x - this.width() / 2)\r\n    }\r\n    // Move by center over y-axis\r\n  , cy: function(y) {\r\n      return y == null ? this.y() + this.height() / 2 : this.y(y - this.height() / 2)\r\n    }\r\n    // Move element to given x and y values\r\n  , move: function(x, y) {\r\n      return this.x(x).y(y)\r\n    }\r\n    // Move element by its center\r\n  , center: function(x, y) {\r\n      return this.cx(x).cy(y)\r\n    }\r\n    // Set width of element\r\n  , width: function(width) {\r\n      return this.attr('width', width)\r\n    }\r\n    // Set height of element\r\n  , height: function(height) {\r\n      return this.attr('height', height)\r\n    }\r\n    // Set element size to given width and height\r\n  , size: function(width, height) {\r\n      var p = proportionalSize(this, width, height)\r\n\r\n      return this\r\n        .width(new SVG.Number(p.width))\r\n        .height(new SVG.Number(p.height))\r\n    }\r\n    // Clone element\r\n  , clone: function(parent) {\r\n      // write dom data to the dom so the clone can pickup the data\r\n      this.writeDataToDom()\r\n\r\n      // clone element and assign new id\r\n      var clone = assignNewId(this.node.cloneNode(true))\r\n\r\n      // insert the clone in the given parent or after myself\r\n      if(parent) parent.add(clone)\r\n      else this.after(clone)\r\n\r\n      return clone\r\n    }\r\n    // Remove element\r\n  , remove: function() {\r\n      if (this.parent())\r\n        this.parent().removeElement(this)\r\n\r\n      return this\r\n    }\r\n    // Replace element\r\n  , replace: function(element) {\r\n      this.after(element).remove()\r\n\r\n      return element\r\n    }\r\n    // Add element to given container and return self\r\n  , addTo: function(parent) {\r\n      return parent.put(this)\r\n    }\r\n    // Add element to given container and return container\r\n  , putIn: function(parent) {\r\n      return parent.add(this)\r\n    }\r\n    // Get / set id\r\n  , id: function(id) {\r\n      return this.attr('id', id)\r\n    }\r\n    // Checks whether the given point inside the bounding box of the element\r\n  , inside: function(x, y) {\r\n      var box = this.bbox()\r\n\r\n      return x > box.x\r\n          && y > box.y\r\n          && x < box.x + box.width\r\n          && y < box.y + box.height\r\n    }\r\n    // Show element\r\n  , show: function() {\r\n      return this.style('display', '')\r\n    }\r\n    // Hide element\r\n  , hide: function() {\r\n      return this.style('display', 'none')\r\n    }\r\n    // Is element visible?\r\n  , visible: function() {\r\n      return this.style('display') != 'none'\r\n    }\r\n    // Return id on string conversion\r\n  , toString: function() {\r\n      return this.attr('id')\r\n    }\r\n    // Return array of classes on the node\r\n  , classes: function() {\r\n      var attr = this.attr('class')\r\n\r\n      return attr == null ? [] : attr.trim().split(SVG.regex.delimiter)\r\n    }\r\n    // Return true if class exists on the node, false otherwise\r\n  , hasClass: function(name) {\r\n      return this.classes().indexOf(name) != -1\r\n    }\r\n    // Add class to the node\r\n  , addClass: function(name) {\r\n      if (!this.hasClass(name)) {\r\n        var array = this.classes()\r\n        array.push(name)\r\n        this.attr('class', array.join(' '))\r\n      }\r\n\r\n      return this\r\n    }\r\n    // Remove class from the node\r\n  , removeClass: function(name) {\r\n      if (this.hasClass(name)) {\r\n        this.attr('class', this.classes().filter(function(c) {\r\n          return c != name\r\n        }).join(' '))\r\n      }\r\n\r\n      return this\r\n    }\r\n    // Toggle the presence of a class on the node\r\n  , toggleClass: function(name) {\r\n      return this.hasClass(name) ? this.removeClass(name) : this.addClass(name)\r\n    }\r\n    // Get referenced element form attribute value\r\n  , reference: function(attr) {\r\n      return SVG.get(this.attr(attr))\r\n    }\r\n    // Returns the parent element instance\r\n  , parent: function(type) {\r\n      var parent = this\r\n\r\n      // check for parent\r\n      if(!parent.node.parentNode) return null\r\n\r\n      // get parent element\r\n      parent = SVG.adopt(parent.node.parentNode)\r\n\r\n      if(!type) return parent\r\n\r\n      // loop trough ancestors if type is given\r\n      while(parent && parent.node instanceof window.SVGElement){\r\n        if(typeof type === 'string' ? parent.matches(type) : parent instanceof type) return parent\r\n        if(!parent.node.parentNode || parent.node.parentNode.nodeName == '#document' || parent.node.parentNode.nodeName == '#document-fragment') return null // #759, #720\r\n        parent = SVG.adopt(parent.node.parentNode)\r\n      }\r\n    }\r\n    // Get parent document\r\n  , doc: function() {\r\n      return this instanceof SVG.Doc ? this : this.parent(SVG.Doc)\r\n    }\r\n    // return array of all ancestors of given type up to the root svg\r\n  , parents: function(type) {\r\n      var parents = [], parent = this\r\n\r\n      do{\r\n        parent = parent.parent(type)\r\n        if(!parent || !parent.node) break\r\n\r\n        parents.push(parent)\r\n      } while(parent.parent)\r\n\r\n      return parents\r\n    }\r\n    // matches the element vs a css selector\r\n  , matches: function(selector){\r\n      return matches(this.node, selector)\r\n    }\r\n    // Returns the svg node to call native svg methods on it\r\n  , native: function() {\r\n      return this.node\r\n    }\r\n    // Import raw svg\r\n  , svg: function(svg) {\r\n      // create temporary holder\r\n      var well = document.createElement('svg')\r\n\r\n      // act as a setter if svg is given\r\n      if (svg && this instanceof SVG.Parent) {\r\n        // dump raw svg\r\n        well.innerHTML = '<svg>' + svg.replace(/\\n/, '').replace(/<([\\w:-]+)([^<]+?)\\/>/g, '<$1$2></$1>') + '</svg>'\r\n\r\n        // transplant nodes\r\n        for (var i = 0, il = well.firstChild.childNodes.length; i < il; i++)\r\n          this.node.appendChild(well.firstChild.firstChild)\r\n\r\n      // otherwise act as a getter\r\n      } else {\r\n        // create a wrapping svg element in case of partial content\r\n        well.appendChild(svg = document.createElement('svg'))\r\n\r\n        // write svgjs data to the dom\r\n        this.writeDataToDom()\r\n\r\n        // insert a copy of this node\r\n        svg.appendChild(this.node.cloneNode(true))\r\n\r\n        // return target element\r\n        return well.innerHTML.replace(/^<svg>/, '').replace(/<\\/svg>$/, '')\r\n      }\r\n\r\n      return this\r\n    }\r\n  // write svgjs data to the dom\r\n  , writeDataToDom: function() {\r\n\r\n      // dump variables recursively\r\n      if(this.each || this.lines){\r\n        var fn = this.each ? this : this.lines();\r\n        fn.each(function(){\r\n          this.writeDataToDom()\r\n        })\r\n      }\r\n\r\n      // remove previously set data\r\n      this.node.removeAttribute('svgjs:data')\r\n\r\n      if(Object.keys(this.dom).length)\r\n        this.node.setAttribute('svgjs:data', JSON.stringify(this.dom)) // see #428\r\n\r\n      return this\r\n    }\r\n  // set given data to the elements data property\r\n  , setData: function(o){\r\n      this.dom = o\r\n      return this\r\n    }\r\n  , is: function(obj){\r\n      return is(this, obj)\r\n    }\r\n  }\r\n})\r\n\nSVG.easing = {\r\n  '-': function(pos){return pos}\r\n, '<>':function(pos){return -Math.cos(pos * Math.PI) / 2 + 0.5}\r\n, '>': function(pos){return  Math.sin(pos * Math.PI / 2)}\r\n, '<': function(pos){return -Math.cos(pos * Math.PI / 2) + 1}\r\n}\r\n\r\nSVG.morph = function(pos){\r\n  return function(from, to) {\r\n    return new SVG.MorphObj(from, to).at(pos)\r\n  }\r\n}\r\n\r\nSVG.Situation = SVG.invent({\r\n\r\n  create: function(o){\r\n    this.init = false\r\n    this.reversed = false\r\n    this.reversing = false\r\n\r\n    this.duration = new SVG.Number(o.duration).valueOf()\r\n    this.delay = new SVG.Number(o.delay).valueOf()\r\n\r\n    this.start = +new Date() + this.delay\r\n    this.finish = this.start + this.duration\r\n    this.ease = o.ease\r\n\r\n    // this.loop is incremented from 0 to this.loops\r\n    // it is also incremented when in an infinite loop (when this.loops is true)\r\n    this.loop = 0\r\n    this.loops = false\r\n\r\n    this.animations = {\r\n      // functionToCall: [list of morphable objects]\r\n      // e.g. move: [SVG.Number, SVG.Number]\r\n    }\r\n\r\n    this.attrs = {\r\n      // holds all attributes which are not represented from a function svg.js provides\r\n      // e.g. someAttr: SVG.Number\r\n    }\r\n\r\n    this.styles = {\r\n      // holds all styles which should be animated\r\n      // e.g. fill-color: SVG.Color\r\n    }\r\n\r\n    this.transforms = [\r\n      // holds all transformations as transformation objects\r\n      // e.g. [SVG.Rotate, SVG.Translate, SVG.Matrix]\r\n    ]\r\n\r\n    this.once = {\r\n      // functions to fire at a specific position\r\n      // e.g. \"0.5\": function foo(){}\r\n    }\r\n\r\n  }\r\n\r\n})\r\n\r\n\r\nSVG.FX = SVG.invent({\r\n\r\n  create: function(element) {\r\n    this._target = element\r\n    this.situations = []\r\n    this.active = false\r\n    this.situation = null\r\n    this.paused = false\r\n    this.lastPos = 0\r\n    this.pos = 0\r\n    // The absolute position of an animation is its position in the context of its complete duration (including delay and loops)\r\n    // When performing a delay, absPos is below 0 and when performing a loop, its value is above 1\r\n    this.absPos = 0\r\n    this._speed = 1\r\n  }\r\n\r\n, extend: {\r\n\r\n    /**\r\n     * sets or returns the target of this animation\r\n     * @param o object || number In case of Object it holds all parameters. In case of number its the duration of the animation\r\n     * @param ease function || string Function which should be used for easing or easing keyword\r\n     * @param delay Number indicating the delay before the animation starts\r\n     * @return target || this\r\n     */\r\n    animate: function(o, ease, delay){\r\n\r\n      if(typeof o == 'object'){\r\n        ease = o.ease\r\n        delay = o.delay\r\n        o = o.duration\r\n      }\r\n\r\n      var situation = new SVG.Situation({\r\n        duration: o || 1000,\r\n        delay: delay || 0,\r\n        ease: SVG.easing[ease || '-'] || ease\r\n      })\r\n\r\n      this.queue(situation)\r\n\r\n      return this\r\n    }\r\n\r\n    /**\r\n     * sets a delay before the next element of the queue is called\r\n     * @param delay Duration of delay in milliseconds\r\n     * @return this.target()\r\n     */\r\n  , delay: function(delay){\r\n      // The delay is performed by an empty situation with its duration\r\n      // attribute set to the duration of the delay\r\n      var situation = new SVG.Situation({\r\n        duration: delay,\r\n        delay: 0,\r\n        ease: SVG.easing['-']\r\n      })\r\n\r\n      return this.queue(situation)\r\n    }\r\n\r\n    /**\r\n     * sets or returns the target of this animation\r\n     * @param null || target SVG.Element which should be set as new target\r\n     * @return target || this\r\n     */\r\n  , target: function(target){\r\n      if(target && target instanceof SVG.Element){\r\n        this._target = target\r\n        return this\r\n      }\r\n\r\n      return this._target\r\n    }\r\n\r\n    // returns the absolute position at a given time\r\n  , timeToAbsPos: function(timestamp){\r\n      return (timestamp - this.situation.start) / (this.situation.duration/this._speed)\r\n    }\r\n\r\n    // returns the timestamp from a given absolute positon\r\n  , absPosToTime: function(absPos){\r\n      return this.situation.duration/this._speed * absPos + this.situation.start\r\n    }\r\n\r\n    // starts the animationloop\r\n  , startAnimFrame: function(){\r\n      this.stopAnimFrame()\r\n      this.animationFrame = window.requestAnimationFrame(function(){ this.step() }.bind(this))\r\n    }\r\n\r\n    // cancels the animationframe\r\n  , stopAnimFrame: function(){\r\n      window.cancelAnimationFrame(this.animationFrame)\r\n    }\r\n\r\n    // kicks off the animation - only does something when the queue is currently not active and at least one situation is set\r\n  , start: function(){\r\n      // dont start if already started\r\n      if(!this.active && this.situation){\r\n        this.active = true\r\n        this.startCurrent()\r\n      }\r\n\r\n      return this\r\n    }\r\n\r\n    // start the current situation\r\n  , startCurrent: function(){\r\n      this.situation.start = +new Date + this.situation.delay/this._speed\r\n      this.situation.finish = this.situation.start + this.situation.duration/this._speed\r\n      return this.initAnimations().step()\r\n    }\r\n\r\n    /**\r\n     * adds a function / Situation to the animation queue\r\n     * @param fn function / situation to add\r\n     * @return this\r\n     */\r\n  , queue: function(fn){\r\n      if(typeof fn == 'function' || fn instanceof SVG.Situation)\r\n        this.situations.push(fn)\r\n\r\n      if(!this.situation) this.situation = this.situations.shift()\r\n\r\n      return this\r\n    }\r\n\r\n    /**\r\n     * pulls next element from the queue and execute it\r\n     * @return this\r\n     */\r\n  , dequeue: function(){\r\n      // stop current animation\r\n      this.stop()\r\n\r\n      // get next animation from queue\r\n      this.situation = this.situations.shift()\r\n\r\n      if(this.situation){\r\n        if(this.situation instanceof SVG.Situation) {\r\n          this.start()\r\n        } else {\r\n          // If it is not a SVG.Situation, then it is a function, we execute it\r\n          this.situation.call(this)\r\n        }\r\n      }\r\n\r\n      return this\r\n    }\r\n\r\n    // updates all animations to the current state of the element\r\n    // this is important when one property could be changed from another property\r\n  , initAnimations: function() {\r\n      var i, j, source\r\n      var s = this.situation\r\n\r\n      if(s.init) return this\r\n\r\n      for(i in s.animations){\r\n        source = this.target()[i]()\r\n\r\n        if(!Array.isArray(source)) {\r\n          source = [source]\r\n        }\r\n\r\n        if(!Array.isArray(s.animations[i])) {\r\n          s.animations[i] = [s.animations[i]]\r\n        }\r\n\r\n        //if(s.animations[i].length > source.length) {\r\n        //  source.concat = source.concat(s.animations[i].slice(source.length, s.animations[i].length))\r\n        //}\r\n\r\n        for(j = source.length; j--;) {\r\n          // The condition is because some methods return a normal number instead\r\n          // of a SVG.Number\r\n          if(s.animations[i][j] instanceof SVG.Number)\r\n            source[j] = new SVG.Number(source[j])\r\n\r\n          s.animations[i][j] = source[j].morph(s.animations[i][j])\r\n        }\r\n      }\r\n\r\n      for(i in s.attrs){\r\n        s.attrs[i] = new SVG.MorphObj(this.target().attr(i), s.attrs[i])\r\n      }\r\n\r\n      for(i in s.styles){\r\n        s.styles[i] = new SVG.MorphObj(this.target().style(i), s.styles[i])\r\n      }\r\n\r\n      s.initialTransformation = this.target().matrixify()\r\n\r\n      s.init = true\r\n      return this\r\n    }\r\n  , clearQueue: function(){\r\n      this.situations = []\r\n      return this\r\n    }\r\n  , clearCurrent: function(){\r\n      this.situation = null\r\n      return this\r\n    }\r\n    /** stops the animation immediately\r\n     * @param jumpToEnd A Boolean indicating whether to complete the current animation immediately.\r\n     * @param clearQueue A Boolean indicating whether to remove queued animation as well.\r\n     * @return this\r\n     */\r\n  , stop: function(jumpToEnd, clearQueue){\r\n      var active = this.active\r\n      this.active = false\r\n\r\n      if(clearQueue){\r\n        this.clearQueue()\r\n      }\r\n\r\n      if(jumpToEnd && this.situation){\r\n        // initialize the situation if it was not\r\n        !active && this.startCurrent()\r\n        this.atEnd()\r\n      }\r\n\r\n      this.stopAnimFrame()\r\n\r\n      return this.clearCurrent()\r\n    }\r\n\r\n    /** resets the element to the state where the current element has started\r\n     * @return this\r\n     */\r\n  , reset: function(){\r\n      if(this.situation){\r\n        var temp = this.situation\r\n        this.stop()\r\n        this.situation = temp\r\n        this.atStart()\r\n      }\r\n      return this\r\n    }\r\n\r\n    // Stop the currently-running animation, remove all queued animations, and complete all animations for the element.\r\n  , finish: function(){\r\n\r\n      this.stop(true, false)\r\n\r\n      while(this.dequeue().situation && this.stop(true, false));\r\n\r\n      this.clearQueue().clearCurrent()\r\n\r\n      return this\r\n    }\r\n\r\n    // set the internal animation pointer at the start position, before any loops, and updates the visualisation\r\n  , atStart: function() {\r\n      return this.at(0, true)\r\n    }\r\n\r\n    // set the internal animation pointer at the end position, after all the loops, and updates the visualisation\r\n  , atEnd: function() {\r\n      if (this.situation.loops === true) {\r\n        // If in a infinite loop, we end the current iteration\r\n        this.situation.loops = this.situation.loop + 1\r\n      }\r\n\r\n      if(typeof this.situation.loops == 'number') {\r\n        // If performing a finite number of loops, we go after all the loops\r\n        return this.at(this.situation.loops, true)\r\n      } else {\r\n        // If no loops, we just go at the end\r\n        return this.at(1, true)\r\n      }\r\n    }\r\n\r\n    // set the internal animation pointer to the specified position and updates the visualisation\r\n    // if isAbsPos is true, pos is treated as an absolute position\r\n  , at: function(pos, isAbsPos){\r\n      var durDivSpd = this.situation.duration/this._speed\r\n\r\n      this.absPos = pos\r\n      // If pos is not an absolute position, we convert it into one\r\n      if (!isAbsPos) {\r\n        if (this.situation.reversed) this.absPos = 1 - this.absPos\r\n        this.absPos += this.situation.loop\r\n      }\r\n\r\n      this.situation.start = +new Date - this.absPos * durDivSpd\r\n      this.situation.finish = this.situation.start + durDivSpd\r\n\r\n      return this.step(true)\r\n    }\r\n\r\n    /**\r\n     * sets or returns the speed of the animations\r\n     * @param speed null || Number The new speed of the animations\r\n     * @return Number || this\r\n     */\r\n  , speed: function(speed){\r\n      if (speed === 0) return this.pause()\r\n\r\n      if (speed) {\r\n        this._speed = speed\r\n        // We use an absolute position here so that speed can affect the delay before the animation\r\n        return this.at(this.absPos, true)\r\n      } else return this._speed\r\n    }\r\n\r\n    // Make loopable\r\n  , loop: function(times, reverse) {\r\n      var c = this.last()\r\n\r\n      // store total loops\r\n      c.loops = (times != null) ? times : true\r\n      c.loop = 0\r\n\r\n      if(reverse) c.reversing = true\r\n      return this\r\n    }\r\n\r\n    // pauses the animation\r\n  , pause: function(){\r\n      this.paused = true\r\n      this.stopAnimFrame()\r\n\r\n      return this\r\n    }\r\n\r\n    // unpause the animation\r\n  , play: function(){\r\n      if(!this.paused) return this\r\n      this.paused = false\r\n      // We use an absolute position here so that the delay before the animation can be paused\r\n      return this.at(this.absPos, true)\r\n    }\r\n\r\n    /**\r\n     * toggle or set the direction of the animation\r\n     * true sets direction to backwards while false sets it to forwards\r\n     * @param reversed Boolean indicating whether to reverse the animation or not (default: toggle the reverse status)\r\n     * @return this\r\n     */\r\n  , reverse: function(reversed){\r\n      var c = this.last()\r\n\r\n      if(typeof reversed == 'undefined') c.reversed = !c.reversed\r\n      else c.reversed = reversed\r\n\r\n      return this\r\n    }\r\n\r\n\r\n    /**\r\n     * returns a float from 0-1 indicating the progress of the current animation\r\n     * @param eased Boolean indicating whether the returned position should be eased or not\r\n     * @return number\r\n     */\r\n  , progress: function(easeIt){\r\n      return easeIt ? this.situation.ease(this.pos) : this.pos\r\n    }\r\n\r\n    /**\r\n     * adds a callback function which is called when the current animation is finished\r\n     * @param fn Function which should be executed as callback\r\n     * @return number\r\n     */\r\n  , after: function(fn){\r\n      var c = this.last()\r\n        , wrapper = function wrapper(e){\r\n            if(e.detail.situation == c){\r\n              fn.call(this, c)\r\n              this.off('finished.fx', wrapper) // prevent memory leak\r\n            }\r\n          }\r\n\r\n      this.target().on('finished.fx', wrapper)\r\n\r\n      return this._callStart()\r\n    }\r\n\r\n    // adds a callback which is called whenever one animation step is performed\r\n  , during: function(fn){\r\n      var c = this.last()\r\n        , wrapper = function(e){\r\n            if(e.detail.situation == c){\r\n              fn.call(this, e.detail.pos, SVG.morph(e.detail.pos), e.detail.eased, c)\r\n            }\r\n          }\r\n\r\n      // see above\r\n      this.target().off('during.fx', wrapper).on('during.fx', wrapper)\r\n\r\n      this.after(function(){\r\n        this.off('during.fx', wrapper)\r\n      })\r\n\r\n      return this._callStart()\r\n    }\r\n\r\n    // calls after ALL animations in the queue are finished\r\n  , afterAll: function(fn){\r\n      var wrapper = function wrapper(e){\r\n            fn.call(this)\r\n            this.off('allfinished.fx', wrapper)\r\n          }\r\n\r\n      // see above\r\n      this.target().off('allfinished.fx', wrapper).on('allfinished.fx', wrapper)\r\n\r\n      return this._callStart()\r\n    }\r\n\r\n    // calls on every animation step for all animations\r\n  , duringAll: function(fn){\r\n      var wrapper = function(e){\r\n            fn.call(this, e.detail.pos, SVG.morph(e.detail.pos), e.detail.eased, e.detail.situation)\r\n          }\r\n\r\n      this.target().off('during.fx', wrapper).on('during.fx', wrapper)\r\n\r\n      this.afterAll(function(){\r\n        this.off('during.fx', wrapper)\r\n      })\r\n\r\n      return this._callStart()\r\n    }\r\n\r\n  , last: function(){\r\n      return this.situations.length ? this.situations[this.situations.length-1] : this.situation\r\n    }\r\n\r\n    // adds one property to the animations\r\n  , add: function(method, args, type){\r\n      this.last()[type || 'animations'][method] = args\r\n      return this._callStart()\r\n    }\r\n\r\n    /** perform one step of the animation\r\n     *  @param ignoreTime Boolean indicating whether to ignore time and use position directly or recalculate position based on time\r\n     *  @return this\r\n     */\r\n  , step: function(ignoreTime){\r\n\r\n      // convert current time to an absolute position\r\n      if(!ignoreTime) this.absPos = this.timeToAbsPos(+new Date)\r\n\r\n      // This part convert an absolute position to a position\r\n      if(this.situation.loops !== false) {\r\n        var absPos, absPosInt, lastLoop\r\n\r\n        // If the absolute position is below 0, we just treat it as if it was 0\r\n        absPos = Math.max(this.absPos, 0)\r\n        absPosInt = Math.floor(absPos)\r\n\r\n        if(this.situation.loops === true || absPosInt < this.situation.loops) {\r\n          this.pos = absPos - absPosInt\r\n          lastLoop = this.situation.loop\r\n          this.situation.loop = absPosInt\r\n        } else {\r\n          this.absPos = this.situation.loops\r\n          this.pos = 1\r\n          // The -1 here is because we don't want to toggle reversed when all the loops have been completed\r\n          lastLoop = this.situation.loop - 1\r\n          this.situation.loop = this.situation.loops\r\n        }\r\n\r\n        if(this.situation.reversing) {\r\n          // Toggle reversed if an odd number of loops as occured since the last call of step\r\n          this.situation.reversed = this.situation.reversed != Boolean((this.situation.loop - lastLoop) % 2)\r\n        }\r\n\r\n      } else {\r\n        // If there are no loop, the absolute position must not be above 1\r\n        this.absPos = Math.min(this.absPos, 1)\r\n        this.pos = this.absPos\r\n      }\r\n\r\n      // while the absolute position can be below 0, the position must not be below 0\r\n      if(this.pos < 0) this.pos = 0\r\n\r\n      if(this.situation.reversed) this.pos = 1 - this.pos\r\n\r\n\r\n      // apply easing\r\n      var eased = this.situation.ease(this.pos)\r\n\r\n      // call once-callbacks\r\n      for(var i in this.situation.once){\r\n        if(i > this.lastPos && i <= eased){\r\n          this.situation.once[i].call(this.target(), this.pos, eased)\r\n          delete this.situation.once[i]\r\n        }\r\n      }\r\n\r\n      // fire during callback with position, eased position and current situation as parameter\r\n      if(this.active) this.target().fire('during', {pos: this.pos, eased: eased, fx: this, situation: this.situation})\r\n\r\n      // the user may call stop or finish in the during callback\r\n      // so make sure that we still have a valid situation\r\n      if(!this.situation){\r\n        return this\r\n      }\r\n\r\n      // apply the actual animation to every property\r\n      this.eachAt()\r\n\r\n      // do final code when situation is finished\r\n      if((this.pos == 1 && !this.situation.reversed) || (this.situation.reversed && this.pos == 0)){\r\n\r\n        // stop animation callback\r\n        this.stopAnimFrame()\r\n\r\n        // fire finished callback with current situation as parameter\r\n        this.target().fire('finished', {fx:this, situation: this.situation})\r\n\r\n        if(!this.situations.length){\r\n          this.target().fire('allfinished')\r\n\r\n          // Recheck the length since the user may call animate in the afterAll callback\r\n          if(!this.situations.length){\r\n            this.target().off('.fx') // there shouldnt be any binding left, but to make sure...\r\n            this.active = false\r\n          }\r\n        }\r\n\r\n        // start next animation\r\n        if(this.active) this.dequeue()\r\n        else this.clearCurrent()\r\n\r\n      }else if(!this.paused && this.active){\r\n        // we continue animating when we are not at the end\r\n        this.startAnimFrame()\r\n      }\r\n\r\n      // save last eased position for once callback triggering\r\n      this.lastPos = eased\r\n      return this\r\n\r\n    }\r\n\r\n    // calculates the step for every property and calls block with it\r\n  , eachAt: function(){\r\n      var i, len, at, self = this, target = this.target(), s = this.situation\r\n\r\n      // apply animations which can be called trough a method\r\n      for(i in s.animations){\r\n\r\n        at = [].concat(s.animations[i]).map(function(el){\r\n          return typeof el !== 'string' && el.at ? el.at(s.ease(self.pos), self.pos) : el\r\n        })\r\n\r\n        target[i].apply(target, at)\r\n\r\n      }\r\n\r\n      // apply animation which has to be applied with attr()\r\n      for(i in s.attrs){\r\n\r\n        at = [i].concat(s.attrs[i]).map(function(el){\r\n          return typeof el !== 'string' && el.at ? el.at(s.ease(self.pos), self.pos) : el\r\n        })\r\n\r\n        target.attr.apply(target, at)\r\n\r\n      }\r\n\r\n      // apply animation which has to be applied with style()\r\n      for(i in s.styles){\r\n\r\n        at = [i].concat(s.styles[i]).map(function(el){\r\n          return typeof el !== 'string' && el.at ? el.at(s.ease(self.pos), self.pos) : el\r\n        })\r\n\r\n        target.style.apply(target, at)\r\n\r\n      }\r\n\r\n      // animate initialTransformation which has to be chained\r\n      if(s.transforms.length){\r\n\r\n        // get initial initialTransformation\r\n        at = s.initialTransformation\r\n        for(i = 0, len = s.transforms.length; i < len; i++){\r\n\r\n          // get next transformation in chain\r\n          var a = s.transforms[i]\r\n\r\n          // multiply matrix directly\r\n          if(a instanceof SVG.Matrix){\r\n\r\n            if(a.relative){\r\n              at = at.multiply(new SVG.Matrix().morph(a).at(s.ease(this.pos)))\r\n            }else{\r\n              at = at.morph(a).at(s.ease(this.pos))\r\n            }\r\n            continue\r\n          }\r\n\r\n          // when transformation is absolute we have to reset the needed transformation first\r\n          if(!a.relative)\r\n            a.undo(at.extract())\r\n\r\n          // and reapply it after\r\n          at = at.multiply(a.at(s.ease(this.pos)))\r\n\r\n        }\r\n\r\n        // set new matrix on element\r\n        target.matrix(at)\r\n      }\r\n\r\n      return this\r\n\r\n    }\r\n\r\n\r\n    // adds an once-callback which is called at a specific position and never again\r\n  , once: function(pos, fn, isEased){\r\n      var c = this.last()\r\n      if(!isEased) pos = c.ease(pos)\r\n\r\n      c.once[pos] = fn\r\n\r\n      return this\r\n    }\r\n\r\n  , _callStart: function() {\r\n      setTimeout(function(){this.start()}.bind(this), 0)\r\n      return this\r\n    }\r\n\r\n  }\r\n\r\n, parent: SVG.Element\r\n\r\n  // Add method to parent elements\r\n, construct: {\r\n    // Get fx module or create a new one, then animate with given duration and ease\r\n    animate: function(o, ease, delay) {\r\n      return (this.fx || (this.fx = new SVG.FX(this))).animate(o, ease, delay)\r\n    }\r\n  , delay: function(delay){\r\n      return (this.fx || (this.fx = new SVG.FX(this))).delay(delay)\r\n    }\r\n  , stop: function(jumpToEnd, clearQueue) {\r\n      if (this.fx)\r\n        this.fx.stop(jumpToEnd, clearQueue)\r\n\r\n      return this\r\n    }\r\n  , finish: function() {\r\n      if (this.fx)\r\n        this.fx.finish()\r\n\r\n      return this\r\n    }\r\n    // Pause current animation\r\n  , pause: function() {\r\n      if (this.fx)\r\n        this.fx.pause()\r\n\r\n      return this\r\n    }\r\n    // Play paused current animation\r\n  , play: function() {\r\n      if (this.fx)\r\n        this.fx.play()\r\n\r\n      return this\r\n    }\r\n    // Set/Get the speed of the animations\r\n  , speed: function(speed) {\r\n      if (this.fx)\r\n        if (speed == null)\r\n          return this.fx.speed()\r\n        else\r\n          this.fx.speed(speed)\r\n\r\n      return this\r\n    }\r\n  }\r\n\r\n})\r\n\r\n// MorphObj is used whenever no morphable object is given\r\nSVG.MorphObj = SVG.invent({\r\n\r\n  create: function(from, to){\r\n    // prepare color for morphing\r\n    if(SVG.Color.isColor(to)) return new SVG.Color(from).morph(to)\r\n    // check if we have a list of values\r\n    if(SVG.regex.delimiter.test(from)) {\r\n      // prepare path for morphing\r\n      if(SVG.regex.pathLetters.test(from)) return new SVG.PathArray(from).morph(to)\r\n      // prepare value list for morphing\r\n      else return new SVG.Array(from).morph(to)\r\n    }\r\n    // prepare number for morphing\r\n    if(SVG.regex.numberAndUnit.test(to)) return new SVG.Number(from).morph(to)\r\n\r\n    // prepare for plain morphing\r\n    this.value = from\r\n    this.destination = to\r\n  }\r\n\r\n, extend: {\r\n    at: function(pos, real){\r\n      return real < 1 ? this.value : this.destination\r\n    },\r\n\r\n    valueOf: function(){\r\n      return this.value\r\n    }\r\n  }\r\n\r\n})\r\n\r\nSVG.extend(SVG.FX, {\r\n  // Add animatable attributes\r\n  attr: function(a, v, relative) {\r\n    // apply attributes individually\r\n    if (typeof a == 'object') {\r\n      for (var key in a)\r\n        this.attr(key, a[key])\r\n\r\n    } else {\r\n      this.add(a, v, 'attrs')\r\n    }\r\n\r\n    return this\r\n  }\r\n  // Add animatable styles\r\n, style: function(s, v) {\r\n    if (typeof s == 'object')\r\n      for (var key in s)\r\n        this.style(key, s[key])\r\n\r\n    else\r\n      this.add(s, v, 'styles')\r\n\r\n    return this\r\n  }\r\n  // Animatable x-axis\r\n, x: function(x, relative) {\r\n    if(this.target() instanceof SVG.G){\r\n      this.transform({x:x}, relative)\r\n      return this\r\n    }\r\n\r\n    var num = new SVG.Number(x)\r\n    num.relative = relative\r\n    return this.add('x', num)\r\n  }\r\n  // Animatable y-axis\r\n, y: function(y, relative) {\r\n    if(this.target() instanceof SVG.G){\r\n      this.transform({y:y}, relative)\r\n      return this\r\n    }\r\n\r\n    var num = new SVG.Number(y)\r\n    num.relative = relative\r\n    return this.add('y', num)\r\n  }\r\n  // Animatable center x-axis\r\n, cx: function(x) {\r\n    return this.add('cx', new SVG.Number(x))\r\n  }\r\n  // Animatable center y-axis\r\n, cy: function(y) {\r\n    return this.add('cy', new SVG.Number(y))\r\n  }\r\n  // Add animatable move\r\n, move: function(x, y) {\r\n    return this.x(x).y(y)\r\n  }\r\n  // Add animatable center\r\n, center: function(x, y) {\r\n    return this.cx(x).cy(y)\r\n  }\r\n  // Add animatable size\r\n, size: function(width, height) {\r\n    if (this.target() instanceof SVG.Text) {\r\n      // animate font size for Text elements\r\n      this.attr('font-size', width)\r\n\r\n    } else {\r\n      // animate bbox based size for all other elements\r\n      var box\r\n\r\n      if(!width || !height){\r\n        box = this.target().bbox()\r\n      }\r\n\r\n      if(!width){\r\n        width = box.width / box.height  * height\r\n      }\r\n\r\n      if(!height){\r\n        height = box.height / box.width  * width\r\n      }\r\n\r\n      this.add('width' , new SVG.Number(width))\r\n          .add('height', new SVG.Number(height))\r\n\r\n    }\r\n\r\n    return this\r\n  }\r\n  // Add animatable width\r\n, width: function(width) {\r\n    return this.add('width', new SVG.Number(width))\r\n  }\r\n  // Add animatable height\r\n, height: function(height) {\r\n    return this.add('height', new SVG.Number(height))\r\n  }\r\n  // Add animatable plot\r\n, plot: function(a, b, c, d) {\r\n    // Lines can be plotted with 4 arguments\r\n    if(arguments.length == 4) {\r\n      return this.plot([a, b, c, d])\r\n    }\r\n\r\n    return this.add('plot', new (this.target().morphArray)(a))\r\n  }\r\n  // Add leading method\r\n, leading: function(value) {\r\n    return this.target().leading ?\r\n      this.add('leading', new SVG.Number(value)) :\r\n      this\r\n  }\r\n  // Add animatable viewbox\r\n, viewbox: function(x, y, width, height) {\r\n    if (this.target() instanceof SVG.Container) {\r\n      this.add('viewbox', new SVG.ViewBox(x, y, width, height))\r\n    }\r\n\r\n    return this\r\n  }\r\n, update: function(o) {\r\n    if (this.target() instanceof SVG.Stop) {\r\n      if (typeof o == 'number' || o instanceof SVG.Number) {\r\n        return this.update({\r\n          offset:  arguments[0]\r\n        , color:   arguments[1]\r\n        , opacity: arguments[2]\r\n        })\r\n      }\r\n\r\n      if (o.opacity != null) this.attr('stop-opacity', o.opacity)\r\n      if (o.color   != null) this.attr('stop-color', o.color)\r\n      if (o.offset  != null) this.attr('offset', o.offset)\r\n    }\r\n\r\n    return this\r\n  }\r\n})\r\n\nSVG.Box = SVG.invent({\r\n  create: function(x, y, width, height) {\r\n    if (typeof x == 'object' && !(x instanceof SVG.Element)) {\r\n      // chromes getBoundingClientRect has no x and y property\r\n      return SVG.Box.call(this, x.left != null ? x.left : x.x , x.top != null ? x.top : x.y, x.width, x.height)\r\n    } else if (arguments.length == 4) {\r\n      this.x = x\r\n      this.y = y\r\n      this.width = width\r\n      this.height = height\r\n    }\r\n\r\n    // add center, right, bottom...\r\n    fullBox(this)\r\n  }\r\n, extend: {\r\n    // Merge rect box with another, return a new instance\r\n    merge: function(box) {\r\n      var b = new this.constructor()\r\n\r\n      // merge boxes\r\n      b.x      = Math.min(this.x, box.x)\r\n      b.y      = Math.min(this.y, box.y)\r\n      b.width  = Math.max(this.x + this.width,  box.x + box.width)  - b.x\r\n      b.height = Math.max(this.y + this.height, box.y + box.height) - b.y\r\n\r\n      return fullBox(b)\r\n    }\r\n\r\n  , transform: function(m) {\r\n      var xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, p, bbox\r\n\r\n      var pts = [\r\n        new SVG.Point(this.x, this.y),\r\n        new SVG.Point(this.x2, this.y),\r\n        new SVG.Point(this.x, this.y2),\r\n        new SVG.Point(this.x2, this.y2)\r\n      ]\r\n\r\n      pts.forEach(function(p) {\r\n        p = p.transform(m)\r\n        xMin = Math.min(xMin,p.x)\r\n        xMax = Math.max(xMax,p.x)\r\n        yMin = Math.min(yMin,p.y)\r\n        yMax = Math.max(yMax,p.y)\r\n      })\r\n\r\n      bbox = new this.constructor()\r\n      bbox.x = xMin\r\n      bbox.width = xMax-xMin\r\n      bbox.y = yMin\r\n      bbox.height = yMax-yMin\r\n\r\n      fullBox(bbox)\r\n\r\n      return bbox\r\n    }\r\n  }\r\n})\r\n\r\nSVG.BBox = SVG.invent({\r\n  // Initialize\r\n  create: function(element) {\r\n    SVG.Box.apply(this, [].slice.call(arguments))\r\n\r\n    // get values if element is given\r\n    if (element instanceof SVG.Element) {\r\n      var box\r\n\r\n      // yes this is ugly, but Firefox can be a pain when it comes to elements that are not yet rendered\r\n      try {\r\n\r\n        if (!document.documentElement.contains){\r\n          // This is IE - it does not support contains() for top-level SVGs\r\n          var topParent = element.node\r\n          while (topParent.parentNode){\r\n            topParent = topParent.parentNode\r\n          }\r\n          if (topParent != document) throw new Exception('Element not in the dom')\r\n        } else {\r\n          // the element is NOT in the dom, throw error\r\n          if(!document.documentElement.contains(element.node)) throw new Exception('Element not in the dom')\r\n        }\r\n\r\n        // find native bbox\r\n        box = element.node.getBBox()\r\n      } catch(e) {\r\n        if(element instanceof SVG.Shape){\r\n          var clone = element.clone(SVG.parser.draw.instance).show()\r\n          box = clone.node.getBBox()\r\n          clone.remove()\r\n        }else{\r\n          box = {\r\n            x:      element.node.clientLeft\r\n          , y:      element.node.clientTop\r\n          , width:  element.node.clientWidth\r\n          , height: element.node.clientHeight\r\n          }\r\n        }\r\n      }\r\n\r\n      SVG.Box.call(this, box)\r\n    }\r\n\r\n  }\r\n\r\n  // Define ancestor\r\n, inherit: SVG.Box\r\n\r\n  // Define Parent\r\n, parent: SVG.Element\r\n\r\n  // Constructor\r\n, construct: {\r\n    // Get bounding box\r\n    bbox: function() {\r\n      return new SVG.BBox(this)\r\n    }\r\n  }\r\n\r\n})\r\n\r\nSVG.BBox.prototype.constructor = SVG.BBox\r\n\r\n\r\nSVG.extend(SVG.Element, {\r\n  tbox: function(){\r\n    console.warn('Use of TBox is deprecated and mapped to RBox. Use .rbox() instead.')\r\n    return this.rbox(this.doc())\r\n  }\r\n})\r\n\r\nSVG.RBox = SVG.invent({\r\n  // Initialize\r\n  create: function(element) {\r\n    SVG.Box.apply(this, [].slice.call(arguments))\r\n\r\n    if (element instanceof SVG.Element) {\r\n      SVG.Box.call(this, element.node.getBoundingClientRect())\r\n    }\r\n  }\r\n\r\n, inherit: SVG.Box\r\n\r\n  // define Parent\r\n, parent: SVG.Element\r\n\r\n, extend: {\r\n    addOffset: function() {\r\n      // offset by window scroll position, because getBoundingClientRect changes when window is scrolled\r\n      this.x += window.pageXOffset\r\n      this.y += window.pageYOffset\r\n      return this\r\n    }\r\n  }\r\n\r\n  // Constructor\r\n, construct: {\r\n    // Get rect box\r\n    rbox: function(el) {\r\n      if (el) return new SVG.RBox(this).transform(el.screenCTM().inverse())\r\n      return new SVG.RBox(this).addOffset()\r\n    }\r\n  }\r\n\r\n})\r\n\r\nSVG.RBox.prototype.constructor = SVG.RBox\r\n\nSVG.Matrix = SVG.invent({\r\n  // Initialize\r\n  create: function(source) {\r\n    var i, base = arrayToMatrix([1, 0, 0, 1, 0, 0])\r\n\r\n    // ensure source as object\r\n    source = source instanceof SVG.Element ?\r\n      source.matrixify() :\r\n    typeof source === 'string' ?\r\n      arrayToMatrix(source.split(SVG.regex.delimiter).map(parseFloat)) :\r\n    arguments.length == 6 ?\r\n      arrayToMatrix([].slice.call(arguments)) :\r\n    Array.isArray(source) ?\r\n      arrayToMatrix(source) :\r\n    typeof source === 'object' ?\r\n      source : base\r\n\r\n    // merge source\r\n    for (i = abcdef.length - 1; i >= 0; --i)\r\n      this[abcdef[i]] = source[abcdef[i]] != null ?\r\n        source[abcdef[i]] : base[abcdef[i]]\r\n  }\r\n\r\n  // Add methods\r\n, extend: {\r\n    // Extract individual transformations\r\n    extract: function() {\r\n      // find delta transform points\r\n      var px    = deltaTransformPoint(this, 0, 1)\r\n        , py    = deltaTransformPoint(this, 1, 0)\r\n        , skewX = 180 / Math.PI * Math.atan2(px.y, px.x) - 90\r\n\r\n      return {\r\n        // translation\r\n        x:        this.e\r\n      , y:        this.f\r\n      , transformedX:(this.e * Math.cos(skewX * Math.PI / 180) + this.f * Math.sin(skewX * Math.PI / 180)) / Math.sqrt(this.a * this.a + this.b * this.b)\r\n      , transformedY:(this.f * Math.cos(skewX * Math.PI / 180) + this.e * Math.sin(-skewX * Math.PI / 180)) / Math.sqrt(this.c * this.c + this.d * this.d)\r\n        // skew\r\n      , skewX:    -skewX\r\n      , skewY:    180 / Math.PI * Math.atan2(py.y, py.x)\r\n        // scale\r\n      , scaleX:   Math.sqrt(this.a * this.a + this.b * this.b)\r\n      , scaleY:   Math.sqrt(this.c * this.c + this.d * this.d)\r\n        // rotation\r\n      , rotation: skewX\r\n      , a: this.a\r\n      , b: this.b\r\n      , c: this.c\r\n      , d: this.d\r\n      , e: this.e\r\n      , f: this.f\r\n      , matrix: new SVG.Matrix(this)\r\n      }\r\n    }\r\n    // Clone matrix\r\n  , clone: function() {\r\n      return new SVG.Matrix(this)\r\n    }\r\n    // Morph one matrix into another\r\n  , morph: function(matrix) {\r\n      // store new destination\r\n      this.destination = new SVG.Matrix(matrix)\r\n\r\n      return this\r\n    }\r\n    // Get morphed matrix at a given position\r\n  , at: function(pos) {\r\n      // make sure a destination is defined\r\n      if (!this.destination) return this\r\n\r\n      // calculate morphed matrix at a given position\r\n      var matrix = new SVG.Matrix({\r\n        a: this.a + (this.destination.a - this.a) * pos\r\n      , b: this.b + (this.destination.b - this.b) * pos\r\n      , c: this.c + (this.destination.c - this.c) * pos\r\n      , d: this.d + (this.destination.d - this.d) * pos\r\n      , e: this.e + (this.destination.e - this.e) * pos\r\n      , f: this.f + (this.destination.f - this.f) * pos\r\n      })\r\n\r\n      return matrix\r\n    }\r\n    // Multiplies by given matrix\r\n  , multiply: function(matrix) {\r\n      return new SVG.Matrix(this.native().multiply(parseMatrix(matrix).native()))\r\n    }\r\n    // Inverses matrix\r\n  , inverse: function() {\r\n      return new SVG.Matrix(this.native().inverse())\r\n    }\r\n    // Translate matrix\r\n  , translate: function(x, y) {\r\n      return new SVG.Matrix(this.native().translate(x || 0, y || 0))\r\n    }\r\n    // Scale matrix\r\n  , scale: function(x, y, cx, cy) {\r\n      // support uniformal scale\r\n      if (arguments.length == 1) {\r\n        y = x\r\n      } else if (arguments.length == 3) {\r\n        cy = cx\r\n        cx = y\r\n        y = x\r\n      }\r\n\r\n      return this.around(cx, cy, new SVG.Matrix(x, 0, 0, y, 0, 0))\r\n    }\r\n    // Rotate matrix\r\n  , rotate: function(r, cx, cy) {\r\n      // convert degrees to radians\r\n      r = SVG.utils.radians(r)\r\n\r\n      return this.around(cx, cy, new SVG.Matrix(Math.cos(r), Math.sin(r), -Math.sin(r), Math.cos(r), 0, 0))\r\n    }\r\n    // Flip matrix on x or y, at a given offset\r\n  , flip: function(a, o) {\r\n      return a == 'x' ?\r\n          this.scale(-1, 1, o, 0) :\r\n        a == 'y' ?\r\n          this.scale(1, -1, 0, o) :\r\n          this.scale(-1, -1, a, o != null ? o : a)\r\n    }\r\n    // Skew\r\n  , skew: function(x, y, cx, cy) {\r\n      // support uniformal skew\r\n      if (arguments.length == 1) {\r\n        y = x\r\n      } else if (arguments.length == 3) {\r\n        cy = cx\r\n        cx = y\r\n        y = x\r\n      }\r\n\r\n      // convert degrees to radians\r\n      x = SVG.utils.radians(x)\r\n      y = SVG.utils.radians(y)\r\n\r\n      return this.around(cx, cy, new SVG.Matrix(1, Math.tan(y), Math.tan(x), 1, 0, 0))\r\n    }\r\n    // SkewX\r\n  , skewX: function(x, cx, cy) {\r\n      return this.skew(x, 0, cx, cy)\r\n    }\r\n    // SkewY\r\n  , skewY: function(y, cx, cy) {\r\n      return this.skew(0, y, cx, cy)\r\n    }\r\n    // Transform around a center point\r\n  , around: function(cx, cy, matrix) {\r\n      return this\r\n        .multiply(new SVG.Matrix(1, 0, 0, 1, cx || 0, cy || 0))\r\n        .multiply(matrix)\r\n        .multiply(new SVG.Matrix(1, 0, 0, 1, -cx || 0, -cy || 0))\r\n    }\r\n    // Convert to native SVGMatrix\r\n  , native: function() {\r\n      // create new matrix\r\n      var matrix = SVG.parser.native.createSVGMatrix()\r\n\r\n      // update with current values\r\n      for (var i = abcdef.length - 1; i >= 0; i--)\r\n        matrix[abcdef[i]] = this[abcdef[i]]\r\n\r\n      return matrix\r\n    }\r\n    // Convert matrix to string\r\n  , toString: function() {\r\n      // Construct the matrix directly, avoid values that are too small\r\n      return 'matrix(' + float32String(this.a) + ',' + float32String(this.b)\r\n        + ',' + float32String(this.c) + ',' + float32String(this.d)\r\n        + ',' + float32String(this.e) + ',' + float32String(this.f)\r\n        + ')'\r\n    }\r\n  }\r\n\r\n  // Define parent\r\n, parent: SVG.Element\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Get current matrix\r\n    ctm: function() {\r\n      return new SVG.Matrix(this.node.getCTM())\r\n    },\r\n    // Get current screen matrix\r\n    screenCTM: function() {\r\n      /* https://bugzilla.mozilla.org/show_bug.cgi?id=1344537\r\n         This is needed because FF does not return the transformation matrix\r\n         for the inner coordinate system when getScreenCTM() is called on nested svgs.\r\n         However all other Browsers do that */\r\n      if(this instanceof SVG.Nested) {\r\n        var rect = this.rect(1,1)\r\n        var m = rect.node.getScreenCTM()\r\n        rect.remove()\r\n        return new SVG.Matrix(m)\r\n      }\r\n      return new SVG.Matrix(this.node.getScreenCTM())\r\n    }\r\n\r\n  }\r\n\r\n})\r\n\nSVG.Point = SVG.invent({\r\n  // Initialize\r\n  create: function(x,y) {\r\n    var i, source, base = {x:0, y:0}\r\n\r\n    // ensure source as object\r\n    source = Array.isArray(x) ?\r\n      {x:x[0], y:x[1]} :\r\n    typeof x === 'object' ?\r\n      {x:x.x, y:x.y} :\r\n    x != null ?\r\n      {x:x, y:(y != null ? y : x)} : base // If y has no value, then x is used has its value\r\n\r\n    // merge source\r\n    this.x = source.x\r\n    this.y = source.y\r\n  }\r\n\r\n  // Add methods\r\n, extend: {\r\n    // Clone point\r\n    clone: function() {\r\n      return new SVG.Point(this)\r\n    }\r\n    // Morph one point into another\r\n  , morph: function(x, y) {\r\n      // store new destination\r\n      this.destination = new SVG.Point(x, y)\r\n\r\n      return this\r\n    }\r\n    // Get morphed point at a given position\r\n  , at: function(pos) {\r\n      // make sure a destination is defined\r\n      if (!this.destination) return this\r\n\r\n      // calculate morphed matrix at a given position\r\n      var point = new SVG.Point({\r\n        x: this.x + (this.destination.x - this.x) * pos\r\n      , y: this.y + (this.destination.y - this.y) * pos\r\n      })\r\n\r\n      return point\r\n    }\r\n    // Convert to native SVGPoint\r\n  , native: function() {\r\n      // create new point\r\n      var point = SVG.parser.native.createSVGPoint()\r\n\r\n      // update with current values\r\n      point.x = this.x\r\n      point.y = this.y\r\n\r\n      return point\r\n    }\r\n    // transform point with matrix\r\n  , transform: function(matrix) {\r\n      return new SVG.Point(this.native().matrixTransform(matrix.native()))\r\n    }\r\n\r\n  }\r\n\r\n})\r\n\r\nSVG.extend(SVG.Element, {\r\n\r\n  // Get point\r\n  point: function(x, y) {\r\n    return new SVG.Point(x,y).transform(this.screenCTM().inverse());\r\n  }\r\n\r\n})\r\n\nSVG.extend(SVG.Element, {\r\n  // Set svg element attribute\r\n  attr: function(a, v, n) {\r\n    // act as full getter\r\n    if (a == null) {\r\n      // get an object of attributes\r\n      a = {}\r\n      v = this.node.attributes\r\n      for (n = v.length - 1; n >= 0; n--)\r\n        a[v[n].nodeName] = SVG.regex.isNumber.test(v[n].nodeValue) ? parseFloat(v[n].nodeValue) : v[n].nodeValue\r\n\r\n      return a\r\n\r\n    } else if (typeof a == 'object') {\r\n      // apply every attribute individually if an object is passed\r\n      for (v in a) this.attr(v, a[v])\r\n\r\n    } else if (v === null) {\r\n        // remove value\r\n        this.node.removeAttribute(a)\r\n\r\n    } else if (v == null) {\r\n      // act as a getter if the first and only argument is not an object\r\n      v = this.node.getAttribute(a)\r\n      return v == null ?\r\n        SVG.defaults.attrs[a] :\r\n      SVG.regex.isNumber.test(v) ?\r\n        parseFloat(v) : v\r\n\r\n    } else {\r\n      // BUG FIX: some browsers will render a stroke if a color is given even though stroke width is 0\r\n      if (a == 'stroke-width')\r\n        this.attr('stroke', parseFloat(v) > 0 ? this._stroke : null)\r\n      else if (a == 'stroke')\r\n        this._stroke = v\r\n\r\n      // convert image fill and stroke to patterns\r\n      if (a == 'fill' || a == 'stroke') {\r\n        if (SVG.regex.isImage.test(v))\r\n          v = this.doc().defs().image(v, 0, 0)\r\n\r\n        if (v instanceof SVG.Image)\r\n          v = this.doc().defs().pattern(0, 0, function() {\r\n            this.add(v)\r\n          })\r\n      }\r\n\r\n      // ensure correct numeric values (also accepts NaN and Infinity)\r\n      if (typeof v === 'number')\r\n        v = new SVG.Number(v)\r\n\r\n      // ensure full hex color\r\n      else if (SVG.Color.isColor(v))\r\n        v = new SVG.Color(v)\r\n\r\n      // parse array values\r\n      else if (Array.isArray(v))\r\n        v = new SVG.Array(v)\r\n\r\n      // if the passed attribute is leading...\r\n      if (a == 'leading') {\r\n        // ... call the leading method instead\r\n        if (this.leading)\r\n          this.leading(v)\r\n      } else {\r\n        // set given attribute on node\r\n        typeof n === 'string' ?\r\n          this.node.setAttributeNS(n, a, v.toString()) :\r\n          this.node.setAttribute(a, v.toString())\r\n      }\r\n\r\n      // rebuild if required\r\n      if (this.rebuild && (a == 'font-size' || a == 'x'))\r\n        this.rebuild(a, v)\r\n    }\r\n\r\n    return this\r\n  }\r\n})\nSVG.extend(SVG.Element, {\r\n  // Add transformations\r\n  transform: function(o, relative) {\r\n    // get target in case of the fx module, otherwise reference this\r\n    var target = this\r\n      , matrix, bbox\r\n\r\n    // act as a getter\r\n    if (typeof o !== 'object') {\r\n      // get current matrix\r\n      matrix = new SVG.Matrix(target).extract()\r\n\r\n      return typeof o === 'string' ? matrix[o] : matrix\r\n    }\r\n\r\n    // get current matrix\r\n    matrix = new SVG.Matrix(target)\r\n\r\n    // ensure relative flag\r\n    relative = !!relative || !!o.relative\r\n\r\n    // act on matrix\r\n    if (o.a != null) {\r\n      matrix = relative ?\r\n        // relative\r\n        matrix.multiply(new SVG.Matrix(o)) :\r\n        // absolute\r\n        new SVG.Matrix(o)\r\n\r\n    // act on rotation\r\n    } else if (o.rotation != null) {\r\n      // ensure centre point\r\n      ensureCentre(o, target)\r\n\r\n      // apply transformation\r\n      matrix = relative ?\r\n        // relative\r\n        matrix.rotate(o.rotation, o.cx, o.cy) :\r\n        // absolute\r\n        matrix.rotate(o.rotation - matrix.extract().rotation, o.cx, o.cy)\r\n\r\n    // act on scale\r\n    } else if (o.scale != null || o.scaleX != null || o.scaleY != null) {\r\n      // ensure centre point\r\n      ensureCentre(o, target)\r\n\r\n      // ensure scale values on both axes\r\n      o.scaleX = o.scale != null ? o.scale : o.scaleX != null ? o.scaleX : 1\r\n      o.scaleY = o.scale != null ? o.scale : o.scaleY != null ? o.scaleY : 1\r\n\r\n      if (!relative) {\r\n        // absolute; multiply inversed values\r\n        var e = matrix.extract()\r\n        o.scaleX = o.scaleX * 1 / e.scaleX\r\n        o.scaleY = o.scaleY * 1 / e.scaleY\r\n      }\r\n\r\n      matrix = matrix.scale(o.scaleX, o.scaleY, o.cx, o.cy)\r\n\r\n    // act on skew\r\n    } else if (o.skew != null || o.skewX != null || o.skewY != null) {\r\n      // ensure centre point\r\n      ensureCentre(o, target)\r\n\r\n      // ensure skew values on both axes\r\n      o.skewX = o.skew != null ? o.skew : o.skewX != null ? o.skewX : 0\r\n      o.skewY = o.skew != null ? o.skew : o.skewY != null ? o.skewY : 0\r\n\r\n      if (!relative) {\r\n        // absolute; reset skew values\r\n        var e = matrix.extract()\r\n        matrix = matrix.multiply(new SVG.Matrix().skew(e.skewX, e.skewY, o.cx, o.cy).inverse())\r\n      }\r\n\r\n      matrix = matrix.skew(o.skewX, o.skewY, o.cx, o.cy)\r\n\r\n    // act on flip\r\n    } else if (o.flip) {\r\n      if(o.flip == 'x' || o.flip == 'y') {\r\n        o.offset = o.offset == null ? target.bbox()['c' + o.flip] : o.offset\r\n      } else {\r\n        if(o.offset == null) {\r\n          bbox = target.bbox()\r\n          o.flip = bbox.cx\r\n          o.offset = bbox.cy\r\n        } else {\r\n          o.flip = o.offset\r\n        }\r\n      }\r\n\r\n      matrix = new SVG.Matrix().flip(o.flip, o.offset)\r\n\r\n    // act on translate\r\n    } else if (o.x != null || o.y != null) {\r\n      if (relative) {\r\n        // relative\r\n        matrix = matrix.translate(o.x, o.y)\r\n      } else {\r\n        // absolute\r\n        if (o.x != null) matrix.e = o.x\r\n        if (o.y != null) matrix.f = o.y\r\n      }\r\n    }\r\n\r\n    return this.attr('transform', matrix)\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.FX, {\r\n  transform: function(o, relative) {\r\n    // get target in case of the fx module, otherwise reference this\r\n    var target = this.target()\r\n      , matrix, bbox\r\n\r\n    // act as a getter\r\n    if (typeof o !== 'object') {\r\n      // get current matrix\r\n      matrix = new SVG.Matrix(target).extract()\r\n\r\n      return typeof o === 'string' ? matrix[o] : matrix\r\n    }\r\n\r\n    // ensure relative flag\r\n    relative = !!relative || !!o.relative\r\n\r\n    // act on matrix\r\n    if (o.a != null) {\r\n      matrix = new SVG.Matrix(o)\r\n\r\n    // act on rotation\r\n    } else if (o.rotation != null) {\r\n      // ensure centre point\r\n      ensureCentre(o, target)\r\n\r\n      // apply transformation\r\n      matrix = new SVG.Rotate(o.rotation, o.cx, o.cy)\r\n\r\n    // act on scale\r\n    } else if (o.scale != null || o.scaleX != null || o.scaleY != null) {\r\n      // ensure centre point\r\n      ensureCentre(o, target)\r\n\r\n      // ensure scale values on both axes\r\n      o.scaleX = o.scale != null ? o.scale : o.scaleX != null ? o.scaleX : 1\r\n      o.scaleY = o.scale != null ? o.scale : o.scaleY != null ? o.scaleY : 1\r\n\r\n      matrix = new SVG.Scale(o.scaleX, o.scaleY, o.cx, o.cy)\r\n\r\n    // act on skew\r\n    } else if (o.skewX != null || o.skewY != null) {\r\n      // ensure centre point\r\n      ensureCentre(o, target)\r\n\r\n      // ensure skew values on both axes\r\n      o.skewX = o.skewX != null ? o.skewX : 0\r\n      o.skewY = o.skewY != null ? o.skewY : 0\r\n\r\n      matrix = new SVG.Skew(o.skewX, o.skewY, o.cx, o.cy)\r\n\r\n    // act on flip\r\n    } else if (o.flip) {\r\n      if(o.flip == 'x' || o.flip == 'y') {\r\n        o.offset = o.offset == null ? target.bbox()['c' + o.flip] : o.offset\r\n      } else {\r\n        if(o.offset == null) {\r\n          bbox = target.bbox()\r\n          o.flip = bbox.cx\r\n          o.offset = bbox.cy\r\n        } else {\r\n          o.flip = o.offset\r\n        }\r\n      }\r\n\r\n      matrix = new SVG.Matrix().flip(o.flip, o.offset)\r\n\r\n    // act on translate\r\n    } else if (o.x != null || o.y != null) {\r\n      matrix = new SVG.Translate(o.x, o.y)\r\n    }\r\n\r\n    if(!matrix) return this\r\n\r\n    matrix.relative = relative\r\n\r\n    this.last().transforms.push(matrix)\r\n\r\n    return this._callStart()\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.Element, {\r\n  // Reset all transformations\r\n  untransform: function() {\r\n    return this.attr('transform', null)\r\n  },\r\n  // merge the whole transformation chain into one matrix and returns it\r\n  matrixify: function() {\r\n\r\n    var matrix = (this.attr('transform') || '')\r\n      // split transformations\r\n      .split(SVG.regex.transforms).slice(0,-1).map(function(str){\r\n        // generate key => value pairs\r\n        var kv = str.trim().split('(')\r\n        return [kv[0], kv[1].split(SVG.regex.delimiter).map(function(str){ return parseFloat(str) })]\r\n      })\r\n      // merge every transformation into one matrix\r\n      .reduce(function(matrix, transform){\r\n\r\n        if(transform[0] == 'matrix') return matrix.multiply(arrayToMatrix(transform[1]))\r\n        return matrix[transform[0]].apply(matrix, transform[1])\r\n\r\n      }, new SVG.Matrix())\r\n\r\n    return matrix\r\n  },\r\n  // add an element to another parent without changing the visual representation on the screen\r\n  toParent: function(parent) {\r\n    if(this == parent) return this\r\n    var ctm = this.screenCTM()\r\n    var pCtm = parent.screenCTM().inverse()\r\n\r\n    this.addTo(parent).untransform().transform(pCtm.multiply(ctm))\r\n\r\n    return this\r\n  },\r\n  // same as above with parent equals root-svg\r\n  toDoc: function() {\r\n    return this.toParent(this.doc())\r\n  }\r\n\r\n})\r\n\r\nSVG.Transformation = SVG.invent({\r\n\r\n  create: function(source, inversed){\r\n\r\n    if(arguments.length > 1 && typeof inversed != 'boolean'){\r\n      return this.constructor.call(this, [].slice.call(arguments))\r\n    }\r\n\r\n    if(Array.isArray(source)){\r\n      for(var i = 0, len = this.arguments.length; i < len; ++i){\r\n        this[this.arguments[i]] = source[i]\r\n      }\r\n    } else if(typeof source == 'object'){\r\n      for(var i = 0, len = this.arguments.length; i < len; ++i){\r\n        this[this.arguments[i]] = source[this.arguments[i]]\r\n      }\r\n    }\r\n\r\n    this.inversed = false\r\n\r\n    if(inversed === true){\r\n      this.inversed = true\r\n    }\r\n\r\n  }\r\n\r\n, extend: {\r\n\r\n    arguments: []\r\n  , method: ''\r\n\r\n  , at: function(pos){\r\n\r\n      var params = []\r\n\r\n      for(var i = 0, len = this.arguments.length; i < len; ++i){\r\n        params.push(this[this.arguments[i]])\r\n      }\r\n\r\n      var m = this._undo || new SVG.Matrix()\r\n\r\n      m = new SVG.Matrix().morph(SVG.Matrix.prototype[this.method].apply(m, params)).at(pos)\r\n\r\n      return this.inversed ? m.inverse() : m\r\n\r\n    }\r\n\r\n  , undo: function(o){\r\n      for(var i = 0, len = this.arguments.length; i < len; ++i){\r\n        o[this.arguments[i]] = typeof this[this.arguments[i]] == 'undefined' ? 0 : o[this.arguments[i]]\r\n      }\r\n\r\n      // The method SVG.Matrix.extract which was used before calling this\r\n      // method to obtain a value for the parameter o doesn't return a cx and\r\n      // a cy so we use the ones that were provided to this object at its creation\r\n      o.cx = this.cx\r\n      o.cy = this.cy\r\n\r\n      this._undo = new SVG[capitalize(this.method)](o, true).at(1)\r\n\r\n      return this\r\n    }\r\n\r\n  }\r\n\r\n})\r\n\r\nSVG.Translate = SVG.invent({\r\n\r\n  parent: SVG.Matrix\r\n, inherit: SVG.Transformation\r\n\r\n, create: function(source, inversed){\r\n    this.constructor.apply(this, [].slice.call(arguments))\r\n  }\r\n\r\n, extend: {\r\n    arguments: ['transformedX', 'transformedY']\r\n  , method: 'translate'\r\n  }\r\n\r\n})\r\n\r\nSVG.Rotate = SVG.invent({\r\n\r\n  parent: SVG.Matrix\r\n, inherit: SVG.Transformation\r\n\r\n, create: function(source, inversed){\r\n    this.constructor.apply(this, [].slice.call(arguments))\r\n  }\r\n\r\n, extend: {\r\n    arguments: ['rotation', 'cx', 'cy']\r\n  , method: 'rotate'\r\n  , at: function(pos){\r\n      var m = new SVG.Matrix().rotate(new SVG.Number().morph(this.rotation - (this._undo ? this._undo.rotation : 0)).at(pos), this.cx, this.cy)\r\n      return this.inversed ? m.inverse() : m\r\n    }\r\n  , undo: function(o){\r\n      this._undo = o\r\n      return this\r\n    }\r\n  }\r\n\r\n})\r\n\r\nSVG.Scale = SVG.invent({\r\n\r\n  parent: SVG.Matrix\r\n, inherit: SVG.Transformation\r\n\r\n, create: function(source, inversed){\r\n    this.constructor.apply(this, [].slice.call(arguments))\r\n  }\r\n\r\n, extend: {\r\n    arguments: ['scaleX', 'scaleY', 'cx', 'cy']\r\n  , method: 'scale'\r\n  }\r\n\r\n})\r\n\r\nSVG.Skew = SVG.invent({\r\n\r\n  parent: SVG.Matrix\r\n, inherit: SVG.Transformation\r\n\r\n, create: function(source, inversed){\r\n    this.constructor.apply(this, [].slice.call(arguments))\r\n  }\r\n\r\n, extend: {\r\n    arguments: ['skewX', 'skewY', 'cx', 'cy']\r\n  , method: 'skew'\r\n  }\r\n\r\n})\r\n\nSVG.extend(SVG.Element, {\r\n  // Dynamic style generator\r\n  style: function(s, v) {\r\n    if (arguments.length == 0) {\r\n      // get full style\r\n      return this.node.style.cssText || ''\r\n\r\n    } else if (arguments.length < 2) {\r\n      // apply every style individually if an object is passed\r\n      if (typeof s == 'object') {\r\n        for (v in s) this.style(v, s[v])\r\n\r\n      } else if (SVG.regex.isCss.test(s)) {\r\n        // parse css string\r\n        s = s.split(/\\s*;\\s*/)\r\n          // filter out suffix ; and stuff like ;;\r\n          .filter(function(e) { return !!e })\r\n          .map(function(e){ return e.split(/\\s*:\\s*/) })\r\n\r\n        // apply every definition individually\r\n        while (v = s.pop()) {\r\n          this.style(v[0], v[1])\r\n        }\r\n      } else {\r\n        // act as a getter if the first and only argument is not an object\r\n        return this.node.style[camelCase(s)]\r\n      }\r\n\r\n    } else {\r\n      this.node.style[camelCase(s)] = v === null || SVG.regex.isBlank.test(v) ? '' : v\r\n    }\r\n\r\n    return this\r\n  }\r\n})\nSVG.Parent = SVG.invent({\r\n  // Initialize node\r\n  create: function(element) {\r\n    this.constructor.call(this, element)\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Element\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Returns all child elements\r\n    children: function() {\r\n      return SVG.utils.map(SVG.utils.filterSVGElements(this.node.childNodes), function(node) {\r\n        return SVG.adopt(node)\r\n      })\r\n    }\r\n    // Add given element at a position\r\n  , add: function(element, i) {\r\n      if (i == null)\r\n        this.node.appendChild(element.node)\r\n      else if (element.node != this.node.childNodes[i])\r\n        this.node.insertBefore(element.node, this.node.childNodes[i])\r\n\r\n      return this\r\n    }\r\n    // Basically does the same as `add()` but returns the added element instead\r\n  , put: function(element, i) {\r\n      this.add(element, i)\r\n      return element\r\n    }\r\n    // Checks if the given element is a child\r\n  , has: function(element) {\r\n      return this.index(element) >= 0\r\n    }\r\n    // Gets index of given element\r\n  , index: function(element) {\r\n      return [].slice.call(this.node.childNodes).indexOf(element.node)\r\n    }\r\n    // Get a element at the given index\r\n  , get: function(i) {\r\n      return SVG.adopt(this.node.childNodes[i])\r\n    }\r\n    // Get first child\r\n  , first: function() {\r\n      return this.get(0)\r\n    }\r\n    // Get the last child\r\n  , last: function() {\r\n      return this.get(this.node.childNodes.length - 1)\r\n    }\r\n    // Iterates over all children and invokes a given block\r\n  , each: function(block, deep) {\r\n      var i, il\r\n        , children = this.children()\r\n\r\n      for (i = 0, il = children.length; i < il; i++) {\r\n        if (children[i] instanceof SVG.Element)\r\n          block.apply(children[i], [i, children])\r\n\r\n        if (deep && (children[i] instanceof SVG.Container))\r\n          children[i].each(block, deep)\r\n      }\r\n\r\n      return this\r\n    }\r\n    // Remove a given child\r\n  , removeElement: function(element) {\r\n      this.node.removeChild(element.node)\r\n\r\n      return this\r\n    }\r\n    // Remove all elements in this container\r\n  , clear: function() {\r\n      // remove children\r\n      while(this.node.hasChildNodes())\r\n        this.node.removeChild(this.node.lastChild)\r\n\r\n      // remove defs reference\r\n      delete this._defs\r\n\r\n      return this\r\n    }\r\n  , // Get defs\r\n    defs: function() {\r\n      return this.doc().defs()\r\n    }\r\n  }\r\n\r\n})\r\n\nSVG.extend(SVG.Parent, {\r\n\r\n  ungroup: function(parent, depth) {\r\n    if(depth === 0 || this instanceof SVG.Defs || this.node == SVG.parser.draw) return this\r\n\r\n    parent = parent || (this instanceof SVG.Doc ? this : this.parent(SVG.Parent))\r\n    depth = depth || Infinity\r\n\r\n    this.each(function(){\r\n      if(this instanceof SVG.Defs) return this\r\n      if(this instanceof SVG.Parent) return this.ungroup(parent, depth-1)\r\n      return this.toParent(parent)\r\n    })\r\n\r\n    this.node.firstChild || this.remove()\r\n\r\n    return this\r\n  },\r\n\r\n  flatten: function(parent, depth) {\r\n    return this.ungroup(parent, depth)\r\n  }\r\n\r\n})\nSVG.Container = SVG.invent({\r\n  // Initialize node\r\n  create: function(element) {\r\n    this.constructor.call(this, element)\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Parent\r\n\r\n})\n\r\nSVG.ViewBox = SVG.invent({\r\n\r\n  create: function(source) {\r\n    var i, base = [0, 0, 0, 0]\r\n\r\n    var x, y, width, height, box, view, we, he\r\n      , wm   = 1 // width multiplier\r\n      , hm   = 1 // height multiplier\r\n      , reg  = /[+-]?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?/gi\r\n\r\n    if(source instanceof SVG.Element){\r\n\r\n      we = source\r\n      he = source\r\n      view = (source.attr('viewBox') || '').match(reg)\r\n      box = source.bbox\r\n\r\n      // get dimensions of current node\r\n      width  = new SVG.Number(source.width())\r\n      height = new SVG.Number(source.height())\r\n\r\n      // find nearest non-percentual dimensions\r\n      while (width.unit == '%') {\r\n        wm *= width.value\r\n        width = new SVG.Number(we instanceof SVG.Doc ? we.parent().offsetWidth : we.parent().width())\r\n        we = we.parent()\r\n      }\r\n      while (height.unit == '%') {\r\n        hm *= height.value\r\n        height = new SVG.Number(he instanceof SVG.Doc ? he.parent().offsetHeight : he.parent().height())\r\n        he = he.parent()\r\n      }\r\n\r\n      // ensure defaults\r\n      this.x      = 0\r\n      this.y      = 0\r\n      this.width  = width  * wm\r\n      this.height = height * hm\r\n      this.zoom   = 1\r\n\r\n      if (view) {\r\n        // get width and height from viewbox\r\n        x      = parseFloat(view[0])\r\n        y      = parseFloat(view[1])\r\n        width  = parseFloat(view[2])\r\n        height = parseFloat(view[3])\r\n\r\n        // calculate zoom accoring to viewbox\r\n        this.zoom = ((this.width / this.height) > (width / height)) ?\r\n          this.height / height :\r\n          this.width  / width\r\n\r\n        // calculate real pixel dimensions on parent SVG.Doc element\r\n        this.x      = x\r\n        this.y      = y\r\n        this.width  = width\r\n        this.height = height\r\n\r\n      }\r\n\r\n    }else{\r\n\r\n      // ensure source as object\r\n      source = typeof source === 'string' ?\r\n        source.match(reg).map(function(el){ return parseFloat(el) }) :\r\n      Array.isArray(source) ?\r\n        source :\r\n      typeof source == 'object' ?\r\n        [source.x, source.y, source.width, source.height] :\r\n      arguments.length == 4 ?\r\n        [].slice.call(arguments) :\r\n        base\r\n\r\n      this.x = source[0]\r\n      this.y = source[1]\r\n      this.width = source[2]\r\n      this.height = source[3]\r\n    }\r\n\r\n\r\n  }\r\n\r\n, extend: {\r\n\r\n    toString: function() {\r\n      return this.x + ' ' + this.y + ' ' + this.width + ' ' + this.height\r\n    }\r\n  , morph: function(x, y, width, height){\r\n      this.destination = new SVG.ViewBox(x, y, width, height)\r\n      return this\r\n    }\r\n\r\n  , at: function(pos) {\r\n\r\n      if(!this.destination) return this\r\n\r\n      return new SVG.ViewBox([\r\n          this.x + (this.destination.x - this.x) * pos\r\n        , this.y + (this.destination.y - this.y) * pos\r\n        , this.width + (this.destination.width - this.width) * pos\r\n        , this.height + (this.destination.height - this.height) * pos\r\n      ])\r\n\r\n    }\r\n\r\n  }\r\n\r\n  // Define parent\r\n, parent: SVG.Container\r\n\r\n  // Add parent method\r\n, construct: {\r\n\r\n    // get/set viewbox\r\n    viewbox: function(x, y, width, height) {\r\n      if (arguments.length == 0)\r\n        // act as a getter if there are no arguments\r\n        return new SVG.ViewBox(this)\r\n\r\n      // otherwise act as a setter\r\n      return this.attr('viewBox', new SVG.ViewBox(x, y, width, height))\r\n    }\r\n\r\n  }\r\n\r\n})\n// Add events to elements\r\n\r\n;[ 'click',\r\n  'dblclick',\r\n  'mousedown',\r\n  'mouseup',\r\n  'mouseover',\r\n  'mouseout',\r\n  'mousemove',\r\n  'mouseenter',\r\n  'mouseleave',\r\n  'touchstart',\r\n  'touchmove',\r\n  'touchleave',\r\n  'touchend',\r\n  'touchcancel' ].forEach(function (event) {\r\n    // add event to SVG.Element\r\n    SVG.Element.prototype[event] = function (f) {\r\n      // bind event to element rather than element node\r\n      if (f == null) {\r\n        SVG.off(this, event)\r\n      } else {\r\n        SVG.on(this, event, f)\r\n      }\r\n      return this\r\n    }\r\n  })\r\n\r\nSVG.listenerId = 0\r\n\r\n// Add event binder in the SVG namespace\r\nSVG.on = function (node, events, listener, binding, options) {\r\n  var l = listener.bind(binding || node)\r\n  var n = node instanceof SVG.Element ? node.node : node\r\n\r\n  // ensure instance object for nodes which are not adopted\r\n  n.instance = n.instance || {_events: {}}\r\n\r\n  var bag = n.instance._events\r\n\r\n  // add id to listener\r\n  if (!listener._svgjsListenerId) { listener._svgjsListenerId = ++SVG.listenerId }\r\n\r\n  events.split(SVG.regex.delimiter).forEach(function (event) {\r\n    var ev = event.split('.')[0]\r\n    var ns = event.split('.')[1] || '*'\r\n\r\n    // ensure valid object\r\n    bag[ev] = bag[ev] || {}\r\n    bag[ev][ns] = bag[ev][ns] || {}\r\n\r\n    // reference listener\r\n    bag[ev][ns][listener._svgjsListenerId] = l\r\n\r\n    // add listener\r\n    n.addEventListener(ev, l, options || false)\r\n  })\r\n}\r\n\r\n// Add event unbinder in the SVG namespace\r\nSVG.off = function (node, events, listener, options) {\r\n  var n = node instanceof SVG.Element ? node.node : node\r\n  if (!n.instance) return\r\n\r\n  // listener can be a function or a number\r\n  if (typeof listener === 'function') {\r\n    listener = listener._svgjsListenerId\r\n    if (!listener) return\r\n  }\r\n\r\n  var bag = n.instance._events\r\n\r\n  ;(events || '').split(SVG.regex.delimiter).forEach(function (event) {\r\n    var ev = event && event.split('.')[0]\r\n    var ns = event && event.split('.')[1]\r\n    var namespace, l\r\n\r\n    if (listener) {\r\n      // remove listener reference\r\n      if (bag[ev] && bag[ev][ns || '*']) {\r\n        // removeListener\r\n        n.removeEventListener(ev, bag[ev][ns || '*'][listener], options || false)\r\n\r\n        delete bag[ev][ns || '*'][listener]\r\n      }\r\n    } else if (ev && ns) {\r\n      // remove all listeners for a namespaced event\r\n      if (bag[ev] && bag[ev][ns]) {\r\n        for (l in bag[ev][ns]) { SVG.off(n, [ev, ns].join('.'), l) }\r\n\r\n        delete bag[ev][ns]\r\n      }\r\n    } else if (ns) {\r\n      // remove all listeners for a specific namespace\r\n      for (event in bag) {\r\n        for (namespace in bag[event]) {\r\n          if (ns === namespace) { SVG.off(n, [event, ns].join('.')) }\r\n        }\r\n      }\r\n    } else if (ev) {\r\n      // remove all listeners for the event\r\n      if (bag[ev]) {\r\n        for (namespace in bag[ev]) { SVG.off(n, [ev, namespace].join('.')) }\r\n\r\n        delete bag[ev]\r\n      }\r\n    } else {\r\n      // remove all listeners on a given node\r\n      for (event in bag) { SVG.off(n, event) }\r\n\r\n      n.instance._events = {}\r\n    }\r\n  })\r\n}\r\n\r\nSVG.extend(SVG.Element, {\r\n  // Bind given event to listener\r\n  on: function (event, listener, binding, options) {\r\n    SVG.on(this, event, listener, binding, options)\r\n    return this\r\n  },\r\n  // Unbind event from listener\r\n  off: function (event, listener) {\r\n    SVG.off(this.node, event, listener)\r\n    return this\r\n  },\r\n  fire: function (event, data) {\r\n    // Dispatch event\r\n    if (event instanceof window.Event) {\r\n      this.node.dispatchEvent(event)\r\n    } else {\r\n      this.node.dispatchEvent(event = new SVG.CustomEvent(event, {detail: data, cancelable: true}))\r\n    }\r\n    this._event = event\r\n    return this\r\n  },\r\n  event: function() {\r\n    return this._event\r\n  }\r\n})\r\n\n\r\nSVG.Defs = SVG.invent({\r\n  // Initialize node\r\n  create: 'defs'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n})\nSVG.G = SVG.invent({\r\n  // Initialize node\r\n  create: 'g'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Move over x-axis\r\n    x: function(x) {\r\n      return x == null ? this.transform('x') : this.transform({ x: x - this.x() }, true)\r\n    }\r\n    // Move over y-axis\r\n  , y: function(y) {\r\n      return y == null ? this.transform('y') : this.transform({ y: y - this.y() }, true)\r\n    }\r\n    // Move by center over x-axis\r\n  , cx: function(x) {\r\n      return x == null ? this.gbox().cx : this.x(x - this.gbox().width / 2)\r\n    }\r\n    // Move by center over y-axis\r\n  , cy: function(y) {\r\n      return y == null ? this.gbox().cy : this.y(y - this.gbox().height / 2)\r\n    }\r\n  , gbox: function() {\r\n\r\n      var bbox  = this.bbox()\r\n        , trans = this.transform()\r\n\r\n      bbox.x  += trans.x\r\n      bbox.x2 += trans.x\r\n      bbox.cx += trans.x\r\n\r\n      bbox.y  += trans.y\r\n      bbox.y2 += trans.y\r\n      bbox.cy += trans.y\r\n\r\n      return bbox\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a group element\r\n    group: function() {\r\n      return this.put(new SVG.G)\r\n    }\r\n  }\r\n})\r\n\nSVG.Doc = SVG.invent({\r\n  // Initialize node\r\n  create: function(element) {\r\n    if (element) {\r\n      // ensure the presence of a dom element\r\n      element = typeof element == 'string' ?\r\n        document.getElementById(element) :\r\n        element\r\n\r\n      // If the target is an svg element, use that element as the main wrapper.\r\n      // This allows svg.js to work with svg documents as well.\r\n      if (element.nodeName == 'svg') {\r\n        this.constructor.call(this, element)\r\n      } else {\r\n        this.constructor.call(this, SVG.create('svg'))\r\n        element.appendChild(this.node)\r\n        this.size('100%', '100%')\r\n      }\r\n\r\n      // set svg element attributes and ensure defs node\r\n      this.namespace().defs()\r\n    }\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Add namespaces\r\n    namespace: function() {\r\n      return this\r\n        .attr({ xmlns: SVG.ns, version: '1.1' })\r\n        .attr('xmlns:xlink', SVG.xlink, SVG.xmlns)\r\n        .attr('xmlns:svgjs', SVG.svgjs, SVG.xmlns)\r\n    }\r\n    // Creates and returns defs element\r\n  , defs: function() {\r\n      if (!this._defs) {\r\n        var defs\r\n\r\n        // Find or create a defs element in this instance\r\n        if (defs = this.node.getElementsByTagName('defs')[0])\r\n          this._defs = SVG.adopt(defs)\r\n        else\r\n          this._defs = new SVG.Defs\r\n\r\n        // Make sure the defs node is at the end of the stack\r\n        this.node.appendChild(this._defs.node)\r\n      }\r\n\r\n      return this._defs\r\n    }\r\n    // custom parent method\r\n  , parent: function() {\r\n      if(!this.node.parentNode || this.node.parentNode.nodeName == '#document' || this.node.parentNode.nodeName == '#document-fragment') return null\r\n      return this.node.parentNode\r\n    }\r\n    // Fix for possible sub-pixel offset. See:\r\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=608812\r\n  , spof: function() {\r\n      var pos = this.node.getScreenCTM()\r\n\r\n      if (pos)\r\n        this\r\n          .style('left', (-pos.e % 1) + 'px')\r\n          .style('top',  (-pos.f % 1) + 'px')\r\n\r\n      return this\r\n    }\r\n\r\n      // Removes the doc from the DOM\r\n  , remove: function() {\r\n      if(this.parent()) {\r\n        this.parent().removeChild(this.node)\r\n      }\r\n\r\n      return this\r\n    }\r\n  , clear: function() {\r\n      // remove children\r\n      while(this.node.hasChildNodes())\r\n        this.node.removeChild(this.node.lastChild)\r\n\r\n      // remove defs reference\r\n      delete this._defs\r\n\r\n      // add back parser\r\n      if(!SVG.parser.draw.parentNode)\r\n        this.node.appendChild(SVG.parser.draw)\r\n\r\n      return this\r\n    }\r\n  , clone: function (parent) {\r\n      // write dom data to the dom so the clone can pickup the data\r\n      this.writeDataToDom()\r\n\r\n      // get reference to node\r\n      var node = this.node\r\n\r\n      // clone element and assign new id\r\n      var clone = assignNewId(node.cloneNode(true))\r\n\r\n      // insert the clone in the given parent or after myself\r\n      if(parent) {\r\n        (parent.node || parent).appendChild(clone.node)\r\n      } else {\r\n        node.parentNode.insertBefore(clone.node, node.nextSibling)\r\n      }\r\n\r\n      return clone\r\n    }\r\n  }\r\n\r\n})\r\n\n// ### This module adds backward / forward functionality to elements.\r\n\r\n//\r\nSVG.extend(SVG.Element, {\r\n  // Get all siblings, including myself\r\n  siblings: function() {\r\n    return this.parent().children()\r\n  }\r\n  // Get the curent position siblings\r\n, position: function() {\r\n    return this.parent().index(this)\r\n  }\r\n  // Get the next element (will return null if there is none)\r\n, next: function() {\r\n    return this.siblings()[this.position() + 1]\r\n  }\r\n  // Get the next element (will return null if there is none)\r\n, previous: function() {\r\n    return this.siblings()[this.position() - 1]\r\n  }\r\n  // Send given element one step forward\r\n, forward: function() {\r\n    var i = this.position() + 1\r\n      , p = this.parent()\r\n\r\n    // move node one step forward\r\n    p.removeElement(this).add(this, i)\r\n\r\n    // make sure defs node is always at the top\r\n    if (p instanceof SVG.Doc)\r\n      p.node.appendChild(p.defs().node)\r\n\r\n    return this\r\n  }\r\n  // Send given element one step backward\r\n, backward: function() {\r\n    var i = this.position()\r\n\r\n    if (i > 0)\r\n      this.parent().removeElement(this).add(this, i - 1)\r\n\r\n    return this\r\n  }\r\n  // Send given element all the way to the front\r\n, front: function() {\r\n    var p = this.parent()\r\n\r\n    // Move node forward\r\n    p.node.appendChild(this.node)\r\n\r\n    // Make sure defs node is always at the top\r\n    if (p instanceof SVG.Doc)\r\n      p.node.appendChild(p.defs().node)\r\n\r\n    return this\r\n  }\r\n  // Send given element all the way to the back\r\n, back: function() {\r\n    if (this.position() > 0)\r\n      this.parent().removeElement(this).add(this, 0)\r\n\r\n    return this\r\n  }\r\n  // Inserts a given element before the targeted element\r\n, before: function(element) {\r\n    element.remove()\r\n\r\n    var i = this.position()\r\n\r\n    this.parent().add(element, i)\r\n\r\n    return this\r\n  }\r\n  // Insters a given element after the targeted element\r\n, after: function(element) {\r\n    element.remove()\r\n\r\n    var i = this.position()\r\n\r\n    this.parent().add(element, i + 1)\r\n\r\n    return this\r\n  }\r\n\r\n})\nSVG.Mask = SVG.invent({\r\n  // Initialize node\r\n  create: function() {\r\n    this.constructor.call(this, SVG.create('mask'))\r\n\r\n    // keep references to masked elements\r\n    this.targets = []\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Unmask all masked elements and remove itself\r\n    remove: function() {\r\n      // unmask all targets\r\n      for (var i = this.targets.length - 1; i >= 0; i--)\r\n        if (this.targets[i])\r\n          this.targets[i].unmask()\r\n      this.targets = []\r\n\r\n      // remove mask from parent\r\n      SVG.Element.prototype.remove.call(this)\r\n\r\n      return this\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create masking element\r\n    mask: function() {\r\n      return this.defs().put(new SVG.Mask)\r\n    }\r\n  }\r\n})\r\n\r\n\r\nSVG.extend(SVG.Element, {\r\n  // Distribute mask to svg element\r\n  maskWith: function(element) {\r\n    // use given mask or create a new one\r\n    this.masker = element instanceof SVG.Mask ? element : this.parent().mask().add(element)\r\n\r\n    // store reverence on self in mask\r\n    this.masker.targets.push(this)\r\n\r\n    // apply mask\r\n    return this.attr('mask', 'url(\"#' + this.masker.attr('id') + '\")')\r\n  }\r\n  // Unmask element\r\n, unmask: function() {\r\n    delete this.masker\r\n    return this.attr('mask', null)\r\n  }\r\n\r\n})\r\n\nSVG.ClipPath = SVG.invent({\r\n  // Initialize node\r\n  create: function() {\r\n    this.constructor.call(this, SVG.create('clipPath'))\r\n\r\n    // keep references to clipped elements\r\n    this.targets = []\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Unclip all clipped elements and remove itself\r\n    remove: function() {\r\n      // unclip all targets\r\n      for (var i = this.targets.length - 1; i >= 0; i--)\r\n        if (this.targets[i])\r\n          this.targets[i].unclip()\r\n      this.targets = []\r\n\r\n      // remove clipPath from parent\r\n      this.parent().removeElement(this)\r\n\r\n      return this\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create clipping element\r\n    clip: function() {\r\n      return this.defs().put(new SVG.ClipPath)\r\n    }\r\n  }\r\n})\r\n\r\n//\r\nSVG.extend(SVG.Element, {\r\n  // Distribute clipPath to svg element\r\n  clipWith: function(element) {\r\n    // use given clip or create a new one\r\n    this.clipper = element instanceof SVG.ClipPath ? element : this.parent().clip().add(element)\r\n\r\n    // store reverence on self in mask\r\n    this.clipper.targets.push(this)\r\n\r\n    // apply mask\r\n    return this.attr('clip-path', 'url(\"#' + this.clipper.attr('id') + '\")')\r\n  }\r\n  // Unclip element\r\n, unclip: function() {\r\n    delete this.clipper\r\n    return this.attr('clip-path', null)\r\n  }\r\n\r\n})\nSVG.Gradient = SVG.invent({\r\n  // Initialize node\r\n  create: function(type) {\r\n    this.constructor.call(this, SVG.create(type + 'Gradient'))\r\n\r\n    // store type\r\n    this.type = type\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Add a color stop\r\n    at: function(offset, color, opacity) {\r\n      return this.put(new SVG.Stop).update(offset, color, opacity)\r\n    }\r\n    // Update gradient\r\n  , update: function(block) {\r\n      // remove all stops\r\n      this.clear()\r\n\r\n      // invoke passed block\r\n      if (typeof block == 'function')\r\n        block.call(this, this)\r\n\r\n      return this\r\n    }\r\n    // Return the fill id\r\n  , fill: function() {\r\n      return 'url(#' + this.id() + ')'\r\n    }\r\n    // Alias string convertion to fill\r\n  , toString: function() {\r\n      return this.fill()\r\n    }\r\n    // custom attr to handle transform\r\n  , attr: function(a, b, c) {\r\n      if(a == 'transform') a = 'gradientTransform'\r\n      return SVG.Container.prototype.attr.call(this, a, b, c)\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create gradient element in defs\r\n    gradient: function(type, block) {\r\n      return this.defs().gradient(type, block)\r\n    }\r\n  }\r\n})\r\n\r\n// Add animatable methods to both gradient and fx module\r\nSVG.extend(SVG.Gradient, SVG.FX, {\r\n  // From position\r\n  from: function(x, y) {\r\n    return (this._target || this).type == 'radial' ?\r\n      this.attr({ fx: new SVG.Number(x), fy: new SVG.Number(y) }) :\r\n      this.attr({ x1: new SVG.Number(x), y1: new SVG.Number(y) })\r\n  }\r\n  // To position\r\n, to: function(x, y) {\r\n    return (this._target || this).type == 'radial' ?\r\n      this.attr({ cx: new SVG.Number(x), cy: new SVG.Number(y) }) :\r\n      this.attr({ x2: new SVG.Number(x), y2: new SVG.Number(y) })\r\n  }\r\n})\r\n\r\n// Base gradient generation\r\nSVG.extend(SVG.Defs, {\r\n  // define gradient\r\n  gradient: function(type, block) {\r\n    return this.put(new SVG.Gradient(type)).update(block)\r\n  }\r\n\r\n})\r\n\r\nSVG.Stop = SVG.invent({\r\n  // Initialize node\r\n  create: 'stop'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Element\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // add color stops\r\n    update: function(o) {\r\n      if (typeof o == 'number' || o instanceof SVG.Number) {\r\n        o = {\r\n          offset:  arguments[0]\r\n        , color:   arguments[1]\r\n        , opacity: arguments[2]\r\n        }\r\n      }\r\n\r\n      // set attributes\r\n      if (o.opacity != null) this.attr('stop-opacity', o.opacity)\r\n      if (o.color   != null) this.attr('stop-color', o.color)\r\n      if (o.offset  != null) this.attr('offset', new SVG.Number(o.offset))\r\n\r\n      return this\r\n    }\r\n  }\r\n\r\n})\r\n\nSVG.Pattern = SVG.invent({\r\n  // Initialize node\r\n  create: 'pattern'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Return the fill id\r\n    fill: function() {\r\n      return 'url(#' + this.id() + ')'\r\n    }\r\n    // Update pattern by rebuilding\r\n  , update: function(block) {\r\n      // remove content\r\n      this.clear()\r\n\r\n      // invoke passed block\r\n      if (typeof block == 'function')\r\n        block.call(this, this)\r\n\r\n      return this\r\n    }\r\n    // Alias string convertion to fill\r\n  , toString: function() {\r\n      return this.fill()\r\n    }\r\n    // custom attr to handle transform\r\n  , attr: function(a, b, c) {\r\n      if(a == 'transform') a = 'patternTransform'\r\n      return SVG.Container.prototype.attr.call(this, a, b, c)\r\n    }\r\n\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create pattern element in defs\r\n    pattern: function(width, height, block) {\r\n      return this.defs().pattern(width, height, block)\r\n    }\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.Defs, {\r\n  // Define gradient\r\n  pattern: function(width, height, block) {\r\n    return this.put(new SVG.Pattern).update(block).attr({\r\n      x:            0\r\n    , y:            0\r\n    , width:        width\r\n    , height:       height\r\n    , patternUnits: 'userSpaceOnUse'\r\n    })\r\n  }\r\n\r\n})\nSVG.Shape = SVG.invent({\r\n  // Initialize node\r\n  create: function(element) {\r\n    this.constructor.call(this, element)\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Element\r\n\r\n})\n\r\nSVG.Bare = SVG.invent({\r\n  // Initialize\r\n  create: function(element, inherit) {\r\n    // construct element\r\n    this.constructor.call(this, SVG.create(element))\r\n\r\n    // inherit custom methods\r\n    if (inherit)\r\n      for (var method in inherit.prototype)\r\n        if (typeof inherit.prototype[method] === 'function')\r\n          this[method] = inherit.prototype[method]\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Element\r\n\r\n  // Add methods\r\n, extend: {\r\n    // Insert some plain text\r\n    words: function(text) {\r\n      // remove contents\r\n      while (this.node.hasChildNodes())\r\n        this.node.removeChild(this.node.lastChild)\r\n\r\n      // create text node\r\n      this.node.appendChild(document.createTextNode(text))\r\n\r\n      return this\r\n    }\r\n  }\r\n})\r\n\r\n\r\nSVG.extend(SVG.Parent, {\r\n  // Create an element that is not described by SVG.js\r\n  element: function(element, inherit) {\r\n    return this.put(new SVG.Bare(element, inherit))\r\n  }\r\n})\r\n\nSVG.Symbol = SVG.invent({\r\n  // Initialize node\r\n  create: 'symbol'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n, construct: {\r\n    // create symbol\r\n    symbol: function() {\r\n      return this.put(new SVG.Symbol)\r\n    }\r\n  }\r\n})\r\n\nSVG.Use = SVG.invent({\r\n  // Initialize node\r\n  create: 'use'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Use element as a reference\r\n    element: function(element, file) {\r\n      // Set lined element\r\n      return this.attr('href', (file || '') + '#' + element, SVG.xlink)\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a use element\r\n    use: function(element, file) {\r\n      return this.put(new SVG.Use).element(element, file)\r\n    }\r\n  }\r\n})\nSVG.Rect = SVG.invent({\r\n  // Initialize node\r\n  create: 'rect'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a rect element\r\n    rect: function(width, height) {\r\n      return this.put(new SVG.Rect()).size(width, height)\r\n    }\r\n  }\r\n})\nSVG.Circle = SVG.invent({\r\n  // Initialize node\r\n  create: 'circle'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create circle element, based on ellipse\r\n    circle: function(size) {\r\n      return this.put(new SVG.Circle).rx(new SVG.Number(size).divide(2)).move(0, 0)\r\n    }\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.Circle, SVG.FX, {\r\n  // Radius x value\r\n  rx: function(rx) {\r\n    return this.attr('r', rx)\r\n  }\r\n  // Alias radius x value\r\n, ry: function(ry) {\r\n    return this.rx(ry)\r\n  }\r\n})\r\n\r\nSVG.Ellipse = SVG.invent({\r\n  // Initialize node\r\n  create: 'ellipse'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create an ellipse\r\n    ellipse: function(width, height) {\r\n      return this.put(new SVG.Ellipse).size(width, height).move(0, 0)\r\n    }\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.Ellipse, SVG.Rect, SVG.FX, {\r\n  // Radius x value\r\n  rx: function(rx) {\r\n    return this.attr('rx', rx)\r\n  }\r\n  // Radius y value\r\n, ry: function(ry) {\r\n    return this.attr('ry', ry)\r\n  }\r\n})\r\n\r\n// Add common method\r\nSVG.extend(SVG.Circle, SVG.Ellipse, {\r\n    // Move over x-axis\r\n    x: function(x) {\r\n      return x == null ? this.cx() - this.rx() : this.cx(x + this.rx())\r\n    }\r\n    // Move over y-axis\r\n  , y: function(y) {\r\n      return y == null ? this.cy() - this.ry() : this.cy(y + this.ry())\r\n    }\r\n    // Move by center over x-axis\r\n  , cx: function(x) {\r\n      return x == null ? this.attr('cx') : this.attr('cx', x)\r\n    }\r\n    // Move by center over y-axis\r\n  , cy: function(y) {\r\n      return y == null ? this.attr('cy') : this.attr('cy', y)\r\n    }\r\n    // Set width of element\r\n  , width: function(width) {\r\n      return width == null ? this.rx() * 2 : this.rx(new SVG.Number(width).divide(2))\r\n    }\r\n    // Set height of element\r\n  , height: function(height) {\r\n      return height == null ? this.ry() * 2 : this.ry(new SVG.Number(height).divide(2))\r\n    }\r\n    // Custom size function\r\n  , size: function(width, height) {\r\n      var p = proportionalSize(this, width, height)\r\n\r\n      return this\r\n        .rx(new SVG.Number(p.width).divide(2))\r\n        .ry(new SVG.Number(p.height).divide(2))\r\n    }\r\n})\nSVG.Line = SVG.invent({\r\n  // Initialize node\r\n  create: 'line'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Get array\r\n    array: function() {\r\n      return new SVG.PointArray([\r\n        [ this.attr('x1'), this.attr('y1') ]\r\n      , [ this.attr('x2'), this.attr('y2') ]\r\n      ])\r\n    }\r\n    // Overwrite native plot() method\r\n  , plot: function(x1, y1, x2, y2) {\r\n      if (x1 == null)\r\n        return this.array()\r\n      else if (typeof y1 !== 'undefined')\r\n        x1 = { x1: x1, y1: y1, x2: x2, y2: y2 }\r\n      else\r\n        x1 = new SVG.PointArray(x1).toLine()\r\n\r\n      return this.attr(x1)\r\n    }\r\n    // Move by left top corner\r\n  , move: function(x, y) {\r\n      return this.attr(this.array().move(x, y).toLine())\r\n    }\r\n    // Set element size to given width and height\r\n  , size: function(width, height) {\r\n      var p = proportionalSize(this, width, height)\r\n\r\n      return this.attr(this.array().size(p.width, p.height).toLine())\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a line element\r\n    line: function(x1, y1, x2, y2) {\r\n      // make sure plot is called as a setter\r\n      // x1 is not necessarily a number, it can also be an array, a string and a SVG.PointArray\r\n      return SVG.Line.prototype.plot.apply(\r\n        this.put(new SVG.Line)\r\n      , x1 != null ? [x1, y1, x2, y2] : [0, 0, 0, 0]\r\n      )\r\n    }\r\n  }\r\n})\r\n\nSVG.Polyline = SVG.invent({\r\n  // Initialize node\r\n  create: 'polyline'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a wrapped polyline element\r\n    polyline: function(p) {\r\n      // make sure plot is called as a setter\r\n      return this.put(new SVG.Polyline).plot(p || new SVG.PointArray)\r\n    }\r\n  }\r\n})\r\n\r\nSVG.Polygon = SVG.invent({\r\n  // Initialize node\r\n  create: 'polygon'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a wrapped polygon element\r\n    polygon: function(p) {\r\n      // make sure plot is called as a setter\r\n      return this.put(new SVG.Polygon).plot(p || new SVG.PointArray)\r\n    }\r\n  }\r\n})\r\n\r\n// Add polygon-specific functions\r\nSVG.extend(SVG.Polyline, SVG.Polygon, {\r\n  // Get array\r\n  array: function() {\r\n    return this._array || (this._array = new SVG.PointArray(this.attr('points')))\r\n  }\r\n  // Plot new path\r\n, plot: function(p) {\r\n    return (p == null) ?\r\n      this.array() :\r\n      this.clear().attr('points', typeof p == 'string' ? p : (this._array = new SVG.PointArray(p)))\r\n  }\r\n  // Clear array cache\r\n, clear: function() {\r\n    delete this._array\r\n    return this\r\n  }\r\n  // Move by left top corner\r\n, move: function(x, y) {\r\n    return this.attr('points', this.array().move(x, y))\r\n  }\r\n  // Set element size to given width and height\r\n, size: function(width, height) {\r\n    var p = proportionalSize(this, width, height)\r\n\r\n    return this.attr('points', this.array().size(p.width, p.height))\r\n  }\r\n\r\n})\r\n\n// unify all point to point elements\r\nSVG.extend(SVG.Line, SVG.Polyline, SVG.Polygon, {\r\n  // Define morphable array\r\n  morphArray:  SVG.PointArray\r\n  // Move by left top corner over x-axis\r\n, x: function(x) {\r\n    return x == null ? this.bbox().x : this.move(x, this.bbox().y)\r\n  }\r\n  // Move by left top corner over y-axis\r\n, y: function(y) {\r\n    return y == null ? this.bbox().y : this.move(this.bbox().x, y)\r\n  }\r\n  // Set width of element\r\n, width: function(width) {\r\n    var b = this.bbox()\r\n\r\n    return width == null ? b.width : this.size(width, b.height)\r\n  }\r\n  // Set height of element\r\n, height: function(height) {\r\n    var b = this.bbox()\r\n\r\n    return height == null ? b.height : this.size(b.width, height)\r\n  }\r\n})\nSVG.Path = SVG.invent({\r\n  // Initialize node\r\n  create: 'path'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Define morphable array\r\n    morphArray:  SVG.PathArray\r\n    // Get array\r\n  , array: function() {\r\n      return this._array || (this._array = new SVG.PathArray(this.attr('d')))\r\n    }\r\n    // Plot new path\r\n  , plot: function(d) {\r\n      return (d == null) ?\r\n        this.array() :\r\n        this.clear().attr('d', typeof d == 'string' ? d : (this._array = new SVG.PathArray(d)))\r\n    }\r\n    // Clear array cache\r\n  , clear: function() {\r\n      delete this._array\r\n      return this\r\n    }\r\n    // Move by left top corner\r\n  , move: function(x, y) {\r\n      return this.attr('d', this.array().move(x, y))\r\n    }\r\n    // Move by left top corner over x-axis\r\n  , x: function(x) {\r\n      return x == null ? this.bbox().x : this.move(x, this.bbox().y)\r\n    }\r\n    // Move by left top corner over y-axis\r\n  , y: function(y) {\r\n      return y == null ? this.bbox().y : this.move(this.bbox().x, y)\r\n    }\r\n    // Set element size to given width and height\r\n  , size: function(width, height) {\r\n      var p = proportionalSize(this, width, height)\r\n\r\n      return this.attr('d', this.array().size(p.width, p.height))\r\n    }\r\n    // Set width of element\r\n  , width: function(width) {\r\n      return width == null ? this.bbox().width : this.size(width, this.bbox().height)\r\n    }\r\n    // Set height of element\r\n  , height: function(height) {\r\n      return height == null ? this.bbox().height : this.size(this.bbox().width, height)\r\n    }\r\n\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a wrapped path element\r\n    path: function(d) {\r\n      // make sure plot is called as a setter\r\n      return this.put(new SVG.Path).plot(d || new SVG.PathArray)\r\n    }\r\n  }\r\n})\r\n\nSVG.Image = SVG.invent({\r\n  // Initialize node\r\n  create: 'image'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // (re)load image\r\n    load: function(url) {\r\n      if (!url) return this\r\n\r\n      var self = this\r\n        , img  = new window.Image()\r\n\r\n      // preload image\r\n      SVG.on(img, 'load', function() {\r\n        SVG.off(img)\r\n\r\n        var p = self.parent(SVG.Pattern)\r\n\r\n        if(p === null) return\r\n\r\n        // ensure image size\r\n        if (self.width() == 0 && self.height() == 0)\r\n          self.size(img.width, img.height)\r\n\r\n        // ensure pattern size if not set\r\n        if (p && p.width() == 0 && p.height() == 0)\r\n          p.size(self.width(), self.height())\r\n\r\n        // callback\r\n        if (typeof self._loaded === 'function')\r\n          self._loaded.call(self, {\r\n            width:  img.width\r\n          , height: img.height\r\n          , ratio:  img.width / img.height\r\n          , url:    url\r\n          })\r\n      })\r\n\r\n      SVG.on(img, 'error', function(e){\r\n        SVG.off(img)\r\n\r\n        if (typeof self._error === 'function'){\r\n            self._error.call(self, e)\r\n        }\r\n      })\r\n\r\n      return this.attr('href', (img.src = this.src = url), SVG.xlink)\r\n    }\r\n    // Add loaded callback\r\n  , loaded: function(loaded) {\r\n      this._loaded = loaded\r\n      return this\r\n    }\r\n\r\n  , error: function(error) {\r\n      this._error = error\r\n      return this\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // create image element, load image and set its size\r\n    image: function(source, width, height) {\r\n      return this.put(new SVG.Image).load(source).size(width || 0, height || width || 0)\r\n    }\r\n  }\r\n\r\n})\nSVG.Text = SVG.invent({\r\n  // Initialize node\r\n  create: function() {\r\n    this.constructor.call(this, SVG.create('text'))\r\n\r\n    this.dom.leading = new SVG.Number(1.3)    // store leading value for rebuilding\r\n    this._rebuild = true                      // enable automatic updating of dy values\r\n    this._build   = false                     // disable build mode for adding multiple lines\r\n\r\n    // set default font\r\n    this.attr('font-family', SVG.defaults.attrs['font-family'])\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Move over x-axis\r\n    x: function(x) {\r\n      // act as getter\r\n      if (x == null)\r\n        return this.attr('x')\r\n\r\n      return this.attr('x', x)\r\n    }\r\n    // Move over y-axis\r\n  , y: function(y) {\r\n      var oy = this.attr('y')\r\n        , o  = typeof oy === 'number' ? oy - this.bbox().y : 0\r\n\r\n      // act as getter\r\n      if (y == null)\r\n        return typeof oy === 'number' ? oy - o : oy\r\n\r\n      return this.attr('y', typeof y.valueOf() === 'number' ? y + o : y)\r\n    }\r\n    // Move center over x-axis\r\n  , cx: function(x) {\r\n      return x == null ? this.bbox().cx : this.x(x - this.bbox().width / 2)\r\n    }\r\n    // Move center over y-axis\r\n  , cy: function(y) {\r\n      return y == null ? this.bbox().cy : this.y(y - this.bbox().height / 2)\r\n    }\r\n    // Set the text content\r\n  , text: function(text) {\r\n      // act as getter\r\n      if (typeof text === 'undefined'){\r\n        var text = ''\r\n        var children = this.node.childNodes\r\n        for(var i = 0, len = children.length; i < len; ++i){\r\n\r\n          // add newline if its not the first child and newLined is set to true\r\n          if(i != 0 && children[i].nodeType != 3 && SVG.adopt(children[i]).dom.newLined == true){\r\n            text += '\\n'\r\n          }\r\n\r\n          // add content of this node\r\n          text += children[i].textContent\r\n        }\r\n\r\n        return text\r\n      }\r\n\r\n      // remove existing content\r\n      this.clear().build(true)\r\n\r\n      if (typeof text === 'function') {\r\n        // call block\r\n        text.call(this, this)\r\n\r\n      } else {\r\n        // store text and make sure text is not blank\r\n        text = text.split('\\n')\r\n\r\n        // build new lines\r\n        for (var i = 0, il = text.length; i < il; i++)\r\n          this.tspan(text[i]).newLine()\r\n      }\r\n\r\n      // disable build mode and rebuild lines\r\n      return this.build(false).rebuild()\r\n    }\r\n    // Set font size\r\n  , size: function(size) {\r\n      return this.attr('font-size', size).rebuild()\r\n    }\r\n    // Set / get leading\r\n  , leading: function(value) {\r\n      // act as getter\r\n      if (value == null)\r\n        return this.dom.leading\r\n\r\n      // act as setter\r\n      this.dom.leading = new SVG.Number(value)\r\n\r\n      return this.rebuild()\r\n    }\r\n    // Get all the first level lines\r\n  , lines: function() {\r\n      var node = (this.textPath && this.textPath() || this).node\r\n\r\n      // filter tspans and map them to SVG.js instances\r\n      var lines = SVG.utils.map(SVG.utils.filterSVGElements(node.childNodes), function(el){\r\n        return SVG.adopt(el)\r\n      })\r\n\r\n      // return an instance of SVG.set\r\n      return new SVG.Set(lines)\r\n    }\r\n    // Rebuild appearance type\r\n  , rebuild: function(rebuild) {\r\n      // store new rebuild flag if given\r\n      if (typeof rebuild == 'boolean')\r\n        this._rebuild = rebuild\r\n\r\n      // define position of all lines\r\n      if (this._rebuild) {\r\n        var self = this\r\n          , blankLineOffset = 0\r\n          , dy = this.dom.leading * new SVG.Number(this.attr('font-size'))\r\n\r\n        this.lines().each(function() {\r\n          if (this.dom.newLined) {\r\n            if (!self.textPath())\r\n              this.attr('x', self.attr('x'))\r\n            if(this.text() == '\\n') {\r\n              blankLineOffset += dy\r\n            }else{\r\n              this.attr('dy', dy + blankLineOffset)\r\n              blankLineOffset = 0\r\n            }\r\n          }\r\n        })\r\n\r\n        this.fire('rebuild')\r\n      }\r\n\r\n      return this\r\n    }\r\n    // Enable / disable build mode\r\n  , build: function(build) {\r\n      this._build = !!build\r\n      return this\r\n    }\r\n    // overwrite method from parent to set data properly\r\n  , setData: function(o){\r\n      this.dom = o\r\n      this.dom.leading = new SVG.Number(o.leading || 1.3)\r\n      return this\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create text element\r\n    text: function(text) {\r\n      return this.put(new SVG.Text).text(text)\r\n    }\r\n    // Create plain text element\r\n  , plain: function(text) {\r\n      return this.put(new SVG.Text).plain(text)\r\n    }\r\n  }\r\n\r\n})\r\n\r\nSVG.Tspan = SVG.invent({\r\n  // Initialize node\r\n  create: 'tspan'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Set text content\r\n    text: function(text) {\r\n      if(text == null) return this.node.textContent + (this.dom.newLined ? '\\n' : '')\r\n\r\n      typeof text === 'function' ? text.call(this, this) : this.plain(text)\r\n\r\n      return this\r\n    }\r\n    // Shortcut dx\r\n  , dx: function(dx) {\r\n      return this.attr('dx', dx)\r\n    }\r\n    // Shortcut dy\r\n  , dy: function(dy) {\r\n      return this.attr('dy', dy)\r\n    }\r\n    // Create new line\r\n  , newLine: function() {\r\n      // fetch text parent\r\n      var t = this.parent(SVG.Text)\r\n\r\n      // mark new line\r\n      this.dom.newLined = true\r\n\r\n      // apply new hy¡n\r\n      return this.dy(t.dom.leading * t.attr('font-size')).attr('x', t.x())\r\n    }\r\n  }\r\n\r\n})\r\n\r\nSVG.extend(SVG.Text, SVG.Tspan, {\r\n  // Create plain text node\r\n  plain: function(text) {\r\n    // clear if build mode is disabled\r\n    if (this._build === false)\r\n      this.clear()\r\n\r\n    // create text node\r\n    this.node.appendChild(document.createTextNode(text))\r\n\r\n    return this\r\n  }\r\n  // Create a tspan\r\n, tspan: function(text) {\r\n    var node  = (this.textPath && this.textPath() || this).node\r\n      , tspan = new SVG.Tspan\r\n\r\n    // clear if build mode is disabled\r\n    if (this._build === false)\r\n      this.clear()\r\n\r\n    // add new tspan\r\n    node.appendChild(tspan.node)\r\n\r\n    return tspan.text(text)\r\n  }\r\n  // Clear all lines\r\n, clear: function() {\r\n    var node = (this.textPath && this.textPath() || this).node\r\n\r\n    // remove existing child nodes\r\n    while (node.hasChildNodes())\r\n      node.removeChild(node.lastChild)\r\n\r\n    return this\r\n  }\r\n  // Get length of text element\r\n, length: function() {\r\n    return this.node.getComputedTextLength()\r\n  }\r\n})\r\n\nSVG.TextPath = SVG.invent({\r\n  // Initialize node\r\n  create: 'textPath'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Parent\r\n\r\n  // Define parent class\r\n, parent: SVG.Text\r\n\r\n  // Add parent method\r\n, construct: {\r\n    morphArray: SVG.PathArray\r\n    // Create path for text to run on\r\n  , path: function(d) {\r\n      // create textPath element\r\n      var path  = new SVG.TextPath\r\n        , track = this.doc().defs().path(d)\r\n\r\n      // move lines to textpath\r\n      while (this.node.hasChildNodes())\r\n        path.node.appendChild(this.node.firstChild)\r\n\r\n      // add textPath element as child node\r\n      this.node.appendChild(path.node)\r\n\r\n      // link textPath to path and add content\r\n      path.attr('href', '#' + track, SVG.xlink)\r\n\r\n      return this\r\n    }\r\n    // return the array of the path track element\r\n  , array: function() {\r\n      var track = this.track()\r\n\r\n      return track ? track.array() : null\r\n    }\r\n    // Plot path if any\r\n  , plot: function(d) {\r\n      var track = this.track()\r\n        , pathArray = null\r\n\r\n      if (track) {\r\n        pathArray = track.plot(d)\r\n      }\r\n\r\n      return (d == null) ? pathArray : this\r\n    }\r\n    // Get the path track element\r\n  , track: function() {\r\n      var path = this.textPath()\r\n\r\n      if (path)\r\n        return path.reference('href')\r\n    }\r\n    // Get the textPath child\r\n  , textPath: function() {\r\n      if (this.node.firstChild && this.node.firstChild.nodeName == 'textPath')\r\n        return SVG.adopt(this.node.firstChild)\r\n    }\r\n  }\r\n})\r\n\nSVG.Nested = SVG.invent({\r\n  // Initialize node\r\n  create: function() {\r\n    this.constructor.call(this, SVG.create('svg'))\r\n\r\n    this.style('overflow', 'visible')\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create nested svg document\r\n    nested: function() {\r\n      return this.put(new SVG.Nested)\r\n    }\r\n  }\r\n})\nSVG.A = SVG.invent({\r\n  // Initialize node\r\n  create: 'a'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Link url\r\n    to: function(url) {\r\n      return this.attr('href', url, SVG.xlink)\r\n    }\r\n    // Link show attribute\r\n  , show: function(target) {\r\n      return this.attr('show', target, SVG.xlink)\r\n    }\r\n    // Link target attribute\r\n  , target: function(target) {\r\n      return this.attr('target', target)\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a hyperlink element\r\n    link: function(url) {\r\n      return this.put(new SVG.A).to(url)\r\n    }\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.Element, {\r\n  // Create a hyperlink element\r\n  linkTo: function(url) {\r\n    var link = new SVG.A\r\n\r\n    if (typeof url == 'function')\r\n      url.call(link, link)\r\n    else\r\n      link.to(url)\r\n\r\n    return this.parent().put(link).put(this)\r\n  }\r\n\r\n})\nSVG.Marker = SVG.invent({\r\n  // Initialize node\r\n  create: 'marker'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Set width of element\r\n    width: function(width) {\r\n      return this.attr('markerWidth', width)\r\n    }\r\n    // Set height of element\r\n  , height: function(height) {\r\n      return this.attr('markerHeight', height)\r\n    }\r\n    // Set marker refX and refY\r\n  , ref: function(x, y) {\r\n      return this.attr('refX', x).attr('refY', y)\r\n    }\r\n    // Update marker\r\n  , update: function(block) {\r\n      // remove all content\r\n      this.clear()\r\n\r\n      // invoke passed block\r\n      if (typeof block == 'function')\r\n        block.call(this, this)\r\n\r\n      return this\r\n    }\r\n    // Return the fill id\r\n  , toString: function() {\r\n      return 'url(#' + this.id() + ')'\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    marker: function(width, height, block) {\r\n      // Create marker element in defs\r\n      return this.defs().marker(width, height, block)\r\n    }\r\n  }\r\n\r\n})\r\n\r\nSVG.extend(SVG.Defs, {\r\n  // Create marker\r\n  marker: function(width, height, block) {\r\n    // Set default viewbox to match the width and height, set ref to cx and cy and set orient to auto\r\n    return this.put(new SVG.Marker)\r\n      .size(width, height)\r\n      .ref(width / 2, height / 2)\r\n      .viewbox(0, 0, width, height)\r\n      .attr('orient', 'auto')\r\n      .update(block)\r\n  }\r\n\r\n})\r\n\r\nSVG.extend(SVG.Line, SVG.Polyline, SVG.Polygon, SVG.Path, {\r\n  // Create and attach markers\r\n  marker: function(marker, width, height, block) {\r\n    var attr = ['marker']\r\n\r\n    // Build attribute name\r\n    if (marker != 'all') attr.push(marker)\r\n    attr = attr.join('-')\r\n\r\n    // Set marker attribute\r\n    marker = arguments[1] instanceof SVG.Marker ?\r\n      arguments[1] :\r\n      this.doc().marker(width, height, block)\r\n\r\n    return this.attr(attr, marker)\r\n  }\r\n\r\n})\n// Define list of available attributes for stroke and fill\r\nvar sugar = {\r\n  stroke: ['color', 'width', 'opacity', 'linecap', 'linejoin', 'miterlimit', 'dasharray', 'dashoffset']\r\n, fill:   ['color', 'opacity', 'rule']\r\n, prefix: function(t, a) {\r\n    return a == 'color' ? t : t + '-' + a\r\n  }\r\n}\r\n\r\n// Add sugar for fill and stroke\r\n;['fill', 'stroke'].forEach(function(m) {\r\n  var i, extension = {}\r\n\r\n  extension[m] = function(o) {\r\n    if (typeof o == 'undefined')\r\n      return this\r\n    if (typeof o == 'string' || SVG.Color.isRgb(o) || (o && typeof o.fill === 'function'))\r\n      this.attr(m, o)\r\n\r\n    else\r\n      // set all attributes from sugar.fill and sugar.stroke list\r\n      for (i = sugar[m].length - 1; i >= 0; i--)\r\n        if (o[sugar[m][i]] != null)\r\n          this.attr(sugar.prefix(m, sugar[m][i]), o[sugar[m][i]])\r\n\r\n    return this\r\n  }\r\n\r\n  SVG.extend(SVG.Element, SVG.FX, extension)\r\n\r\n})\r\n\r\nSVG.extend(SVG.Element, SVG.FX, {\r\n  // Map rotation to transform\r\n  rotate: function(d, cx, cy) {\r\n    return this.transform({ rotation: d, cx: cx, cy: cy })\r\n  }\r\n  // Map skew to transform\r\n, skew: function(x, y, cx, cy) {\r\n    return arguments.length == 1  || arguments.length == 3 ?\r\n      this.transform({ skew: x, cx: y, cy: cx }) :\r\n      this.transform({ skewX: x, skewY: y, cx: cx, cy: cy })\r\n  }\r\n  // Map scale to transform\r\n, scale: function(x, y, cx, cy) {\r\n    return arguments.length == 1  || arguments.length == 3 ?\r\n      this.transform({ scale: x, cx: y, cy: cx }) :\r\n      this.transform({ scaleX: x, scaleY: y, cx: cx, cy: cy })\r\n  }\r\n  // Map translate to transform\r\n, translate: function(x, y) {\r\n    return this.transform({ x: x, y: y })\r\n  }\r\n  // Map flip to transform\r\n, flip: function(a, o) {\r\n    o = typeof a == 'number' ? a : o\r\n    return this.transform({ flip: a || 'both', offset: o })\r\n  }\r\n  // Map matrix to transform\r\n, matrix: function(m) {\r\n    return this.attr('transform', new SVG.Matrix(arguments.length == 6 ? [].slice.call(arguments) : m))\r\n  }\r\n  // Opacity\r\n, opacity: function(value) {\r\n    return this.attr('opacity', value)\r\n  }\r\n  // Relative move over x axis\r\n, dx: function(x) {\r\n    return this.x(new SVG.Number(x).plus(this instanceof SVG.FX ? 0 : this.x()), true)\r\n  }\r\n  // Relative move over y axis\r\n, dy: function(y) {\r\n    return this.y(new SVG.Number(y).plus(this instanceof SVG.FX ? 0 : this.y()), true)\r\n  }\r\n  // Relative move over x and y axes\r\n, dmove: function(x, y) {\r\n    return this.dx(x).dy(y)\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.Rect, SVG.Ellipse, SVG.Circle, SVG.Gradient, SVG.FX, {\r\n  // Add x and y radius\r\n  radius: function(x, y) {\r\n    var type = (this._target || this).type;\r\n    return type == 'radial' || type == 'circle' ?\r\n      this.attr('r', new SVG.Number(x)) :\r\n      this.rx(x).ry(y == null ? x : y)\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.Path, {\r\n  // Get path length\r\n  length: function() {\r\n    return this.node.getTotalLength()\r\n  }\r\n  // Get point at length\r\n, pointAt: function(length) {\r\n    return this.node.getPointAtLength(length)\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.Parent, SVG.Text, SVG.Tspan, SVG.FX, {\r\n  // Set font\r\n  font: function(a, v) {\r\n    if (typeof a == 'object') {\r\n      for (v in a) this.font(v, a[v])\r\n    }\r\n\r\n    return a == 'leading' ?\r\n        this.leading(v) :\r\n      a == 'anchor' ?\r\n        this.attr('text-anchor', v) :\r\n      a == 'size' || a == 'family' || a == 'weight' || a == 'stretch' || a == 'variant' || a == 'style' ?\r\n        this.attr('font-'+ a, v) :\r\n        this.attr(a, v)\r\n  }\r\n})\r\n\nSVG.Set = SVG.invent({\r\n  // Initialize\r\n  create: function(members) {\r\n    if (members instanceof SVG.Set) {\r\n      this.members = members.members.slice()\r\n    } else {\r\n      Array.isArray(members) ? this.members = members : this.clear()\r\n    }\r\n  }\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Add element to set\r\n    add: function() {\r\n      var i, il, elements = [].slice.call(arguments)\r\n\r\n      for (i = 0, il = elements.length; i < il; i++)\r\n        this.members.push(elements[i])\r\n\r\n      return this\r\n    }\r\n    // Remove element from set\r\n  , remove: function(element) {\r\n      var i = this.index(element)\r\n\r\n      // remove given child\r\n      if (i > -1)\r\n        this.members.splice(i, 1)\r\n\r\n      return this\r\n    }\r\n    // Iterate over all members\r\n  , each: function(block) {\r\n      for (var i = 0, il = this.members.length; i < il; i++)\r\n        block.apply(this.members[i], [i, this.members])\r\n\r\n      return this\r\n    }\r\n    // Restore to defaults\r\n  , clear: function() {\r\n      // initialize store\r\n      this.members = []\r\n\r\n      return this\r\n    }\r\n    // Get the length of a set\r\n  , length: function() {\r\n      return this.members.length\r\n    }\r\n    // Checks if a given element is present in set\r\n  , has: function(element) {\r\n      return this.index(element) >= 0\r\n    }\r\n    // retuns index of given element in set\r\n  , index: function(element) {\r\n      return this.members.indexOf(element)\r\n    }\r\n    // Get member at given index\r\n  , get: function(i) {\r\n      return this.members[i]\r\n    }\r\n    // Get first member\r\n  , first: function() {\r\n      return this.get(0)\r\n    }\r\n    // Get last member\r\n  , last: function() {\r\n      return this.get(this.members.length - 1)\r\n    }\r\n    // Default value\r\n  , valueOf: function() {\r\n      return this.members\r\n    }\r\n    // Get the bounding box of all members included or empty box if set has no items\r\n  , bbox: function(){\r\n      // return an empty box of there are no members\r\n      if (this.members.length == 0)\r\n        return new SVG.RBox()\r\n\r\n      // get the first rbox and update the target bbox\r\n      var rbox = this.members[0].rbox(this.members[0].doc())\r\n\r\n      this.each(function() {\r\n        // user rbox for correct position and visual representation\r\n        rbox = rbox.merge(this.rbox(this.doc()))\r\n      })\r\n\r\n      return rbox\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a new set\r\n    set: function(members) {\r\n      return new SVG.Set(members)\r\n    }\r\n  }\r\n})\r\n\r\nSVG.FX.Set = SVG.invent({\r\n  // Initialize node\r\n  create: function(set) {\r\n    // store reference to set\r\n    this.set = set\r\n  }\r\n\r\n})\r\n\r\n// Alias methods\r\nSVG.Set.inherit = function() {\r\n  var m\r\n    , methods = []\r\n\r\n  // gather shape methods\r\n  for(var m in SVG.Shape.prototype)\r\n    if (typeof SVG.Shape.prototype[m] == 'function' && typeof SVG.Set.prototype[m] != 'function')\r\n      methods.push(m)\r\n\r\n  // apply shape aliasses\r\n  methods.forEach(function(method) {\r\n    SVG.Set.prototype[method] = function() {\r\n      for (var i = 0, il = this.members.length; i < il; i++)\r\n        if (this.members[i] && typeof this.members[i][method] == 'function')\r\n          this.members[i][method].apply(this.members[i], arguments)\r\n\r\n      return method == 'animate' ? (this.fx || (this.fx = new SVG.FX.Set(this))) : this\r\n    }\r\n  })\r\n\r\n  // clear methods for the next round\r\n  methods = []\r\n\r\n  // gather fx methods\r\n  for(var m in SVG.FX.prototype)\r\n    if (typeof SVG.FX.prototype[m] == 'function' && typeof SVG.FX.Set.prototype[m] != 'function')\r\n      methods.push(m)\r\n\r\n  // apply fx aliasses\r\n  methods.forEach(function(method) {\r\n    SVG.FX.Set.prototype[method] = function() {\r\n      for (var i = 0, il = this.set.members.length; i < il; i++)\r\n        this.set.members[i].fx[method].apply(this.set.members[i].fx, arguments)\r\n\r\n      return this\r\n    }\r\n  })\r\n}\r\n\n\r\nSVG.extend(SVG.Element, {\r\n  // Store data values on svg nodes\r\n  data: function(a, v, r) {\r\n    if (typeof a == 'object') {\r\n      for (v in a)\r\n        this.data(v, a[v])\r\n\r\n    } else if (arguments.length < 2) {\r\n      try {\r\n        return JSON.parse(this.attr('data-' + a))\r\n      } catch(e) {\r\n        return this.attr('data-' + a)\r\n      }\r\n\r\n    } else {\r\n      this.attr(\r\n        'data-' + a\r\n      , v === null ?\r\n          null :\r\n        r === true || typeof v === 'string' || typeof v === 'number' ?\r\n          v :\r\n          JSON.stringify(v)\r\n      )\r\n    }\r\n\r\n    return this\r\n  }\r\n})\nSVG.extend(SVG.Element, {\r\n  // Remember arbitrary data\r\n  remember: function(k, v) {\r\n    // remember every item in an object individually\r\n    if (typeof arguments[0] == 'object')\r\n      for (var v in k)\r\n        this.remember(v, k[v])\r\n\r\n    // retrieve memory\r\n    else if (arguments.length == 1)\r\n      return this.memory()[k]\r\n\r\n    // store memory\r\n    else\r\n      this.memory()[k] = v\r\n\r\n    return this\r\n  }\r\n\r\n  // Erase a given memory\r\n, forget: function() {\r\n    if (arguments.length == 0)\r\n      this._memory = {}\r\n    else\r\n      for (var i = arguments.length - 1; i >= 0; i--)\r\n        delete this.memory()[arguments[i]]\r\n\r\n    return this\r\n  }\r\n\r\n  // Initialize or return local memory object\r\n, memory: function() {\r\n    return this._memory || (this._memory = {})\r\n  }\r\n\r\n})\n// Method for getting an element by id\r\nSVG.get = function(id) {\r\n  var node = document.getElementById(idFromReference(id) || id)\r\n  return SVG.adopt(node)\r\n}\r\n\r\n// Select elements by query string\r\nSVG.select = function(query, parent) {\r\n  return new SVG.Set(\r\n    SVG.utils.map((parent || document).querySelectorAll(query), function(node) {\r\n      return SVG.adopt(node)\r\n    })\r\n  )\r\n}\r\n\r\nSVG.extend(SVG.Parent, {\r\n  // Scoped select method\r\n  select: function(query) {\r\n    return SVG.select(query, this.node)\r\n  }\r\n\r\n})\nfunction pathRegReplace(a, b, c, d) {\r\n  return c + d.replace(SVG.regex.dots, ' .')\r\n}\r\n\r\n// creates deep clone of array\r\nfunction array_clone(arr){\r\n  var clone = arr.slice(0)\r\n  for(var i = clone.length; i--;){\r\n    if(Array.isArray(clone[i])){\r\n      clone[i] = array_clone(clone[i])\r\n    }\r\n  }\r\n  return clone\r\n}\r\n\r\n// tests if a given element is instance of an object\r\nfunction is(el, obj){\r\n  return el instanceof obj\r\n}\r\n\r\n// tests if a given selector matches an element\r\nfunction matches(el, selector) {\r\n  return (el.matches || el.matchesSelector || el.msMatchesSelector || el.mozMatchesSelector || el.webkitMatchesSelector || el.oMatchesSelector).call(el, selector);\r\n}\r\n\r\n// Convert dash-separated-string to camelCase\r\nfunction camelCase(s) {\r\n  return s.toLowerCase().replace(/-(.)/g, function(m, g) {\r\n    return g.toUpperCase()\r\n  })\r\n}\r\n\r\n// Capitalize first letter of a string\r\nfunction capitalize(s) {\r\n  return s.charAt(0).toUpperCase() + s.slice(1)\r\n}\r\n\r\n// Ensure to six-based hex\r\nfunction fullHex(hex) {\r\n  return hex.length == 4 ?\r\n    [ '#',\r\n      hex.substring(1, 2), hex.substring(1, 2)\r\n    , hex.substring(2, 3), hex.substring(2, 3)\r\n    , hex.substring(3, 4), hex.substring(3, 4)\r\n    ].join('') : hex\r\n}\r\n\r\n// Component to hex value\r\nfunction compToHex(comp) {\r\n  var hex = comp.toString(16)\r\n  return hex.length == 1 ? '0' + hex : hex\r\n}\r\n\r\n// Calculate proportional width and height values when necessary\r\nfunction proportionalSize(element, width, height) {\r\n  if (width == null || height == null) {\r\n    var box = element.bbox()\r\n\r\n    if (width == null)\r\n      width = box.width / box.height * height\r\n    else if (height == null)\r\n      height = box.height / box.width * width\r\n  }\r\n\r\n  return {\r\n    width:  width\r\n  , height: height\r\n  }\r\n}\r\n\r\n// Delta transform point\r\nfunction deltaTransformPoint(matrix, x, y) {\r\n  return {\r\n    x: x * matrix.a + y * matrix.c + 0\r\n  , y: x * matrix.b + y * matrix.d + 0\r\n  }\r\n}\r\n\r\n// Map matrix array to object\r\nfunction arrayToMatrix(a) {\r\n  return { a: a[0], b: a[1], c: a[2], d: a[3], e: a[4], f: a[5] }\r\n}\r\n\r\n// Parse matrix if required\r\nfunction parseMatrix(matrix) {\r\n  if (!(matrix instanceof SVG.Matrix))\r\n    matrix = new SVG.Matrix(matrix)\r\n\r\n  return matrix\r\n}\r\n\r\n// Add centre point to transform object\r\nfunction ensureCentre(o, target) {\r\n  o.cx = o.cx == null ? target.bbox().cx : o.cx\r\n  o.cy = o.cy == null ? target.bbox().cy : o.cy\r\n}\r\n\r\n// PathArray Helpers\r\nfunction arrayToString(a) {\r\n  for (var i = 0, il = a.length, s = ''; i < il; i++) {\r\n    s += a[i][0]\r\n\r\n    if (a[i][1] != null) {\r\n      s += a[i][1]\r\n\r\n      if (a[i][2] != null) {\r\n        s += ' '\r\n        s += a[i][2]\r\n\r\n        if (a[i][3] != null) {\r\n          s += ' '\r\n          s += a[i][3]\r\n          s += ' '\r\n          s += a[i][4]\r\n\r\n          if (a[i][5] != null) {\r\n            s += ' '\r\n            s += a[i][5]\r\n            s += ' '\r\n            s += a[i][6]\r\n\r\n            if (a[i][7] != null) {\r\n              s += ' '\r\n              s += a[i][7]\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return s + ' '\r\n}\r\n\r\n// Deep new id assignment\r\nfunction assignNewId(node) {\r\n  // do the same for SVG child nodes as well\r\n  for (var i = node.childNodes.length - 1; i >= 0; i--)\r\n    if (node.childNodes[i] instanceof window.SVGElement)\r\n      assignNewId(node.childNodes[i])\r\n\r\n  return SVG.adopt(node).id(SVG.eid(node.nodeName))\r\n}\r\n\r\n// Add more bounding box properties\r\nfunction fullBox(b) {\r\n  if (b.x == null) {\r\n    b.x      = 0\r\n    b.y      = 0\r\n    b.width  = 0\r\n    b.height = 0\r\n  }\r\n\r\n  b.w  = b.width\r\n  b.h  = b.height\r\n  b.x2 = b.x + b.width\r\n  b.y2 = b.y + b.height\r\n  b.cx = b.x + b.width / 2\r\n  b.cy = b.y + b.height / 2\r\n\r\n  return b\r\n}\r\n\r\n// Get id from reference string\r\nfunction idFromReference(url) {\r\n  var m = (url || '').toString().match(SVG.regex.reference)\r\n\r\n  if (m) return m[1]\r\n}\r\n\r\n// If values like 1e-88 are passed, this is not a valid 32 bit float,\r\n// but in those cases, we are so close to 0 that 0 works well!\r\nfunction float32String(v) {\r\n  return Math.abs(v) > 1e-37 ? v : 0\r\n}\r\n\r\n// Create matrix array for looping\r\nvar abcdef = 'abcdef'.split('')\r\n\n// Add CustomEvent to IE9 and IE10\r\nif (typeof window.CustomEvent !== 'function') {\r\n  // Code from: https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent\r\n  var CustomEventPoly = function(event, options) {\r\n    options = options || { bubbles: false, cancelable: false, detail: undefined }\r\n    var e = document.createEvent('CustomEvent')\r\n    e.initCustomEvent(event, options.bubbles, options.cancelable, options.detail)\r\n    return e\r\n  }\r\n\r\n  CustomEventPoly.prototype = window.Event.prototype\r\n\r\n  SVG.CustomEvent = CustomEventPoly\r\n} else {\r\n  SVG.CustomEvent = window.CustomEvent\r\n}\r\n\r\n// requestAnimationFrame / cancelAnimationFrame Polyfill with fallback based on Paul Irish\r\n(function(w) {\r\n  var lastTime = 0\r\n  var vendors = ['moz', 'webkit']\r\n\r\n  for(var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\r\n    w.requestAnimationFrame = w[vendors[x] + 'RequestAnimationFrame']\r\n    w.cancelAnimationFrame  = w[vendors[x] + 'CancelAnimationFrame'] ||\r\n                              w[vendors[x] + 'CancelRequestAnimationFrame']\r\n  }\r\n\r\n  w.requestAnimationFrame = w.requestAnimationFrame ||\r\n    function(callback) {\r\n      var currTime = new Date().getTime()\r\n      var timeToCall = Math.max(0, 16 - (currTime - lastTime))\r\n\r\n      var id = w.setTimeout(function() {\r\n        callback(currTime + timeToCall)\r\n      }, timeToCall)\r\n\r\n      lastTime = currTime + timeToCall\r\n      return id\r\n    }\r\n\r\n  w.cancelAnimationFrame = w.cancelAnimationFrame || w.clearTimeout;\r\n\r\n}(window))\r\n\r\nreturn SVG\r\n\r\n}));\r"
    },
    {
      "id": 27,
      "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/utils/bignumber/formatter.js",
      "name": "../node_modules/mathjs/lib/utils/bignumber/formatter.js",
      "index": 32,
      "index2": 25,
      "size": 7924,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "issuer": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/utils/string.js",
      "issuerId": 28,
      "issuerName": "../node_modules/mathjs/lib/utils/string.js",
      "issuerPath": [
        {
          "id": 49,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
          "name": "./main.ts",
          "profile": {
            "factory": 58,
            "building": 1843
          }
        },
        {
          "id": 18,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DisplayService.ts",
          "name": "./services/DisplayService.ts",
          "profile": {
            "factory": 83,
            "building": 1193,
            "dependencies": 637
          }
        },
        {
          "id": 8,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DrinkDisplayService.ts",
          "name": "./services/DrinkDisplayService.ts",
          "profile": {
            "factory": 735,
            "building": 523,
            "dependencies": 1
          }
        },
        {
          "id": 46,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/MathService.ts",
          "name": "./services/MathService.ts",
          "profile": {
            "factory": 394,
            "building": 17
          }
        },
        {
          "id": 29,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/function/string/format.js",
          "name": "../node_modules/mathjs/lib/function/string/format.js",
          "profile": {
            "factory": 54,
            "building": 107
          }
        },
        {
          "id": 28,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/utils/string.js",
          "name": "../node_modules/mathjs/lib/utils/string.js",
          "profile": {
            "factory": 7,
            "building": 13
          }
        }
      ],
      "profile": {
        "factory": 32,
        "building": 6,
        "dependencies": 1
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 28,
          "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/utils/string.js",
          "module": "../node_modules/mathjs/lib/utils/string.js",
          "moduleName": "../node_modules/mathjs/lib/utils/string.js",
          "type": "cjs require",
          "userRequest": "./bignumber/formatter",
          "loc": "7:22-54"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 6,
      "source": "'use strict';\n\nvar objectUtils = require('../object');\n/**\n * Convert a BigNumber to a formatted string representation.\n *\n * Syntax:\n *\n *    format(value)\n *    format(value, options)\n *    format(value, precision)\n *    format(value, fn)\n *\n * Where:\n *\n *    {number} value   The value to be formatted\n *    {Object} options An object with formatting options. Available options:\n *                     {string} notation\n *                         Number notation. Choose from:\n *                         'fixed'          Always use regular number notation.\n *                                          For example '123.40' and '14000000'\n *                         'exponential'    Always use exponential notation.\n *                                          For example '1.234e+2' and '1.4e+7'\n *                         'auto' (default) Regular number notation for numbers\n *                                          having an absolute value between\n *                                          `lower` and `upper` bounds, and uses\n *                                          exponential notation elsewhere.\n *                                          Lower bound is included, upper bound\n *                                          is excluded.\n *                                          For example '123.4' and '1.4e7'.\n *                     {number} precision   A number between 0 and 16 to round\n *                                          the digits of the number.\n *                                          In case of notations 'exponential',\n *                                          'engineering', and 'auto',\n *                                          `precision` defines the total\n *                                          number of significant digits returned.\n *                                          In case of notation 'fixed',\n *                                          `precision` defines the number of\n *                                          significant digits after the decimal\n *                                          point.\n *                                          `precision` is undefined by default.\n *                     {number} lowerExp    Exponent determining the lower boundary\n *                                          for formatting a value with an exponent\n *                                          when `notation='auto`.\n *                                          Default value is `-3`.\n *                     {number} upperExp    Exponent determining the upper boundary\n *                                          for formatting a value with an exponent\n *                                          when `notation='auto`.\n *                                          Default value is `5`.\n *    {Function} fn    A custom formatting function. Can be used to override the\n *                     built-in notations. Function `fn` is called with `value` as\n *                     parameter and must return a string. Is useful for example to\n *                     format all values inside a matrix in a particular way.\n *\n * Examples:\n *\n *    format(6.4)                                        // '6.4'\n *    format(1240000)                                    // '1.24e6'\n *    format(1/3)                                        // '0.3333333333333333'\n *    format(1/3, 3)                                     // '0.333'\n *    format(21385, 2)                                   // '21000'\n *    format(12e8, {notation: 'fixed'})                  // returns '1200000000'\n *    format(2.3,    {notation: 'fixed', precision: 4})  // returns '2.3000'\n *    format(52.8,   {notation: 'exponential'})          // returns '5.28e+1'\n *    format(12400,  {notation: 'engineering'})          // returns '12.400e+3'\n *\n * @param {BigNumber} value\n * @param {Object | Function | number} [options]\n * @return {string} str The formatted value\n */\n\n\nexports.format = function (value, options) {\n  if (typeof options === 'function') {\n    // handle format(value, fn)\n    return options(value);\n  } // handle special cases\n\n\n  if (!value.isFinite()) {\n    return value.isNaN() ? 'NaN' : value.gt(0) ? 'Infinity' : '-Infinity';\n  } // default values for options\n\n\n  var notation = 'auto';\n  var precision;\n\n  if (options !== undefined) {\n    // determine notation from options\n    if (options.notation) {\n      notation = options.notation;\n    } // determine precision from options\n\n\n    if (typeof options === 'number') {\n      precision = options;\n    } else if (options.precision) {\n      precision = options.precision;\n    }\n  } // handle the various notations\n\n\n  switch (notation) {\n    case 'fixed':\n      return exports.toFixed(value, precision);\n\n    case 'exponential':\n      return exports.toExponential(value, precision);\n\n    case 'auto':\n      // TODO: clean up some day. Deprecated since: 2018-01-24\n      // @deprecated upper and lower are replaced with upperExp and lowerExp since v4.0.0\n      if (options && options.exponential && (options.exponential.lower !== undefined || options.exponential.upper !== undefined)) {\n        var fixedOptions = objectUtils.map(options, function (x) {\n          return x;\n        });\n        fixedOptions.exponential = undefined;\n\n        if (options.exponential.lower !== undefined) {\n          fixedOptions.lowerExp = Math.round(Math.log(options.exponential.lower) / Math.LN10);\n        }\n\n        if (options.exponential.upper !== undefined) {\n          fixedOptions.upperExp = Math.round(Math.log(options.exponential.upper) / Math.LN10);\n        }\n\n        console.warn('Deprecation warning: Formatting options exponential.lower and exponential.upper ' + '(minimum and maximum value) ' + 'are replaced with exponential.lowerExp and exponential.upperExp ' + '(minimum and maximum exponent) since version 4.0.0. ' + 'Replace ' + JSON.stringify(options) + ' with ' + JSON.stringify(fixedOptions));\n        return exports.format(value, fixedOptions);\n      } // determine lower and upper bound for exponential notation.\n      // TODO: implement support for upper and lower to be BigNumbers themselves\n\n\n      var lowerExp = options && options.lowerExp !== undefined ? options.lowerExp : -3;\n      var upperExp = options && options.upperExp !== undefined ? options.upperExp : 5; // handle special case zero\n\n      if (value.isZero()) return '0'; // determine whether or not to output exponential notation\n\n      var str;\n      var exp = value.e;\n\n      if (exp >= lowerExp && exp < upperExp) {\n        // normal number notation\n        str = value.toSignificantDigits(precision).toFixed();\n      } else {\n        // exponential notation\n        str = exports.toExponential(value, precision);\n      } // remove trailing zeros after the decimal point\n\n\n      return str.replace(/((\\.\\d*?)(0+))($|e)/, function () {\n        var digits = arguments[2];\n        var e = arguments[4];\n        return digits !== '.' ? digits + e : e;\n      });\n\n    default:\n      throw new Error('Unknown notation \"' + notation + '\". ' + 'Choose \"auto\", \"exponential\", or \"fixed\".');\n  }\n};\n/**\n * Format a number in exponential notation. Like '1.23e+5', '2.3e+0', '3.500e-3'\n * @param {BigNumber} value\n * @param {number} [precision]  Number of digits in formatted output.\n *                              If not provided, the maximum available digits\n *                              is used.\n * @returns {string} str\n */\n\n\nexports.toExponential = function (value, precision) {\n  if (precision !== undefined) {\n    return value.toExponential(precision - 1); // Note the offset of one\n  } else {\n    return value.toExponential();\n  }\n};\n/**\n * Format a number with fixed notation.\n * @param {BigNumber} value\n * @param {number} [precision=undefined] Optional number of decimals after the\n *                                       decimal point. Undefined by default.\n */\n\n\nexports.toFixed = function (value, precision) {\n  return value.toFixed(precision);\n};"
    },
    {
      "id": 28,
      "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/utils/string.js",
      "name": "../node_modules/mathjs/lib/utils/string.js",
      "index": 31,
      "index2": 26,
      "size": 5877,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "issuer": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/function/string/format.js",
      "issuerId": 29,
      "issuerName": "../node_modules/mathjs/lib/function/string/format.js",
      "issuerPath": [
        {
          "id": 49,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
          "name": "./main.ts",
          "profile": {
            "factory": 58,
            "building": 1843
          }
        },
        {
          "id": 18,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DisplayService.ts",
          "name": "./services/DisplayService.ts",
          "profile": {
            "factory": 83,
            "building": 1193,
            "dependencies": 637
          }
        },
        {
          "id": 8,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DrinkDisplayService.ts",
          "name": "./services/DrinkDisplayService.ts",
          "profile": {
            "factory": 735,
            "building": 523,
            "dependencies": 1
          }
        },
        {
          "id": 46,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/MathService.ts",
          "name": "./services/MathService.ts",
          "profile": {
            "factory": 394,
            "building": 17
          }
        },
        {
          "id": 29,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/function/string/format.js",
          "name": "../node_modules/mathjs/lib/function/string/format.js",
          "profile": {
            "factory": 54,
            "building": 107
          }
        }
      ],
      "profile": {
        "factory": 7,
        "building": 13
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 29,
          "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/function/string/format.js",
          "module": "../node_modules/mathjs/lib/function/string/format.js",
          "moduleName": "../node_modules/mathjs/lib/function/string/format.js",
          "type": "cjs require",
          "userRequest": "../../utils/string",
          "loc": "3:13-42"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 5,
      "source": "'use strict';\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar formatNumber = require('./number').format;\n\nvar formatBigNumber = require('./bignumber/formatter').format;\n\nvar isBigNumber = require('./bignumber/isBigNumber');\n/**\n * Test whether value is a string\n * @param {*} value\n * @return {boolean} isString\n */\n\n\nexports.isString = function (value) {\n  return typeof value === 'string';\n};\n/**\n * Check if a text ends with a certain string.\n * @param {string} text\n * @param {string} search\n */\n\n\nexports.endsWith = function (text, search) {\n  var start = text.length - search.length;\n  var end = text.length;\n  return text.substring(start, end) === search;\n};\n/**\n * Format a value of any type into a string.\n *\n * Usage:\n *     math.format(value)\n *     math.format(value, precision)\n *\n * When value is a function:\n *\n * - When the function has a property `syntax`, it returns this\n *   syntax description.\n * - In other cases, a string `'function'` is returned.\n *\n * When `value` is an Object:\n *\n * - When the object contains a property `format` being a function, this\n *   function is invoked as `value.format(options)` and the result is returned.\n * - When the object has its own `toString` method, this method is invoked\n *   and the result is returned.\n * - In other cases the function will loop over all object properties and\n *   return JSON object notation like '{\"a\": 2, \"b\": 3}'.\n *\n * Example usage:\n *     math.format(2/7)                // '0.2857142857142857'\n *     math.format(math.pi, 3)         // '3.14'\n *     math.format(new Complex(2, 3))  // '2 + 3i'\n *     math.format('hello')            // '\"hello\"'\n *\n * @param {*} value             Value to be stringified\n * @param {Object | number | Function} [options]  Formatting options. See\n *                                                lib/utils/number:format for a\n *                                                description of the available\n *                                                options.\n * @return {string} str\n */\n\n\nexports.format = function (value, options) {\n  if (typeof value === 'number') {\n    return formatNumber(value, options);\n  }\n\n  if (isBigNumber(value)) {\n    return formatBigNumber(value, options);\n  } // note: we use unsafe duck-typing here to check for Fractions, this is\n  // ok here since we're only invoking toString or concatenating its values\n\n\n  if (looksLikeFraction(value)) {\n    if (!options || options.fraction !== 'decimal') {\n      // output as ratio, like '1/3'\n      return value.s * value.n + '/' + value.d;\n    } else {\n      // output as decimal, like '0.(3)'\n      return value.toString();\n    }\n  }\n\n  if (Array.isArray(value)) {\n    return formatArray(value, options);\n  }\n\n  if (exports.isString(value)) {\n    return '\"' + value + '\"';\n  }\n\n  if (typeof value === 'function') {\n    return value.syntax ? String(value.syntax) : 'function';\n  }\n\n  if (value && _typeof(value) === 'object') {\n    if (typeof value.format === 'function') {\n      return value.format(options);\n    } else if (value && value.toString() !== {}.toString()) {\n      // this object has a non-native toString method, use that one\n      return value.toString();\n    } else {\n      var entries = [];\n\n      for (var key in value) {\n        if (value.hasOwnProperty(key)) {\n          entries.push('\"' + key + '\": ' + exports.format(value[key], options));\n        }\n      }\n\n      return '{' + entries.join(', ') + '}';\n    }\n  }\n\n  return String(value);\n};\n/**\n * Stringify a value into a string enclosed in double quotes.\n * Unescaped double quotes and backslashes inside the value are escaped.\n * @param {*} value\n * @return {string}\n */\n\n\nexports.stringify = function (value) {\n  var text = String(value);\n  var escaped = '';\n  var i = 0;\n\n  while (i < text.length) {\n    var c = text.charAt(i);\n\n    if (c === '\\\\') {\n      escaped += c;\n      i++;\n      c = text.charAt(i);\n\n      if (c === '' || '\"\\\\/bfnrtu'.indexOf(c) === -1) {\n        escaped += '\\\\'; // no valid escape character -> escape it\n      }\n\n      escaped += c;\n    } else if (c === '\"') {\n      escaped += '\\\\\"';\n    } else {\n      escaped += c;\n    }\n\n    i++;\n  }\n\n  return '\"' + escaped + '\"';\n};\n/**\n * Escape special HTML characters\n * @param {*} value\n * @return {string}\n */\n\n\nexports.escape = function (value) {\n  var text = String(value);\n  text = text.replace(/&/g, '&amp;').replace(/\"/g, '&quot;').replace(/'/g, '&#39;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n  return text;\n};\n/**\n * Recursively format an n-dimensional matrix\n * Example output: \"[[1, 2], [3, 4]]\"\n * @param {Array} array\n * @param {Object | number | Function} [options]  Formatting options. See\n *                                                lib/utils/number:format for a\n *                                                description of the available\n *                                                options.\n * @returns {string} str\n */\n\n\nfunction formatArray(array, options) {\n  if (Array.isArray(array)) {\n    var str = '[';\n    var len = array.length;\n\n    for (var i = 0; i < len; i++) {\n      if (i !== 0) {\n        str += ', ';\n      }\n\n      str += formatArray(array[i], options);\n    }\n\n    str += ']';\n    return str;\n  } else {\n    return exports.format(array, options);\n  }\n}\n/**\n * Check whether a value looks like a Fraction (unsafe duck-type check)\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction looksLikeFraction(value) {\n  return value && _typeof(value) === 'object' && typeof value.s === 'number' && typeof value.n === 'number' && typeof value.d === 'number' || false;\n}"
    },
    {
      "id": 29,
      "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/function/string/format.js",
      "name": "../node_modules/mathjs/lib/function/string/format.js",
      "index": 30,
      "index2": 27,
      "size": 5024,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "issuer": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/MathService.ts",
      "issuerId": 46,
      "issuerName": "./services/MathService.ts",
      "issuerPath": [
        {
          "id": 49,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
          "name": "./main.ts",
          "profile": {
            "factory": 58,
            "building": 1843
          }
        },
        {
          "id": 18,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DisplayService.ts",
          "name": "./services/DisplayService.ts",
          "profile": {
            "factory": 83,
            "building": 1193,
            "dependencies": 637
          }
        },
        {
          "id": 8,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DrinkDisplayService.ts",
          "name": "./services/DrinkDisplayService.ts",
          "profile": {
            "factory": 735,
            "building": 523,
            "dependencies": 1
          }
        },
        {
          "id": 46,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/MathService.ts",
          "name": "./services/MathService.ts",
          "profile": {
            "factory": 394,
            "building": 17
          }
        }
      ],
      "profile": {
        "factory": 54,
        "building": 107
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 46,
          "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/MathService.ts",
          "module": "./services/MathService.ts",
          "moduleName": "./services/MathService.ts",
          "type": "cjs require",
          "userRequest": "mathjs/lib/function/string/format",
          "loc": "7:12-56"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 4,
      "source": "'use strict';\n\nvar string = require('../../utils/string');\n\nfunction factory(type, config, load, typed) {\n  /**\n   * Format a value of any type into a string.\n   *\n   * Syntax:\n   *\n   *    math.format(value)\n   *    math.format(value, options)\n   *    math.format(value, precision)\n   *    math.format(value, callback)\n   *\n   * Where:\n   *\n   *  - `value: *`\n   *    The value to be formatted\n   *  - `options: Object`\n   *    An object with formatting options. Available options:\n   *    - `notation: string`\n   *      Number notation. Choose from:\n   *      - 'fixed'\n   *        Always use regular number notation.\n   *        For example '123.40' and '14000000'\n   *      - 'exponential'\n   *        Always use exponential notation.\n   *        For example '1.234e+2' and '1.4e+7'\n   *      - 'engineering'\n   *        Always use engineering notation.\n   *        For example '123.4e+0' and '14.0e+6'\n   *      - 'auto' (default)\n   *        Regular number notation for numbers having an absolute value between\n   *        `lower` and `upper` bounds, and uses exponential notation elsewhere.\n   *        Lower bound is included, upper bound is excluded.\n   *        For example '123.4' and '1.4e7'.\n   *    - `precision: number`\n   *      A number between 0 and 16 to round the digits of the number. In case\n   *      of notations 'exponential', 'engineering', and 'auto', `precision`\n   *      defines the total number of significant digits returned.\n   *      In case of notation 'fixed', `precision` defines the number of\n   *      significant digits after the decimal point.\n   *      `precision` is undefined by default.\n   *    - `lowerExp: number`\n   *      Exponent determining the lower boundary for formatting a value with\n   *      an exponent when `notation='auto`. Default value is `-3`.\n   *    - `upperExp: number`\n   *      Exponent determining the upper boundary for formatting a value with\n   *      an exponent when `notation='auto`. Default value is `5`.\n   *    - `fraction: string`. Available values: 'ratio' (default) or 'decimal'.\n   *      For example `format(fraction(1, 3))` will output '1/3' when 'ratio' is\n   *      configured, and will output `0.(3)` when 'decimal' is configured.\n   * - `callback: function`\n   *   A custom formatting function, invoked for all numeric elements in `value`,\n   *   for example all elements of a matrix, or the real and imaginary\n   *   parts of a complex number. This callback can be used to override the\n   *   built-in numeric notation with any type of formatting. Function `callback`\n   *   is called with `value` as parameter and must return a string.\n   *\n   * When `value` is an Object:\n   *\n   * - When the object contains a property `format` being a function, this function\n   *   is invoked as `value.format(options)` and the result is returned.\n   * - When the object has its own `toString` method, this method is invoked\n   *   and the result is returned.\n   * - In other cases the function will loop over all object properties and\n   *   return JSON object notation like '{\"a\": 2, \"b\": 3}'.\n   *\n   * When value is a function:\n   *\n   * - When the function has a property `syntax`, it returns this\n   *   syntax description.\n   * - In other cases, a string `'function'` is returned.\n   *\n   * Examples:\n   *\n   *    math.format(6.4)                                        // returns '6.4'\n   *    math.format(1240000)                                    // returns '1.24e6'\n   *    math.format(1/3)                                        // returns '0.3333333333333333'\n   *    math.format(1/3, 3)                                     // returns '0.333'\n   *    math.format(21385, 2)                                   // returns '21000'\n   *    math.format(12e8, {notation: 'fixed'})                  // returns '1200000000'\n   *    math.format(2.3,  {notation: 'fixed', precision: 4})    // returns '2.3000'\n   *    math.format(52.8, {notation: 'exponential'})            // returns '5.28e+1'\n   *    math.format(12400,{notation: 'engineering'})            // returns '12.400e+3'\n   *    math.format(2000, {lowerExp: -2, upperExp: 2})          // returns '2e+3'\n   *\n   *    function formatCurrency(value) {\n   *      // return currency notation with two digits:\n   *      return '$' + value.toFixed(2)\n   *\n   *      // you could also use math.format inside the callback:\n   *      // return '$' + math.format(value, {notation: 'fixed', precision: 2})\n   *    }\n   *    math.format([2.1, 3, 0.016], formatCurrency}            // returns '[$2.10, $3.00, $0.02]'\n   *\n   * See also:\n   *\n   *    print\n   *\n   * @param {*} value                               Value to be stringified\n   * @param {Object | Function | number} [options]  Formatting options\n   * @return {string} The formatted value\n   */\n  var format = typed('format', {\n    'any': string.format,\n    'any, Object | function | number': string.format\n  });\n  format.toTex = undefined; // use default template\n\n  return format;\n}\n\nexports.name = 'format';\nexports.factory = factory;"
    },
    {
      "id": 30,
      "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/utils/collection/deepMap.js",
      "name": "../node_modules/mathjs/lib/utils/collection/deepMap.js",
      "index": 29,
      "index2": 22,
      "size": 835,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "issuer": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/type/fraction/function/fraction.js",
      "issuerId": 31,
      "issuerName": "../node_modules/mathjs/lib/type/fraction/function/fraction.js",
      "issuerPath": [
        {
          "id": 49,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
          "name": "./main.ts",
          "profile": {
            "factory": 58,
            "building": 1843
          }
        },
        {
          "id": 18,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DisplayService.ts",
          "name": "./services/DisplayService.ts",
          "profile": {
            "factory": 83,
            "building": 1193,
            "dependencies": 637
          }
        },
        {
          "id": 8,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DrinkDisplayService.ts",
          "name": "./services/DrinkDisplayService.ts",
          "profile": {
            "factory": 735,
            "building": 523,
            "dependencies": 1
          }
        },
        {
          "id": 46,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/MathService.ts",
          "name": "./services/MathService.ts",
          "profile": {
            "factory": 394,
            "building": 17
          }
        },
        {
          "id": 34,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/type/fraction/index.js",
          "name": "../node_modules/mathjs/lib/type/fraction/index.js",
          "profile": {
            "factory": 54,
            "building": 107
          }
        },
        {
          "id": 31,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/type/fraction/function/fraction.js",
          "name": "../node_modules/mathjs/lib/type/fraction/function/fraction.js",
          "profile": {
            "factory": 5,
            "building": 12
          }
        }
      ],
      "profile": {
        "factory": 10,
        "building": 25
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 31,
          "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/type/fraction/function/fraction.js",
          "module": "../node_modules/mathjs/lib/type/fraction/function/fraction.js",
          "moduleName": "../node_modules/mathjs/lib/type/fraction/function/fraction.js",
          "type": "cjs require",
          "userRequest": "../../../utils/collection/deepMap",
          "loc": "3:14-58"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 6,
      "source": "'use strict';\n/**\n * Execute the callback function element wise for each element in array and any\n * nested array\n * Returns an array with the results\n * @param {Array | Matrix} array\n * @param {Function} callback   The callback is called with two parameters:\n *                              value1 and value2, which contain the current\n *                              element of both arrays.\n * @param {boolean} [skipZeros] Invoke callback function for non-zero values only.\n *\n * @return {Array | Matrix} res\n */\n\nmodule.exports = function deepMap(array, callback, skipZeros) {\n  if (array && typeof array.map === 'function') {\n    // TODO: replace array.map with a for loop to improve performance\n    return array.map(function (x) {\n      return deepMap(x, callback, skipZeros);\n    });\n  } else {\n    return callback(array);\n  }\n};"
    },
    {
      "id": 31,
      "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/type/fraction/function/fraction.js",
      "name": "../node_modules/mathjs/lib/type/fraction/function/fraction.js",
      "index": 28,
      "index2": 23,
      "size": 1870,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "issuer": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/type/fraction/index.js",
      "issuerId": 34,
      "issuerName": "../node_modules/mathjs/lib/type/fraction/index.js",
      "issuerPath": [
        {
          "id": 49,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
          "name": "./main.ts",
          "profile": {
            "factory": 58,
            "building": 1843
          }
        },
        {
          "id": 18,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DisplayService.ts",
          "name": "./services/DisplayService.ts",
          "profile": {
            "factory": 83,
            "building": 1193,
            "dependencies": 637
          }
        },
        {
          "id": 8,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DrinkDisplayService.ts",
          "name": "./services/DrinkDisplayService.ts",
          "profile": {
            "factory": 735,
            "building": 523,
            "dependencies": 1
          }
        },
        {
          "id": 46,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/MathService.ts",
          "name": "./services/MathService.ts",
          "profile": {
            "factory": 394,
            "building": 17
          }
        },
        {
          "id": 34,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/type/fraction/index.js",
          "name": "../node_modules/mathjs/lib/type/fraction/index.js",
          "profile": {
            "factory": 54,
            "building": 107
          }
        }
      ],
      "profile": {
        "factory": 5,
        "building": 12
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 34,
          "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/type/fraction/index.js",
          "module": "../node_modules/mathjs/lib/type/fraction/index.js",
          "moduleName": "../node_modules/mathjs/lib/type/fraction/index.js",
          "type": "cjs require",
          "userRequest": "./function/fraction",
          "loc": "5:0-30"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 5,
      "source": "'use strict';\n\nvar deepMap = require('../../../utils/collection/deepMap');\n\nfunction factory(type, config, load, typed) {\n  /**\n   * Create a fraction convert a value to a fraction.\n   *\n   * Syntax:\n   *     math.fraction(numerator, denominator)\n   *     math.fraction({n: numerator, d: denominator})\n   *     math.fraction(matrix: Array | Matrix)         Turn all matrix entries\n   *                                                   into fractions\n   *\n   * Examples:\n   *\n   *     math.fraction(1, 3)\n   *     math.fraction('2/3')\n   *     math.fraction({n: 2, d: 3})\n   *     math.fraction([0.2, 0.25, 1.25])\n   *\n   * See also:\n   *\n   *    bignumber, number, string, unit\n   *\n   * @param {number | string | Fraction | BigNumber | Array | Matrix} [args]\n   *            Arguments specifying the numerator and denominator of\n   *            the fraction\n   * @return {Fraction | Array | Matrix} Returns a fraction\n   */\n  var fraction = typed('fraction', {\n    'number': function number(x) {\n      if (!isFinite(x) || isNaN(x)) {\n        throw new Error(x + ' cannot be represented as a fraction');\n      }\n\n      return new type.Fraction(x);\n    },\n    'string': function string(x) {\n      return new type.Fraction(x);\n    },\n    'number, number': function numberNumber(numerator, denominator) {\n      return new type.Fraction(numerator, denominator);\n    },\n    'null': function _null(x) {\n      return new type.Fraction(0);\n    },\n    'BigNumber': function BigNumber(x) {\n      return new type.Fraction(x.toString());\n    },\n    'Fraction': function Fraction(x) {\n      return x; // fractions are immutable\n    },\n    'Object': function Object(x) {\n      return new type.Fraction(x);\n    },\n    'Array | Matrix': function ArrayMatrix(x) {\n      return deepMap(x, fraction);\n    }\n  });\n  return fraction;\n}\n\nexports.name = 'fraction';\nexports.factory = factory;"
    },
    {
      "id": 32,
      "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/fraction.js/fraction.js",
      "name": "../node_modules/fraction.js/fraction.js",
      "index": 27,
      "index2": 20,
      "size": 19075,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "issuer": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/type/fraction/Fraction.js",
      "issuerId": 33,
      "issuerName": "../node_modules/mathjs/lib/type/fraction/Fraction.js",
      "issuerPath": [
        {
          "id": 49,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
          "name": "./main.ts",
          "profile": {
            "factory": 58,
            "building": 1843
          }
        },
        {
          "id": 18,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DisplayService.ts",
          "name": "./services/DisplayService.ts",
          "profile": {
            "factory": 83,
            "building": 1193,
            "dependencies": 637
          }
        },
        {
          "id": 8,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DrinkDisplayService.ts",
          "name": "./services/DrinkDisplayService.ts",
          "profile": {
            "factory": 735,
            "building": 523,
            "dependencies": 1
          }
        },
        {
          "id": 46,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/MathService.ts",
          "name": "./services/MathService.ts",
          "profile": {
            "factory": 394,
            "building": 17
          }
        },
        {
          "id": 34,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/type/fraction/index.js",
          "name": "../node_modules/mathjs/lib/type/fraction/index.js",
          "profile": {
            "factory": 54,
            "building": 107
          }
        },
        {
          "id": 33,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/type/fraction/Fraction.js",
          "name": "../node_modules/mathjs/lib/type/fraction/Fraction.js",
          "profile": {
            "factory": 5,
            "building": 12
          }
        }
      ],
      "profile": {
        "factory": 51,
        "building": 11
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 33,
          "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/type/fraction/Fraction.js",
          "module": "../node_modules/mathjs/lib/type/fraction/Fraction.js",
          "moduleName": "../node_modules/mathjs/lib/type/fraction/Fraction.js",
          "type": "cjs require",
          "userRequest": "fraction.js",
          "loc": "3:15-37"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 6,
      "source": "/**\n * @license Fraction.js v4.0.12 09/09/2015\n * http://www.xarg.org/2014/03/rational-numbers-in-javascript/\n *\n * Copyright (c) 2015, Robert Eisele (robert@xarg.org)\n * Dual licensed under the MIT or GPL Version 2 licenses.\n **/\n\n\n/**\n *\n * This class offers the possibility to calculate fractions.\n * You can pass a fraction in different formats. Either as array, as double, as string or as an integer.\n *\n * Array/Object form\n * [ 0 => <nominator>, 1 => <denominator> ]\n * [ n => <nominator>, d => <denominator> ]\n *\n * Integer form\n * - Single integer value\n *\n * Double form\n * - Single double value\n *\n * String form\n * 123.456 - a simple double\n * 123/456 - a string fraction\n * 123.'456' - a double with repeating decimal places\n * 123.(456) - synonym\n * 123.45'6' - a double with repeating last place\n * 123.45(6) - synonym\n *\n * Example:\n *\n * var f = new Fraction(\"9.4'31'\");\n * f.mul([-4, 3]).div(4.9);\n *\n */\n\n(function(root) {\n\n  \"use strict\";\n\n  // Maximum search depth for cyclic rational numbers. 2000 should be more than enough.\n  // Example: 1/7 = 0.(142857) has 6 repeating decimal places.\n  // If MAX_CYCLE_LEN gets reduced, long cycles will not be detected and toString() only gets the first 10 digits\n  var MAX_CYCLE_LEN = 2000;\n\n  // Parsed data to avoid calling \"new\" all the time\n  var P = {\n    \"s\": 1,\n    \"n\": 0,\n    \"d\": 1\n  };\n\n  function createError(name) {\n\n    function errorConstructor() {\n      var temp = Error.apply(this, arguments);\n      temp['name'] = this['name'] = name;\n      this['stack'] = temp['stack'];\n      this['message'] = temp['message'];\n    }\n\n    /**\n     * Error constructor\n     *\n     * @constructor\n     */\n    function IntermediateInheritor() {}\n    IntermediateInheritor.prototype = Error.prototype;\n    errorConstructor.prototype = new IntermediateInheritor();\n\n    return errorConstructor;\n  }\n\n  var DivisionByZero = Fraction['DivisionByZero'] = createError('DivisionByZero');\n  var InvalidParameter = Fraction['InvalidParameter'] = createError('InvalidParameter');\n\n  function assign(n, s) {\n\n    if (isNaN(n = parseInt(n, 10))) {\n      throwInvalidParam();\n    }\n    return n * s;\n  }\n\n  function throwInvalidParam() {\n    throw new InvalidParameter();\n  }\n\n  var parse = function(p1, p2) {\n\n    var n = 0, d = 1, s = 1;\n    var v = 0, w = 0, x = 0, y = 1, z = 1;\n\n    var A = 0, B = 1;\n    var C = 1, D = 1;\n\n    var N = 10000000;\n    var M;\n\n    if (p1 === undefined || p1 === null) {\n      /* void */\n    } else if (p2 !== undefined) {\n      n = p1;\n      d = p2;\n      s = n * d;\n    } else\n      switch (typeof p1) {\n\n        case \"object\":\n        {\n          if (\"d\" in p1 && \"n\" in p1) {\n            n = p1[\"n\"];\n            d = p1[\"d\"];\n            if (\"s\" in p1)\n              n *= p1[\"s\"];\n          } else if (0 in p1) {\n            n = p1[0];\n            if (1 in p1)\n              d = p1[1];\n          } else {\n            throwInvalidParam();\n          }\n          s = n * d;\n          break;\n        }\n        case \"number\":\n        {\n          if (p1 < 0) {\n            s = p1;\n            p1 = -p1;\n          }\n\n          if (p1 % 1 === 0) {\n            n = p1;\n          } else if (p1 > 0) { // check for != 0, scale would become NaN (log(0)), which converges really slow\n\n            if (p1 >= 1) {\n              z = Math.pow(10, Math.floor(1 + Math.log(p1) / Math.LN10));\n              p1 /= z;\n            }\n\n            // Using Farey Sequences\n            // http://www.johndcook.com/blog/2010/10/20/best-rational-approximation/\n\n            while (B <= N && D <= N) {\n              M = (A + C) / (B + D);\n\n              if (p1 === M) {\n                if (B + D <= N) {\n                  n = A + C;\n                  d = B + D;\n                } else if (D > B) {\n                  n = C;\n                  d = D;\n                } else {\n                  n = A;\n                  d = B;\n                }\n                break;\n\n              } else {\n\n                if (p1 > M) {\n                  A += C;\n                  B += D;\n                } else {\n                  C += A;\n                  D += B;\n                }\n\n                if (B > N) {\n                  n = C;\n                  d = D;\n                } else {\n                  n = A;\n                  d = B;\n                }\n              }\n            }\n            n *= z;\n          } else if (isNaN(p1) || isNaN(p2)) {\n            d = n = NaN;\n          }\n          break;\n        }\n        case \"string\":\n        {\n          B = p1.match(/\\d+|./g);\n\n          if (B === null)\n            throwInvalidParam();\n\n          if (B[A] === '-') {// Check for minus sign at the beginning\n            s = -1;\n            A++;\n          } else if (B[A] === '+') {// Check for plus sign at the beginning\n            A++;\n          }\n\n          if (B.length === A + 1) { // Check if it's just a simple number \"1234\"\n            w = assign(B[A++], s);\n          } else if (B[A + 1] === '.' || B[A] === '.') { // Check if it's a decimal number\n\n            if (B[A] !== '.') { // Handle 0.5 and .5\n              v = assign(B[A++], s);\n            }\n            A++;\n\n            // Check for decimal places\n            if (A + 1 === B.length || B[A + 1] === '(' && B[A + 3] === ')' || B[A + 1] === \"'\" && B[A + 3] === \"'\") {\n              w = assign(B[A], s);\n              y = Math.pow(10, B[A].length);\n              A++;\n            }\n\n            // Check for repeating places\n            if (B[A] === '(' && B[A + 2] === ')' || B[A] === \"'\" && B[A + 2] === \"'\") {\n              x = assign(B[A + 1], s);\n              z = Math.pow(10, B[A + 1].length) - 1;\n              A += 3;\n            }\n\n          } else if (B[A + 1] === '/' || B[A + 1] === ':') { // Check for a simple fraction \"123/456\" or \"123:456\"\n            w = assign(B[A], s);\n            y = assign(B[A + 2], 1);\n            A += 3;\n          } else if (B[A + 3] === '/' && B[A + 1] === ' ') { // Check for a complex fraction \"123 1/2\"\n            v = assign(B[A], s);\n            w = assign(B[A + 2], s);\n            y = assign(B[A + 4], 1);\n            A += 5;\n          }\n\n          if (B.length <= A) { // Check for more tokens on the stack\n            d = y * z;\n            s = /* void */\n                    n = x + d * v + z * w;\n            break;\n          }\n\n          /* Fall through on error */\n        }\n        default:\n          throwInvalidParam();\n      }\n\n    if (d === 0) {\n      throw new DivisionByZero();\n    }\n\n    P[\"s\"] = s < 0 ? -1 : 1;\n    P[\"n\"] = Math.abs(n);\n    P[\"d\"] = Math.abs(d);\n  };\n\n  function modpow(b, e, m) {\n\n    var r = 1;\n    for (; e > 0; b = (b * b) % m, e >>= 1) {\n\n      if (e & 1) {\n        r = (r * b) % m;\n      }\n    }\n    return r;\n  }\n\n\n  function cycleLen(n, d) {\n\n    for (; d % 2 === 0;\n            d /= 2) {\n    }\n\n    for (; d % 5 === 0;\n            d /= 5) {\n    }\n\n    if (d === 1) // Catch non-cyclic numbers\n      return 0;\n\n    // If we would like to compute really large numbers quicker, we could make use of Fermat's little theorem:\n    // 10^(d-1) % d == 1\n    // However, we don't need such large numbers and MAX_CYCLE_LEN should be the capstone,\n    // as we want to translate the numbers to strings.\n\n    var rem = 10 % d;\n    var t = 1;\n\n    for (; rem !== 1; t++) {\n      rem = rem * 10 % d;\n\n      if (t > MAX_CYCLE_LEN)\n        return 0; // Returning 0 here means that we don't print it as a cyclic number. It's likely that the answer is `d-1`\n    }\n    return t;\n  }\n\n\n     function cycleStart(n, d, len) {\n\n    var rem1 = 1;\n    var rem2 = modpow(10, len, d);\n\n    for (var t = 0; t < 300; t++) { // s < ~log10(Number.MAX_VALUE)\n      // Solve 10^s == 10^(s+t) (mod d)\n\n      if (rem1 === rem2)\n        return t;\n\n      rem1 = rem1 * 10 % d;\n      rem2 = rem2 * 10 % d;\n    }\n    return 0;\n  }\n\n  function gcd(a, b) {\n\n    if (!a)\n      return b;\n    if (!b)\n      return a;\n\n    while (1) {\n      a %= b;\n      if (!a)\n        return b;\n      b %= a;\n      if (!b)\n        return a;\n    }\n  };\n\n  /**\n   * Module constructor\n   *\n   * @constructor\n   * @param {number|Fraction=} a\n   * @param {number=} b\n   */\n  function Fraction(a, b) {\n\n    if (!(this instanceof Fraction)) {\n      return new Fraction(a, b);\n    }\n\n    parse(a, b);\n\n    if (Fraction['REDUCE']) {\n      a = gcd(P[\"d\"], P[\"n\"]); // Abuse a\n    } else {\n      a = 1;\n    }\n\n    this[\"s\"] = P[\"s\"];\n    this[\"n\"] = P[\"n\"] / a;\n    this[\"d\"] = P[\"d\"] / a;\n  }\n\n  /**\n   * Boolean global variable to be able to disable automatic reduction of the fraction\n   *\n   */\n  Fraction['REDUCE'] = 1;\n\n  Fraction.prototype = {\n\n    \"s\": 1,\n    \"n\": 0,\n    \"d\": 1,\n\n    /**\n     * Calculates the absolute value\n     *\n     * Ex: new Fraction(-4).abs() => 4\n     **/\n    \"abs\": function() {\n\n      return new Fraction(this[\"n\"], this[\"d\"]);\n    },\n\n    /**\n     * Inverts the sign of the current fraction\n     *\n     * Ex: new Fraction(-4).neg() => 4\n     **/\n    \"neg\": function() {\n\n      return new Fraction(-this[\"s\"] * this[\"n\"], this[\"d\"]);\n    },\n\n    /**\n     * Adds two rational numbers\n     *\n     * Ex: new Fraction({n: 2, d: 3}).add(\"14.9\") => 467 / 30\n     **/\n    \"add\": function(a, b) {\n\n      parse(a, b);\n      return new Fraction(\n              this[\"s\"] * this[\"n\"] * P[\"d\"] + P[\"s\"] * this[\"d\"] * P[\"n\"],\n              this[\"d\"] * P[\"d\"]\n              );\n    },\n\n    /**\n     * Subtracts two rational numbers\n     *\n     * Ex: new Fraction({n: 2, d: 3}).add(\"14.9\") => -427 / 30\n     **/\n    \"sub\": function(a, b) {\n\n      parse(a, b);\n      return new Fraction(\n              this[\"s\"] * this[\"n\"] * P[\"d\"] - P[\"s\"] * this[\"d\"] * P[\"n\"],\n              this[\"d\"] * P[\"d\"]\n              );\n    },\n\n    /**\n     * Multiplies two rational numbers\n     *\n     * Ex: new Fraction(\"-17.(345)\").mul(3) => 5776 / 111\n     **/\n    \"mul\": function(a, b) {\n\n      parse(a, b);\n      return new Fraction(\n              this[\"s\"] * P[\"s\"] * this[\"n\"] * P[\"n\"],\n              this[\"d\"] * P[\"d\"]\n              );\n    },\n\n    /**\n     * Divides two rational numbers\n     *\n     * Ex: new Fraction(\"-17.(345)\").inverse().div(3)\n     **/\n    \"div\": function(a, b) {\n\n      parse(a, b);\n      return new Fraction(\n              this[\"s\"] * P[\"s\"] * this[\"n\"] * P[\"d\"],\n              this[\"d\"] * P[\"n\"]\n              );\n    },\n\n    /**\n     * Clones the actual object\n     *\n     * Ex: new Fraction(\"-17.(345)\").clone()\n     **/\n    \"clone\": function() {\n      return new Fraction(this);\n    },\n\n    /**\n     * Calculates the modulo of two rational numbers - a more precise fmod\n     *\n     * Ex: new Fraction('4.(3)').mod([7, 8]) => (13/3) % (7/8) = (5/6)\n     **/\n    \"mod\": function(a, b) {\n\n      if (isNaN(this['n']) || isNaN(this['d'])) {\n        return new Fraction(NaN);\n      }\n\n      if (a === undefined) {\n        return new Fraction(this[\"s\"] * this[\"n\"] % this[\"d\"], 1);\n      }\n\n      parse(a, b);\n      if (0 === P[\"n\"] && 0 === this[\"d\"]) {\n        Fraction(0, 0); // Throw DivisionByZero\n      }\n\n      /*\n       * First silly attempt, kinda slow\n       *\n       return that[\"sub\"]({\n       \"n\": num[\"n\"] * Math.floor((this.n / this.d) / (num.n / num.d)),\n       \"d\": num[\"d\"],\n       \"s\": this[\"s\"]\n       });*/\n\n      /*\n       * New attempt: a1 / b1 = a2 / b2 * q + r\n       * => b2 * a1 = a2 * b1 * q + b1 * b2 * r\n       * => (b2 * a1 % a2 * b1) / (b1 * b2)\n       */\n      return new Fraction(\n              this[\"s\"] * (P[\"d\"] * this[\"n\"]) % (P[\"n\"] * this[\"d\"]),\n              P[\"d\"] * this[\"d\"]\n              );\n    },\n\n    /**\n     * Calculates the fractional gcd of two rational numbers\n     *\n     * Ex: new Fraction(5,8).gcd(3,7) => 1/56\n     */\n    \"gcd\": function(a, b) {\n\n      parse(a, b);\n\n      // gcd(a / b, c / d) = gcd(a, c) / lcm(b, d)\n\n      return new Fraction(gcd(P[\"n\"], this[\"n\"]) * gcd(P[\"d\"], this[\"d\"]), P[\"d\"] * this[\"d\"]);\n    },\n\n    /**\n     * Calculates the fractional lcm of two rational numbers\n     *\n     * Ex: new Fraction(5,8).lcm(3,7) => 15\n     */\n    \"lcm\": function(a, b) {\n\n      parse(a, b);\n\n      // lcm(a / b, c / d) = lcm(a, c) / gcd(b, d)\n\n      if (P[\"n\"] === 0 && this[\"n\"] === 0) {\n        return new Fraction;\n      }\n      return new Fraction(P[\"n\"] * this[\"n\"], gcd(P[\"n\"], this[\"n\"]) * gcd(P[\"d\"], this[\"d\"]));\n    },\n\n    /**\n     * Calculates the ceil of a rational number\n     *\n     * Ex: new Fraction('4.(3)').ceil() => (5 / 1)\n     **/\n    \"ceil\": function(places) {\n\n      places = Math.pow(10, places || 0);\n\n      if (isNaN(this[\"n\"]) || isNaN(this[\"d\"])) {\n        return new Fraction(NaN);\n      }\n      return new Fraction(Math.ceil(places * this[\"s\"] * this[\"n\"] / this[\"d\"]), places);\n    },\n\n    /**\n     * Calculates the floor of a rational number\n     *\n     * Ex: new Fraction('4.(3)').floor() => (4 / 1)\n     **/\n    \"floor\": function(places) {\n\n      places = Math.pow(10, places || 0);\n\n      if (isNaN(this[\"n\"]) || isNaN(this[\"d\"])) {\n        return new Fraction(NaN);\n      }\n      return new Fraction(Math.floor(places * this[\"s\"] * this[\"n\"] / this[\"d\"]), places);\n    },\n\n    /**\n     * Rounds a rational numbers\n     *\n     * Ex: new Fraction('4.(3)').round() => (4 / 1)\n     **/\n    \"round\": function(places) {\n\n      places = Math.pow(10, places || 0);\n\n      if (isNaN(this[\"n\"]) || isNaN(this[\"d\"])) {\n        return new Fraction(NaN);\n      }\n      return new Fraction(Math.round(places * this[\"s\"] * this[\"n\"] / this[\"d\"]), places);\n    },\n\n    /**\n     * Gets the inverse of the fraction, means numerator and denumerator are exchanged\n     *\n     * Ex: new Fraction([-3, 4]).inverse() => -4 / 3\n     **/\n    \"inverse\": function() {\n\n      return new Fraction(this[\"s\"] * this[\"d\"], this[\"n\"]);\n    },\n\n    /**\n     * Calculates the fraction to some integer exponent\n     *\n     * Ex: new Fraction(-1,2).pow(-3) => -8\n     */\n    \"pow\": function(m) {\n\n      if (m < 0) {\n        return new Fraction(Math.pow(this['s'] * this[\"d\"], -m), Math.pow(this[\"n\"], -m));\n      } else {\n        return new Fraction(Math.pow(this['s'] * this[\"n\"], m), Math.pow(this[\"d\"], m));\n      }\n    },\n\n    /**\n     * Check if two rational numbers are the same\n     *\n     * Ex: new Fraction(19.6).equals([98, 5]);\n     **/\n    \"equals\": function(a, b) {\n\n      parse(a, b);\n      return this[\"s\"] * this[\"n\"] * P[\"d\"] === P[\"s\"] * P[\"n\"] * this[\"d\"]; // Same as compare() === 0\n    },\n\n    /**\n     * Check if two rational numbers are the same\n     *\n     * Ex: new Fraction(19.6).equals([98, 5]);\n     **/\n    \"compare\": function(a, b) {\n\n      parse(a, b);\n      var t = (this[\"s\"] * this[\"n\"] * P[\"d\"] - P[\"s\"] * P[\"n\"] * this[\"d\"]);\n      return (0 < t) - (t < 0);\n    },\n\n    \"simplify\": function(eps) {\n\n      // First naive implementation, needs improvement\n\n      if (isNaN(this['n']) || isNaN(this['d'])) {\n        return this;\n      }\n\n      var cont = this['abs']()['toContinued']();\n\n      eps = eps || 0.001;\n\n      function rec(a) {\n        if (a.length === 1)\n          return new Fraction(a[0]);\n        return rec(a.slice(1))['inverse']()['add'](a[0]);\n      }\n\n      for (var i = 0; i < cont.length; i++) {\n        var tmp = rec(cont.slice(0, i + 1));\n        if (tmp['sub'](this['abs']())['abs']().valueOf() < eps) {\n          return tmp['mul'](this['s']);\n        }\n      }\n      return this;\n    },\n\n    /**\n     * Check if two rational numbers are divisible\n     *\n     * Ex: new Fraction(19.6).divisible(1.5);\n     */\n    \"divisible\": function(a, b) {\n\n      parse(a, b);\n      return !(!(P[\"n\"] * this[\"d\"]) || ((this[\"n\"] * P[\"d\"]) % (P[\"n\"] * this[\"d\"])));\n    },\n\n    /**\n     * Returns a decimal representation of the fraction\n     *\n     * Ex: new Fraction(\"100.'91823'\").valueOf() => 100.91823918239183\n     **/\n    'valueOf': function() {\n\n      return this[\"s\"] * this[\"n\"] / this[\"d\"];\n    },\n\n    /**\n     * Returns a string-fraction representation of a Fraction object\n     *\n     * Ex: new Fraction(\"1.'3'\").toFraction() => \"4 1/3\"\n     **/\n    'toFraction': function(excludeWhole) {\n\n      var whole, str = \"\";\n      var n = this[\"n\"];\n      var d = this[\"d\"];\n      if (this[\"s\"] < 0) {\n        str += '-';\n      }\n\n      if (d === 1) {\n        str += n;\n      } else {\n\n        if (excludeWhole && (whole = Math.floor(n / d)) > 0) {\n          str += whole;\n          str += \" \";\n          n %= d;\n        }\n\n        str += n;\n        str += '/';\n        str += d;\n      }\n      return str;\n    },\n\n    /**\n     * Returns a latex representation of a Fraction object\n     *\n     * Ex: new Fraction(\"1.'3'\").toLatex() => \"\\frac{4}{3}\"\n     **/\n    'toLatex': function(excludeWhole) {\n\n      var whole, str = \"\";\n      var n = this[\"n\"];\n      var d = this[\"d\"];\n      if (this[\"s\"] < 0) {\n        str += '-';\n      }\n\n      if (d === 1) {\n        str += n;\n      } else {\n\n        if (excludeWhole && (whole = Math.floor(n / d)) > 0) {\n          str += whole;\n          n %= d;\n        }\n\n        str += \"\\\\frac{\";\n        str += n;\n        str += '}{';\n        str += d;\n        str += '}';\n      }\n      return str;\n    },\n\n    /**\n     * Returns an array of continued fraction elements\n     *\n     * Ex: new Fraction(\"7/8\").toContinued() => [0,1,7]\n     */\n    'toContinued': function() {\n\n      var t;\n      var a = this['n'];\n      var b = this['d'];\n      var res = [];\n\n      if (isNaN(this['n']) || isNaN(this['d'])) {\n        return res;\n      }\n\n      do {\n        res.push(Math.floor(a / b));\n        t = a % b;\n        a = b;\n        b = t;\n      } while (a !== 1);\n\n      return res;\n    },\n\n    /**\n     * Creates a string representation of a fraction with all digits\n     *\n     * Ex: new Fraction(\"100.'91823'\").toString() => \"100.(91823)\"\n     **/\n    'toString': function(dec) {\n\n      var g;\n      var N = this[\"n\"];\n      var D = this[\"d\"];\n\n      if (isNaN(N) || isNaN(D)) {\n        return \"NaN\";\n      }\n\n      if (!Fraction['REDUCE']) {\n        g = gcd(N, D);\n        N /= g;\n        D /= g;\n      }\n\n      dec = dec || 15; // 15 = decimal places when no repitation\n\n      var cycLen = cycleLen(N, D); // Cycle length\n      var cycOff = cycleStart(N, D, cycLen); // Cycle start\n\n      var str = this['s'] === -1 ? \"-\" : \"\";\n\n      str += N / D | 0;\n\n      N %= D;\n      N *= 10;\n\n      if (N)\n        str += \".\";\n\n      if (cycLen) {\n\n        for (var i = cycOff; i--; ) {\n          str += N / D | 0;\n          N %= D;\n          N *= 10;\n        }\n        str += \"(\";\n        for (var i = cycLen; i--; ) {\n          str += N / D | 0;\n          N %= D;\n          N *= 10;\n        }\n        str += \")\";\n      } else {\n        for (var i = dec; N && i--; ) {\n          str += N / D | 0;\n          N %= D;\n          N *= 10;\n        }\n      }\n      return str;\n    }\n  };\n\n  if (typeof define === \"function\" && define[\"amd\"]) {\n    define([], function() {\n      return Fraction;\n    });\n  } else if (typeof exports === \"object\") {\n    Object.defineProperty(exports, \"__esModule\", {'value': true});\n    Fraction['default'] = Fraction;\n    Fraction['Fraction'] = Fraction;\n    module['exports'] = Fraction;\n  } else {\n    root['Fraction'] = Fraction;\n  }\n\n})(this);\n"
    },
    {
      "id": 33,
      "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/type/fraction/Fraction.js",
      "name": "../node_modules/mathjs/lib/type/fraction/Fraction.js",
      "index": 26,
      "index2": 21,
      "size": 903,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "issuer": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/type/fraction/index.js",
      "issuerId": 34,
      "issuerName": "../node_modules/mathjs/lib/type/fraction/index.js",
      "issuerPath": [
        {
          "id": 49,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
          "name": "./main.ts",
          "profile": {
            "factory": 58,
            "building": 1843
          }
        },
        {
          "id": 18,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DisplayService.ts",
          "name": "./services/DisplayService.ts",
          "profile": {
            "factory": 83,
            "building": 1193,
            "dependencies": 637
          }
        },
        {
          "id": 8,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DrinkDisplayService.ts",
          "name": "./services/DrinkDisplayService.ts",
          "profile": {
            "factory": 735,
            "building": 523,
            "dependencies": 1
          }
        },
        {
          "id": 46,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/MathService.ts",
          "name": "./services/MathService.ts",
          "profile": {
            "factory": 394,
            "building": 17
          }
        },
        {
          "id": 34,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/type/fraction/index.js",
          "name": "../node_modules/mathjs/lib/type/fraction/index.js",
          "profile": {
            "factory": 54,
            "building": 107
          }
        }
      ],
      "profile": {
        "factory": 5,
        "building": 12
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 34,
          "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/type/fraction/index.js",
          "module": "../node_modules/mathjs/lib/type/fraction/index.js",
          "moduleName": "../node_modules/mathjs/lib/type/fraction/index.js",
          "type": "cjs require",
          "userRequest": "./Fraction",
          "loc": "4:0-21"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 5,
      "source": "'use strict';\n\nvar Fraction = require('fraction.js');\n/**\n * Attach type information\n */\n\n\nFraction.prototype.type = 'Fraction';\nFraction.prototype.isFraction = true;\n/**\n * Get a JSON representation of a Fraction containing type information\n * @returns {Object} Returns a JSON object structured as:\n *                   `{\"mathjs\": \"Fraction\", \"n\": 3, \"d\": 8}`\n */\n\nFraction.prototype.toJSON = function () {\n  return {\n    mathjs: 'Fraction',\n    n: this.s * this.n,\n    d: this.d\n  };\n};\n/**\n * Instantiate a Fraction from a JSON object\n * @param {Object} json  a JSON object structured as:\n *                       `{\"mathjs\": \"Fraction\", \"n\": 3, \"d\": 8}`\n * @return {BigNumber}\n */\n\n\nFraction.fromJSON = function (json) {\n  return new Fraction(json);\n};\n\nfunction factory(type, config, load, typed) {\n  return Fraction;\n}\n\nexports.name = 'Fraction';\nexports.path = 'type';\nexports.factory = factory;"
    },
    {
      "id": 34,
      "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/type/fraction/index.js",
      "name": "../node_modules/mathjs/lib/type/fraction/index.js",
      "index": 25,
      "index2": 24,
      "size": 121,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "issuer": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/MathService.ts",
      "issuerId": 46,
      "issuerName": "./services/MathService.ts",
      "issuerPath": [
        {
          "id": 49,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
          "name": "./main.ts",
          "profile": {
            "factory": 58,
            "building": 1843
          }
        },
        {
          "id": 18,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DisplayService.ts",
          "name": "./services/DisplayService.ts",
          "profile": {
            "factory": 83,
            "building": 1193,
            "dependencies": 637
          }
        },
        {
          "id": 8,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DrinkDisplayService.ts",
          "name": "./services/DrinkDisplayService.ts",
          "profile": {
            "factory": 735,
            "building": 523,
            "dependencies": 1
          }
        },
        {
          "id": 46,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/MathService.ts",
          "name": "./services/MathService.ts",
          "profile": {
            "factory": 394,
            "building": 17
          }
        }
      ],
      "profile": {
        "factory": 54,
        "building": 107
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 46,
          "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/MathService.ts",
          "module": "./services/MathService.ts",
          "moduleName": "./services/MathService.ts",
          "type": "cjs require",
          "userRequest": "mathjs/lib/type/fraction",
          "loc": "6:12-47"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 4,
      "source": "'use strict';\n\nmodule.exports = [// type\nrequire('./Fraction'), // construction function\nrequire('./function/fraction')];"
    },
    {
      "id": 35,
      "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/core/function/config.js",
      "name": "../node_modules/mathjs/lib/core/function/config.js",
      "index": 24,
      "index2": 17,
      "size": 4287,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "issuer": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/core/core.js",
      "issuerId": 44,
      "issuerName": "../node_modules/mathjs/lib/core/core.js",
      "issuerPath": [
        {
          "id": 49,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
          "name": "./main.ts",
          "profile": {
            "factory": 58,
            "building": 1843
          }
        },
        {
          "id": 18,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DisplayService.ts",
          "name": "./services/DisplayService.ts",
          "profile": {
            "factory": 83,
            "building": 1193,
            "dependencies": 637
          }
        },
        {
          "id": 8,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DrinkDisplayService.ts",
          "name": "./services/DrinkDisplayService.ts",
          "profile": {
            "factory": 735,
            "building": 523,
            "dependencies": 1
          }
        },
        {
          "id": 46,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/MathService.ts",
          "name": "./services/MathService.ts",
          "profile": {
            "factory": 394,
            "building": 17
          }
        },
        {
          "id": 45,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/core.js",
          "name": "../node_modules/mathjs/core.js",
          "profile": {
            "factory": 54,
            "building": 107
          }
        },
        {
          "id": 44,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/core/core.js",
          "name": "../node_modules/mathjs/lib/core/core.js",
          "profile": {
            "factory": 111,
            "building": 7
          }
        }
      ],
      "profile": {
        "factory": 15,
        "building": 26,
        "dependencies": 19
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 44,
          "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/core/core.js",
          "module": "../node_modules/mathjs/lib/core/core.js",
          "moduleName": "../node_modules/mathjs/lib/core/core.js",
          "type": "cjs require",
          "userRequest": "./function/config",
          "loc": "13:20-48"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 6,
      "source": "'use strict';\n\nvar object = require('../../utils/object');\n\nfunction factory(type, config, load, typed, math) {\n  var MATRIX = ['Matrix', 'Array']; // valid values for option matrix\n\n  var NUMBER = ['number', 'BigNumber', 'Fraction']; // valid values for option number\n\n  /**\n   * Set configuration options for math.js, and get current options.\n   * Will emit a 'config' event, with arguments (curr, prev, changes).\n   *\n   * Syntax:\n   *\n   *     math.config(config: Object): Object\n   *\n   * Examples:\n   *\n   *     math.config().number                // outputs 'number'\n   *     math.eval('0.4')                    // outputs number 0.4\n   *     math.config({number: 'Fraction'})\n   *     math.eval('0.4')                    // outputs Fraction 2/5\n   *\n   * @param {Object} [options] Available options:\n   *                            {number} epsilon\n   *                              Minimum relative difference between two\n   *                              compared values, used by all comparison functions.\n   *                            {string} matrix\n   *                              A string 'Matrix' (default) or 'Array'.\n   *                            {string} number\n   *                              A string 'number' (default), 'BigNumber', or 'Fraction'\n   *                            {number} precision\n   *                              The number of significant digits for BigNumbers.\n   *                              Not applicable for Numbers.\n   *                            {string} parenthesis\n   *                              How to display parentheses in LaTeX and string\n   *                              output.\n   *                            {string} randomSeed\n   *                              Random seed for seeded pseudo random number generator.\n   *                              Set to null to randomly seed.\n   * @return {Object} Returns the current configuration\n   */\n\n  function _config(options) {\n    if (options) {\n      var prev = object.map(config, object.clone); // validate some of the options\n\n      validateOption(options, 'matrix', MATRIX);\n      validateOption(options, 'number', NUMBER); // merge options\n\n      object.deepExtend(config, options);\n      var curr = object.map(config, object.clone);\n      var changes = object.map(options, object.clone); // emit 'config' event\n\n      math.emit('config', curr, prev, changes);\n      return curr;\n    } else {\n      return object.map(config, object.clone);\n    }\n  } // attach the valid options to the function so they can be extended\n\n\n  _config.MATRIX = MATRIX;\n  _config.NUMBER = NUMBER;\n  return _config;\n}\n/**\n * Test whether an Array contains a specific item.\n * @param {Array.<string>} array\n * @param {string} item\n * @return {boolean}\n */\n\n\nfunction contains(array, item) {\n  return array.indexOf(item) !== -1;\n}\n/**\n * Find a string in an array. Case insensitive search\n * @param {Array.<string>} array\n * @param {string} item\n * @return {number} Returns the index when found. Returns -1 when not found\n */\n\n\nfunction findIndex(array, item) {\n  return array.map(function (i) {\n    return i.toLowerCase();\n  }).indexOf(item.toLowerCase());\n}\n/**\n * Validate an option\n * @param {Object} options         Object with options\n * @param {string} name            Name of the option to validate\n * @param {Array.<string>} values  Array with valid values for this option\n */\n\n\nfunction validateOption(options, name, values) {\n  if (options[name] !== undefined && !contains(values, options[name])) {\n    var index = findIndex(values, options[name]);\n\n    if (index !== -1) {\n      // right value, wrong casing\n      // TODO: lower case values are deprecated since v3, remove this warning some day.\n      console.warn('Warning: Wrong casing for configuration option \"' + name + '\", should be \"' + values[index] + '\" instead of \"' + options[name] + '\".');\n      options[name] = values[index]; // change the option to the right casing\n    } else {\n      // unknown value\n      console.warn('Warning: Unknown value \"' + options[name] + '\" for configuration option \"' + name + '\". Available options: ' + values.map(JSON.stringify).join(', ') + '.');\n    }\n  }\n}\n\nexports.name = 'config';\nexports.math = true; // request the math namespace as fifth argument\n\nexports.factory = factory;"
    },
    {
      "id": 36,
      "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/error/ArgumentsError.js",
      "name": "../node_modules/mathjs/lib/error/ArgumentsError.js",
      "index": 23,
      "index2": 15,
      "size": 1055,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "issuer": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/core/function/import.js",
      "issuerId": 37,
      "issuerName": "../node_modules/mathjs/lib/core/function/import.js",
      "issuerPath": [
        {
          "id": 49,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
          "name": "./main.ts",
          "profile": {
            "factory": 58,
            "building": 1843
          }
        },
        {
          "id": 18,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DisplayService.ts",
          "name": "./services/DisplayService.ts",
          "profile": {
            "factory": 83,
            "building": 1193,
            "dependencies": 637
          }
        },
        {
          "id": 8,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DrinkDisplayService.ts",
          "name": "./services/DrinkDisplayService.ts",
          "profile": {
            "factory": 735,
            "building": 523,
            "dependencies": 1
          }
        },
        {
          "id": 46,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/MathService.ts",
          "name": "./services/MathService.ts",
          "profile": {
            "factory": 394,
            "building": 17
          }
        },
        {
          "id": 45,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/core.js",
          "name": "../node_modules/mathjs/core.js",
          "profile": {
            "factory": 54,
            "building": 107
          }
        },
        {
          "id": 44,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/core/core.js",
          "name": "../node_modules/mathjs/lib/core/core.js",
          "profile": {
            "factory": 111,
            "building": 7
          }
        },
        {
          "id": 37,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/core/function/import.js",
          "name": "../node_modules/mathjs/lib/core/function/import.js",
          "profile": {
            "factory": 15,
            "building": 26,
            "dependencies": 19
          }
        }
      ],
      "profile": {
        "factory": 15,
        "building": 2
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 37,
          "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/core/function/import.js",
          "module": "../node_modules/mathjs/lib/core/function/import.js",
          "moduleName": "../node_modules/mathjs/lib/core/function/import.js",
          "type": "cjs require",
          "userRequest": "../../error/ArgumentsError",
          "loc": "11:21-58"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 7,
      "source": "'use strict';\n/**\n * Create a syntax error with the message:\n *     'Wrong number of arguments in function <fn> (<count> provided, <min>-<max> expected)'\n * @param {string} fn     Function name\n * @param {number} count  Actual argument count\n * @param {number} min    Minimum required argument count\n * @param {number} [max]  Maximum required argument count\n * @extends Error\n */\n\nfunction ArgumentsError(fn, count, min, max) {\n  if (!(this instanceof ArgumentsError)) {\n    throw new SyntaxError('Constructor must be called with the new operator');\n  }\n\n  this.fn = fn;\n  this.count = count;\n  this.min = min;\n  this.max = max;\n  this.message = 'Wrong number of arguments in function ' + fn + ' (' + count + ' provided, ' + min + (max !== undefined && max !== null ? '-' + max : '') + ' expected)';\n  this.stack = new Error().stack;\n}\n\nArgumentsError.prototype = new Error();\nArgumentsError.prototype.constructor = Error;\nArgumentsError.prototype.name = 'ArgumentsError';\nArgumentsError.prototype.isArgumentsError = true;\nmodule.exports = ArgumentsError;"
    },
    {
      "id": 37,
      "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/core/function/import.js",
      "name": "../node_modules/mathjs/lib/core/function/import.js",
      "index": 22,
      "index2": 16,
      "size": 9791,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "issuer": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/core/core.js",
      "issuerId": 44,
      "issuerName": "../node_modules/mathjs/lib/core/core.js",
      "issuerPath": [
        {
          "id": 49,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
          "name": "./main.ts",
          "profile": {
            "factory": 58,
            "building": 1843
          }
        },
        {
          "id": 18,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DisplayService.ts",
          "name": "./services/DisplayService.ts",
          "profile": {
            "factory": 83,
            "building": 1193,
            "dependencies": 637
          }
        },
        {
          "id": 8,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DrinkDisplayService.ts",
          "name": "./services/DrinkDisplayService.ts",
          "profile": {
            "factory": 735,
            "building": 523,
            "dependencies": 1
          }
        },
        {
          "id": 46,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/MathService.ts",
          "name": "./services/MathService.ts",
          "profile": {
            "factory": 394,
            "building": 17
          }
        },
        {
          "id": 45,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/core.js",
          "name": "../node_modules/mathjs/core.js",
          "profile": {
            "factory": 54,
            "building": 107
          }
        },
        {
          "id": 44,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/core/core.js",
          "name": "../node_modules/mathjs/lib/core/core.js",
          "profile": {
            "factory": 111,
            "building": 7
          }
        }
      ],
      "profile": {
        "factory": 15,
        "building": 26,
        "dependencies": 19
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 44,
          "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/core/core.js",
          "module": "../node_modules/mathjs/lib/core/core.js",
          "moduleName": "../node_modules/mathjs/lib/core/core.js",
          "type": "cjs require",
          "userRequest": "./function/import",
          "loc": "11:20-48"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 6,
      "source": "'use strict';\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar lazy = require('../../utils/object').lazy;\n\nvar isFactory = require('../../utils/object').isFactory;\n\nvar traverse = require('../../utils/object').traverse;\n\nvar ArgumentsError = require('../../error/ArgumentsError');\n\nfunction factory(type, config, load, typed, math) {\n  /**\n   * Import functions from an object or a module\n   *\n   * Syntax:\n   *\n   *    math.import(object)\n   *    math.import(object, options)\n   *\n   * Where:\n   *\n   * - `object: Object`\n   *   An object with functions to be imported.\n   * - `options: Object` An object with import options. Available options:\n   *   - `override: boolean`\n   *     If true, existing functions will be overwritten. False by default.\n   *   - `silent: boolean`\n   *     If true, the function will not throw errors on duplicates or invalid\n   *     types. False by default.\n   *   - `wrap: boolean`\n   *     If true, the functions will be wrapped in a wrapper function\n   *     which converts data types like Matrix to primitive data types like Array.\n   *     The wrapper is needed when extending math.js with libraries which do not\n   *     support these data type. False by default.\n   *\n   * Examples:\n   *\n   *    // define new functions and variables\n   *    math.import({\n   *      myvalue: 42,\n   *      hello: function (name) {\n   *        return 'hello, ' + name + '!'\n   *      }\n   *    })\n   *\n   *    // use the imported function and variable\n   *    math.myvalue * 2               // 84\n   *    math.hello('user')             // 'hello, user!'\n   *\n   *    // import the npm module 'numbers'\n   *    // (must be installed first with `npm install numbers`)\n   *    math.import(require('numbers'), {wrap: true})\n   *\n   *    math.fibonacci(7) // returns 13\n   *\n   * @param {Object | Array} object   Object with functions to be imported.\n   * @param {Object} [options]        Import options.\n   */\n  function mathImport(object, options) {\n    var num = arguments.length;\n\n    if (num !== 1 && num !== 2) {\n      throw new ArgumentsError('import', num, 1, 2);\n    }\n\n    if (!options) {\n      options = {};\n    } // TODO: allow a typed-function with name too\n\n\n    if (isFactory(object)) {\n      _importFactory(object, options);\n    } else if (Array.isArray(object)) {\n      object.forEach(function (entry) {\n        mathImport(entry, options);\n      });\n    } else if (_typeof(object) === 'object') {\n      // a map with functions\n      for (var name in object) {\n        if (object.hasOwnProperty(name)) {\n          var value = object[name];\n\n          if (isSupportedType(value)) {\n            _import(name, value, options);\n          } else if (isFactory(object)) {\n            _importFactory(object, options);\n          } else {\n            mathImport(value, options);\n          }\n        }\n      }\n    } else {\n      if (!options.silent) {\n        throw new TypeError('Factory, Object, or Array expected');\n      }\n    }\n  }\n  /**\n   * Add a property to the math namespace and create a chain proxy for it.\n   * @param {string} name\n   * @param {*} value\n   * @param {Object} options  See import for a description of the options\n   * @private\n   */\n\n\n  function _import(name, value, options) {\n    // TODO: refactor this function, it's to complicated and contains duplicate code\n    if (options.wrap && typeof value === 'function') {\n      // create a wrapper around the function\n      value = _wrap(value);\n    }\n\n    if (isTypedFunction(math[name]) && isTypedFunction(value)) {\n      if (options.override) {\n        // give the typed function the right name\n        value = typed(name, value.signatures);\n      } else {\n        // merge the existing and typed function\n        value = typed(math[name], value);\n      }\n\n      math[name] = value;\n\n      _importTransform(name, value);\n\n      math.emit('import', name, function resolver() {\n        return value;\n      });\n      return;\n    }\n\n    if (math[name] === undefined || options.override) {\n      math[name] = value;\n\n      _importTransform(name, value);\n\n      math.emit('import', name, function resolver() {\n        return value;\n      });\n      return;\n    }\n\n    if (!options.silent) {\n      throw new Error('Cannot import \"' + name + '\": already exists');\n    }\n  }\n\n  function _importTransform(name, value) {\n    if (value && typeof value.transform === 'function') {\n      math.expression.transform[name] = value.transform;\n\n      if (allowedInExpressions(name)) {\n        math.expression.mathWithTransform[name] = value.transform;\n      }\n    } else {\n      // remove existing transform\n      delete math.expression.transform[name];\n\n      if (allowedInExpressions(name)) {\n        math.expression.mathWithTransform[name] = value;\n      }\n    }\n  }\n\n  function _deleteTransform(name) {\n    delete math.expression.transform[name];\n\n    if (allowedInExpressions(name)) {\n      math.expression.mathWithTransform[name] = math[name];\n    } else {\n      delete math.expression.mathWithTransform[name];\n    }\n  }\n  /**\n   * Create a wrapper a round an function which converts the arguments\n   * to their primitive values (like convert a Matrix to Array)\n   * @param {Function} fn\n   * @return {Function} Returns the wrapped function\n   * @private\n   */\n\n\n  function _wrap(fn) {\n    var wrapper = function wrapper() {\n      var args = [];\n\n      for (var i = 0, len = arguments.length; i < len; i++) {\n        var arg = arguments[i];\n        args[i] = arg && arg.valueOf();\n      }\n\n      return fn.apply(math, args);\n    };\n\n    if (fn.transform) {\n      wrapper.transform = fn.transform;\n    }\n\n    return wrapper;\n  }\n  /**\n   * Import an instance of a factory into math.js\n   * @param {{factory: Function, name: string, path: string, math: boolean}} factory\n   * @param {Object} options  See import for a description of the options\n   * @private\n   */\n\n\n  function _importFactory(factory, options) {\n    if (typeof factory.name === 'string') {\n      var name = factory.name;\n      var existingTransform = name in math.expression.transform;\n      var namespace = factory.path ? traverse(math, factory.path) : math;\n      var existing = namespace.hasOwnProperty(name) ? namespace[name] : undefined;\n\n      var resolver = function resolver() {\n        var instance = load(factory);\n\n        if (instance && typeof instance.transform === 'function') {\n          throw new Error('Transforms cannot be attached to factory functions. ' + 'Please create a separate function for it with exports.path=\"expression.transform\"');\n        }\n\n        if (isTypedFunction(existing) && isTypedFunction(instance)) {\n          if (options.override) {// replace the existing typed function (nothing to do)\n          } else {\n            // merge the existing and new typed function\n            instance = typed(existing, instance);\n          }\n\n          return instance;\n        }\n\n        if (existing === undefined || options.override) {\n          return instance;\n        }\n\n        if (!options.silent) {\n          throw new Error('Cannot import \"' + name + '\": already exists');\n        }\n      };\n\n      if (factory.lazy !== false) {\n        lazy(namespace, name, resolver);\n\n        if (existingTransform) {\n          _deleteTransform(name);\n        } else {\n          if (factory.path === 'expression.transform' || factoryAllowedInExpressions(factory)) {\n            lazy(math.expression.mathWithTransform, name, resolver);\n          }\n        }\n      } else {\n        namespace[name] = resolver();\n\n        if (existingTransform) {\n          _deleteTransform(name);\n        } else {\n          if (factory.path === 'expression.transform' || factoryAllowedInExpressions(factory)) {\n            math.expression.mathWithTransform[name] = resolver();\n          }\n        }\n      }\n\n      math.emit('import', name, resolver, factory.path);\n    } else {\n      // unnamed factory.\n      // no lazy loading\n      load(factory);\n    }\n  }\n  /**\n   * Check whether given object is a type which can be imported\n   * @param {Function | number | string | boolean | null | Unit | Complex} object\n   * @return {boolean}\n   * @private\n   */\n\n\n  function isSupportedType(object) {\n    return typeof object === 'function' || typeof object === 'number' || typeof object === 'string' || typeof object === 'boolean' || object === null || object && type.isUnit(object) || object && type.isComplex(object) || object && type.isBigNumber(object) || object && type.isFraction(object) || object && type.isMatrix(object) || object && Array.isArray(object);\n  }\n  /**\n   * Test whether a given thing is a typed-function\n   * @param {*} fn\n   * @return {boolean} Returns true when `fn` is a typed-function\n   */\n\n\n  function isTypedFunction(fn) {\n    return typeof fn === 'function' && _typeof(fn.signatures) === 'object';\n  }\n\n  function allowedInExpressions(name) {\n    return !unsafe.hasOwnProperty(name);\n  }\n\n  function factoryAllowedInExpressions(factory) {\n    return factory.path === undefined && !unsafe.hasOwnProperty(factory.name);\n  } // namespaces and functions not available in the parser for safety reasons\n\n\n  var unsafe = {\n    'expression': true,\n    'type': true,\n    'docs': true,\n    'error': true,\n    'json': true,\n    'chain': true // chain method not supported. Note that there is a unit chain too.\n\n  };\n  return mathImport;\n}\n\nexports.math = true; // request access to the math namespace as 5th argument of the factory function\n\nexports.name = 'import';\nexports.factory = factory;\nexports.lazy = true;"
    },
    {
      "id": 38,
      "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tiny-emitter/index.js",
      "name": "../node_modules/tiny-emitter/index.js",
      "index": 21,
      "index2": 13,
      "size": 1565,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "issuer": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/utils/emitter.js",
      "issuerId": 39,
      "issuerName": "../node_modules/mathjs/lib/utils/emitter.js",
      "issuerPath": [
        {
          "id": 49,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
          "name": "./main.ts",
          "profile": {
            "factory": 58,
            "building": 1843
          }
        },
        {
          "id": 18,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DisplayService.ts",
          "name": "./services/DisplayService.ts",
          "profile": {
            "factory": 83,
            "building": 1193,
            "dependencies": 637
          }
        },
        {
          "id": 8,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DrinkDisplayService.ts",
          "name": "./services/DrinkDisplayService.ts",
          "profile": {
            "factory": 735,
            "building": 523,
            "dependencies": 1
          }
        },
        {
          "id": 46,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/MathService.ts",
          "name": "./services/MathService.ts",
          "profile": {
            "factory": 394,
            "building": 17
          }
        },
        {
          "id": 45,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/core.js",
          "name": "../node_modules/mathjs/core.js",
          "profile": {
            "factory": 54,
            "building": 107
          }
        },
        {
          "id": 44,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/core/core.js",
          "name": "../node_modules/mathjs/lib/core/core.js",
          "profile": {
            "factory": 111,
            "building": 7
          }
        },
        {
          "id": 39,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/utils/emitter.js",
          "name": "../node_modules/mathjs/lib/utils/emitter.js",
          "profile": {
            "factory": 15,
            "building": 26,
            "dependencies": 19
          }
        }
      ],
      "profile": {
        "factory": 45,
        "building": 2
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 39,
          "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/utils/emitter.js",
          "module": "../node_modules/mathjs/lib/utils/emitter.js",
          "moduleName": "../node_modules/mathjs/lib/utils/emitter.js",
          "type": "cjs require",
          "userRequest": "tiny-emitter",
          "loc": "3:14-37"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 7,
      "source": "function E () {\n  // Keep this empty so it's easier to inherit from\n  // (via https://github.com/lipsmack from https://github.com/scottcorgan/tiny-emitter/issues/3)\n}\n\nE.prototype = {\n  on: function (name, callback, ctx) {\n    var e = this.e || (this.e = {});\n\n    (e[name] || (e[name] = [])).push({\n      fn: callback,\n      ctx: ctx\n    });\n\n    return this;\n  },\n\n  once: function (name, callback, ctx) {\n    var self = this;\n    function listener () {\n      self.off(name, listener);\n      callback.apply(ctx, arguments);\n    };\n\n    listener._ = callback\n    return this.on(name, listener, ctx);\n  },\n\n  emit: function (name) {\n    var data = [].slice.call(arguments, 1);\n    var evtArr = ((this.e || (this.e = {}))[name] || []).slice();\n    var i = 0;\n    var len = evtArr.length;\n\n    for (i; i < len; i++) {\n      evtArr[i].fn.apply(evtArr[i].ctx, data);\n    }\n\n    return this;\n  },\n\n  off: function (name, callback) {\n    var e = this.e || (this.e = {});\n    var evts = e[name];\n    var liveEvents = [];\n\n    if (evts && callback) {\n      for (var i = 0, len = evts.length; i < len; i++) {\n        if (evts[i].fn !== callback && evts[i].fn._ !== callback)\n          liveEvents.push(evts[i]);\n      }\n    }\n\n    // Remove event from queue to prevent memory leak\n    // Suggested by https://github.com/lazd\n    // Ref: https://github.com/scottcorgan/tiny-emitter/commit/c6ebfaa9bc973b33d110a84a307742b7cf94c953#commitcomment-5024910\n\n    (liveEvents.length)\n      ? e[name] = liveEvents\n      : delete e[name];\n\n    return this;\n  }\n};\n\nmodule.exports = E;\n"
    },
    {
      "id": 39,
      "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/utils/emitter.js",
      "name": "../node_modules/mathjs/lib/utils/emitter.js",
      "index": 20,
      "index2": 14,
      "size": 522,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "issuer": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/core/core.js",
      "issuerId": 44,
      "issuerName": "../node_modules/mathjs/lib/core/core.js",
      "issuerPath": [
        {
          "id": 49,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
          "name": "./main.ts",
          "profile": {
            "factory": 58,
            "building": 1843
          }
        },
        {
          "id": 18,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DisplayService.ts",
          "name": "./services/DisplayService.ts",
          "profile": {
            "factory": 83,
            "building": 1193,
            "dependencies": 637
          }
        },
        {
          "id": 8,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DrinkDisplayService.ts",
          "name": "./services/DrinkDisplayService.ts",
          "profile": {
            "factory": 735,
            "building": 523,
            "dependencies": 1
          }
        },
        {
          "id": 46,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/MathService.ts",
          "name": "./services/MathService.ts",
          "profile": {
            "factory": 394,
            "building": 17
          }
        },
        {
          "id": 45,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/core.js",
          "name": "../node_modules/mathjs/core.js",
          "profile": {
            "factory": 54,
            "building": 107
          }
        },
        {
          "id": 44,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/core/core.js",
          "name": "../node_modules/mathjs/lib/core/core.js",
          "profile": {
            "factory": 111,
            "building": 7
          }
        }
      ],
      "profile": {
        "factory": 15,
        "building": 26,
        "dependencies": 19
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 44,
          "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/core/core.js",
          "module": "../node_modules/mathjs/lib/core/core.js",
          "moduleName": "../node_modules/mathjs/lib/core/core.js",
          "type": "cjs require",
          "userRequest": "./../utils/emitter",
          "loc": "9:14-43"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 6,
      "source": "'use strict';\n\nvar Emitter = require('tiny-emitter');\n/**\n * Extend given object with emitter functions `on`, `off`, `once`, `emit`\n * @param {Object} obj\n * @return {Object} obj\n */\n\n\nexports.mixin = function (obj) {\n  // create event emitter\n  var emitter = new Emitter(); // bind methods to obj (we don't want to expose the emitter.e Array...)\n\n  obj.on = emitter.on.bind(emitter);\n  obj.off = emitter.off.bind(emitter);\n  obj.once = emitter.once.bind(emitter);\n  obj.emit = emitter.emit.bind(emitter);\n  return obj;\n};"
    },
    {
      "id": 40,
      "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/utils/collection/isMatrix.js",
      "name": "../node_modules/mathjs/lib/utils/collection/isMatrix.js",
      "index": 19,
      "index2": 11,
      "size": 291,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "issuer": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/core/typed.js",
      "issuerId": 42,
      "issuerName": "../node_modules/mathjs/lib/core/typed.js",
      "issuerPath": [
        {
          "id": 49,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
          "name": "./main.ts",
          "profile": {
            "factory": 58,
            "building": 1843
          }
        },
        {
          "id": 18,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DisplayService.ts",
          "name": "./services/DisplayService.ts",
          "profile": {
            "factory": 83,
            "building": 1193,
            "dependencies": 637
          }
        },
        {
          "id": 8,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DrinkDisplayService.ts",
          "name": "./services/DrinkDisplayService.ts",
          "profile": {
            "factory": 735,
            "building": 523,
            "dependencies": 1
          }
        },
        {
          "id": 46,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/MathService.ts",
          "name": "./services/MathService.ts",
          "profile": {
            "factory": 394,
            "building": 17
          }
        },
        {
          "id": 45,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/core.js",
          "name": "../node_modules/mathjs/core.js",
          "profile": {
            "factory": 54,
            "building": 107
          }
        },
        {
          "id": 44,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/core/core.js",
          "name": "../node_modules/mathjs/lib/core/core.js",
          "profile": {
            "factory": 111,
            "building": 7
          }
        },
        {
          "id": 42,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/core/typed.js",
          "name": "../node_modules/mathjs/lib/core/typed.js",
          "profile": {
            "factory": 15,
            "building": 26,
            "dependencies": 19
          }
        }
      ],
      "profile": {
        "factory": 37,
        "building": 13
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 42,
          "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/core/typed.js",
          "module": "../node_modules/mathjs/lib/core/typed.js",
          "moduleName": "../node_modules/mathjs/lib/core/typed.js",
          "type": "cjs require",
          "userRequest": "./../utils/collection/isMatrix",
          "loc": "11:15-56"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 7,
      "source": "'use strict';\n/**\n * Test whether a value is a Matrix\n * @param {*} x\n * @returns {boolean} returns true with input is a Matrix\n *                    (like a DenseMatrix or SparseMatrix)\n */\n\nmodule.exports = function isMatrix(x) {\n  return x && x.constructor.prototype.isMatrix || false;\n};"
    },
    {
      "id": 41,
      "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/typed-function/typed-function.js",
      "name": "../node_modules/typed-function/typed-function.js",
      "index": 17,
      "index2": 9,
      "size": 43392,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "issuer": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/core/typed.js",
      "issuerId": 42,
      "issuerName": "../node_modules/mathjs/lib/core/typed.js",
      "issuerPath": [
        {
          "id": 49,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
          "name": "./main.ts",
          "profile": {
            "factory": 58,
            "building": 1843
          }
        },
        {
          "id": 18,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DisplayService.ts",
          "name": "./services/DisplayService.ts",
          "profile": {
            "factory": 83,
            "building": 1193,
            "dependencies": 637
          }
        },
        {
          "id": 8,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DrinkDisplayService.ts",
          "name": "./services/DrinkDisplayService.ts",
          "profile": {
            "factory": 735,
            "building": 523,
            "dependencies": 1
          }
        },
        {
          "id": 46,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/MathService.ts",
          "name": "./services/MathService.ts",
          "profile": {
            "factory": 394,
            "building": 17
          }
        },
        {
          "id": 45,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/core.js",
          "name": "../node_modules/mathjs/core.js",
          "profile": {
            "factory": 54,
            "building": 107
          }
        },
        {
          "id": 44,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/core/core.js",
          "name": "../node_modules/mathjs/lib/core/core.js",
          "profile": {
            "factory": 111,
            "building": 7
          }
        },
        {
          "id": 42,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/core/typed.js",
          "name": "../node_modules/mathjs/lib/core/typed.js",
          "profile": {
            "factory": 15,
            "building": 26,
            "dependencies": 19
          }
        }
      ],
      "profile": {
        "factory": 37,
        "building": 13
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 42,
          "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/core/typed.js",
          "module": "../node_modules/mathjs/lib/core/typed.js",
          "moduleName": "../node_modules/mathjs/lib/core/typed.js",
          "type": "cjs require",
          "userRequest": "typed-function",
          "loc": "5:20-45"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 7,
      "source": "/**\n * typed-function\n *\n * Type checking for JavaScript functions\n *\n * https://github.com/josdejong/typed-function\n */\n'use strict';\n\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define([], factory);\n  } else if (typeof exports === 'object') {\n    // OldNode. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like OldNode.\n    module.exports = factory();\n  } else {\n    // Browser globals (root is window)\n    root.typed = factory();\n  }\n}(this, function () {\n\n  function ok () {\n    return true;\n  }\n\n  function notOk () {\n    return false;\n  }\n\n  function undef () {\n    return undefined;\n  }\n\n  /**\n   * @typedef {{\n   *   params: Param[],\n   *   fn: function\n   * }} Signature\n   *\n   * @typedef {{\n   *   types: Type[],\n   *   restParam: boolean\n   * }} Param\n   *\n   * @typedef {{\n   *   name: string,\n   *   typeIndex: number,\n   *   test: function,\n   *   conversion?: ConversionDef,\n   *   conversionIndex: number,\n   * }} Type\n   *\n   * @typedef {{\n   *   from: string,\n   *   to: string,\n   *   convert: function (*) : *\n   * }} ConversionDef\n   *\n   * @typedef {{\n   *   name: string,\n   *   test: function(*) : boolean\n   * }} TypeDef\n   */\n\n  // create a new instance of typed-function\n  function create () {\n    // data type tests\n    var _types = [\n      { name: 'number',    test: function (x) { return typeof x === 'number' } },\n      { name: 'string',    test: function (x) { return typeof x === 'string' } },\n      { name: 'boolean',   test: function (x) { return typeof x === 'boolean' } },\n      { name: 'Function',  test: function (x) { return typeof x === 'function'} },\n      { name: 'Array',     test: Array.isArray },\n      { name: 'Date',      test: function (x) { return x instanceof Date } },\n      { name: 'RegExp',    test: function (x) { return x instanceof RegExp } },\n      { name: 'Object',    test: function (x) {\n        return typeof x === 'object' && x.constructor === Object\n      }},\n      { name: 'null',      test: function (x) { return x === null } },\n      { name: 'undefined', test: function (x) { return x === undefined } }\n    ];\n\n    var anyType = {\n      name: 'any',\n      test: ok\n    }\n\n    // types which need to be ignored\n    var _ignore = [];\n\n    // type conversions\n    var _conversions = [];\n\n    // This is a temporary object, will be replaced with a typed function at the end\n    var typed = {\n      types: _types,\n      conversions: _conversions,\n      ignore: _ignore\n    };\n\n    /**\n     * Find the test function for a type\n     * @param {String} typeName\n     * @return {TypeDef} Returns the type definition when found,\n     *                    Throws a TypeError otherwise\n     */\n    function findTypeByName (typeName) {\n      var entry = findInArray(typed.types, function (entry) {\n        return entry.name === typeName;\n      });\n\n      if (entry) {\n        return entry;\n      }\n\n      if (typeName === 'any') { // special baked-in case 'any'\n        return anyType;\n      }\n\n      var hint = findInArray(typed.types, function (entry) {\n        return entry.name.toLowerCase() === typeName.toLowerCase();\n      });\n\n      throw new TypeError('Unknown type \"' + typeName + '\"' +\n          (hint ? ('. Did you mean \"' + hint.name + '\"?') : ''));\n    }\n\n    /**\n     * Find the index of a type definition. Handles special case 'any'\n     * @param {TypeDef} type\n     * @return {number}\n     */\n    function findTypeIndex(type) {\n      if (type === anyType) {\n        return 999;\n      }\n\n      return typed.types.indexOf(type);\n    }\n\n    /**\n     * Find a type that matches a value.\n     * @param {*} value\n     * @return {string} Returns the name of the first type for which\n     *                  the type test matches the value.\n     */\n    function findTypeName(value) {\n      var entry = findInArray(typed.types, function (entry) {\n        return entry.test(value);\n      });\n\n      if (entry) {\n        return entry.name;\n      }\n\n      throw new TypeError('Value has unknown type. Value: ' + value);\n    }\n\n    /**\n     * Find a specific signature from a (composed) typed function, for example:\n     *\n     *   typed.find(fn, ['number', 'string'])\n     *   typed.find(fn, 'number, string')\n     *\n     * Function find only only works for exact matches.\n     *\n     * @param {Function} fn                   A typed-function\n     * @param {string | string[]} signature   Signature to be found, can be\n     *                                        an array or a comma separated string.\n     * @return {Function}                     Returns the matching signature, or\n     *                                        throws an error when no signature\n     *                                        is found.\n     */\n    function find (fn, signature) {\n      if (!fn.signatures) {\n        throw new TypeError('Function is no typed-function');\n      }\n\n      // normalize input\n      var arr;\n      if (typeof signature === 'string') {\n        arr = signature.split(',');\n        for (var i = 0; i < arr.length; i++) {\n          arr[i] = arr[i].trim();\n        }\n      }\n      else if (Array.isArray(signature)) {\n        arr = signature;\n      }\n      else {\n        throw new TypeError('String array or a comma separated string expected');\n      }\n\n      var str = arr.join(',');\n\n      // find an exact match\n      var match = fn.signatures[str];\n      if (match) {\n        return match;\n      }\n\n      // TODO: extend find to match non-exact signatures\n\n      throw new TypeError('Signature not found (signature: ' + (fn.name || 'unnamed') + '(' + arr.join(', ') + '))');\n    }\n\n    /**\n     * Convert a given value to another data type.\n     * @param {*} value\n     * @param {string} type\n     */\n    function convert (value, type) {\n      var from = findTypeName(value);\n\n      // check conversion is needed\n      if (type === from) {\n        return value;\n      }\n\n      for (var i = 0; i < typed.conversions.length; i++) {\n        var conversion = typed.conversions[i];\n        if (conversion.from === from && conversion.to === type) {\n          return conversion.convert(value);\n        }\n      }\n\n      throw new Error('Cannot convert from ' + from + ' to ' + type);\n    }\n    \n    /**\n     * Stringify parameters in a normalized way\n     * @param {Param[]} params\n     * @return {string}\n     */\n    function stringifyParams (params) {\n      return params\n          .map(function (param) {\n            var typeNames = param.types.map(getTypeName);\n\n            return (param.restParam ? '...' : '') + typeNames.join('|');\n          })\n          .join(',');\n    }\n\n    /**\n     * Parse a parameter, like \"...number | boolean\"\n     * @param {string} param\n     * @param {ConversionDef[]} conversions\n     * @return {Param} param\n     */\n    function parseParam (param, conversions) {\n      var restParam = param.indexOf('...') === 0;\n      var types = (!restParam)\n          ? param\n          : (param.length > 3)\n              ? param.slice(3)\n              : 'any';\n\n      var typeNames = types.split('|').map(trim)\n          .filter(notEmpty)\n          .filter(notIgnore);\n\n      var matchingConversions = filterConversions(conversions, typeNames);\n\n      var exactTypes = typeNames.map(function (typeName) {\n        var type = findTypeByName(typeName);\n\n        return {\n          name: typeName,\n          typeIndex: findTypeIndex(type),\n          test: type.test,\n          conversion: null,\n          conversionIndex: -1\n        };\n      });\n\n      var convertibleTypes = matchingConversions.map(function (conversion) {\n        var type = findTypeByName(conversion.from);\n\n        return {\n          name: conversion.from,\n          typeIndex: findTypeIndex(type),\n          test: type.test,\n          conversion: conversion,\n          conversionIndex: conversions.indexOf(conversion)\n        };\n      });\n\n      return {\n        types: exactTypes.concat(convertibleTypes),\n        restParam: restParam\n      };\n    }\n\n    /**\n     * Parse a signature with comma separated parameters,\n     * like \"number | boolean, ...string\"\n     * @param {string} signature\n     * @param {function} fn\n     * @param {ConversionDef[]} conversions\n     * @return {Signature | null} signature\n     */\n    function parseSignature (signature, fn, conversions) {\n      var params = [];\n\n      if (signature.trim() !== '') {\n        params = signature\n            .split(',')\n            .map(trim)\n            .map(function (param, index, array) {\n              var parsedParam = parseParam(param, conversions);\n\n              if (parsedParam.restParam && (index !== array.length - 1)) {\n                throw new SyntaxError('Unexpected rest parameter \"' + param + '\": ' +\n                    'only allowed for the last parameter');\n              }\n\n              return parsedParam;\n          });\n      }\n\n      if (params.some(isInvalidParam)) {\n        // invalid signature: at least one parameter has no types\n        // (they may have been filtered)\n        return null;\n      }\n\n      return {\n        params: params,\n        fn: fn\n      };\n    }\n\n    /**\n     * Test whether a set of params contains a restParam\n     * @param {Param[]} params\n     * @return {boolean} Returns true when the last parameter is a restParam\n     */\n    function hasRestParam(params) {\n      var param = last(params)\n      return param ? param.restParam : false;\n    }\n\n    /**\n     * Test whether a parameter contains conversions\n     * @param {Param} param\n     * @return {boolean} Returns true when at least one of the parameters\n     *                   contains a conversion.\n     */\n    function hasConversions(param) {\n      return param.types.some(function (type) {\n        return type.conversion != null;\n      });\n    }\n\n    /**\n     * Create a type test for a single parameter, which can have one or multiple\n     * types.\n     * @param {Param} param\n     * @return {function(x: *) : boolean} Returns a test function\n     */\n    function compileTest(param) {\n      if (!param || param.types.length === 0) {\n        // nothing to do\n        return ok;\n      }\n      else if (param.types.length === 1) {\n        return findTypeByName(param.types[0].name).test;\n      }\n      else if (param.types.length === 2) {\n        var test0 = findTypeByName(param.types[0].name).test;\n        var test1 = findTypeByName(param.types[1].name).test;\n        return function or(x) {\n          return test0(x) || test1(x);\n        }\n      }\n      else { // param.types.length > 2\n        var tests = param.types.map(function (type) {\n          return findTypeByName(type.name).test;\n        })\n        return function or(x) {\n          for (var i = 0; i < tests.length; i++) {\n            if (tests[i](x)) {\n              return true;\n            }\n          }\n          return false;\n        }\n      }\n    }\n\n    /**\n     * Create a test for all parameters of a signature\n     * @param {Param[]} params\n     * @return {function(args: Array<*>) : boolean}\n     */\n    function compileTests(params) {\n      var tests, test0, test1;\n\n      if (hasRestParam(params)) {\n        // variable arguments like '...number'\n        tests = initial(params).map(compileTest);\n        var varIndex = tests.length;\n        var lastTest = compileTest(last(params));\n        var testRestParam = function (args) {\n          for (var i = varIndex; i < args.length; i++) {\n            if (!lastTest(args[i])) {\n              return false;\n            }\n          }\n          return true;\n        }\n\n        return function testArgs(args) {\n          for (var i = 0; i < tests.length; i++) {\n            if (!tests[i](args[i])) {\n              return false;\n            }\n          }\n          return testRestParam(args) && (args.length >= varIndex + 1);\n        };\n      }\n      else {\n        // no variable arguments\n        if (params.length === 0) {\n          return function testArgs(args) {\n            return args.length === 0;\n          };\n        }\n        else if (params.length === 1) {\n          test0 = compileTest(params[0]);\n          return function testArgs(args) {\n            return test0(args[0]) && args.length === 1;\n          };\n        }\n        else if (params.length === 2) {\n          test0 = compileTest(params[0]);\n          test1 = compileTest(params[1]);\n          return function testArgs(args) {\n            return test0(args[0]) && test1(args[1]) && args.length === 2;\n          };\n        }\n        else { // arguments.length > 2\n          tests = params.map(compileTest);\n          return function testArgs(args) {\n            for (var i = 0; i < tests.length; i++) {\n              if (!tests[i](args[i])) {\n                return false;\n              }\n            }\n            return args.length === tests.length;\n          };\n        }\n      }\n    }\n\n    /**\n     * Find the parameter at a specific index of a signature.\n     * Handles rest parameters.\n     * @param {Signature} signature\n     * @param {number} index\n     * @return {Param | null} Returns the matching parameter when found,\n     *                        null otherwise.\n     */\n    function getParamAtIndex(signature, index) {\n      return index < signature.params.length\n          ? signature.params[index]\n          : hasRestParam(signature.params)\n              ? last(signature.params)\n              : null\n    }\n\n    /**\n     * Get all type names of a parameter\n     * @param {Signature} signature\n     * @param {number} index\n     * @param {boolean} excludeConversions\n     * @return {string[]} Returns an array with type names\n     */\n    function getExpectedTypeNames (signature, index, excludeConversions) {\n      var param = getParamAtIndex(signature, index);\n      var types = param\n          ? excludeConversions\n                  ? param.types.filter(isExactType)\n                  : param.types\n          : [];\n\n      return types.map(getTypeName);\n    }\n\n    /**\n     * Returns the name of a type\n     * @param {Type} type\n     * @return {string} Returns the type name\n     */\n    function getTypeName(type) {\n      return type.name;\n    }\n\n    /**\n     * Test whether a type is an exact type or conversion\n     * @param {Type} type\n     * @return {boolean} Returns true when\n     */\n    function isExactType(type) {\n      return type.conversion === null || type.conversion === undefined;\n    }\n\n    /**\n     * Helper function for creating error messages: create an array with\n     * all available types on a specific argument index.\n     * @param {Signature[]} signatures\n     * @param {number} index\n     * @return {string[]} Returns an array with available types\n     */\n    function mergeExpectedParams(signatures, index) {\n      var typeNames = uniq(flatMap(signatures, function (signature) {\n        return getExpectedTypeNames(signature, index, false);\n      }));\n\n      return (typeNames.indexOf('any') !== -1) ? ['any'] : typeNames;\n    }\n\n    /**\n     * Create\n     * @param {string} name             The name of the function\n     * @param {array.<*>} args          The actual arguments passed to the function\n     * @param {Signature[]} signatures  A list with available signatures\n     * @return {TypeError} Returns a type error with additional data\n     *                     attached to it in the property `data`\n     */\n    function createError(name, args, signatures) {\n      var err, expected;\n      var _name = name || 'unnamed';\n\n      // test for wrong type at some index\n      var matchingSignatures = signatures;\n      var index;\n      for (index = 0; index < args.length; index++) {\n        var nextMatchingDefs = matchingSignatures.filter(function (signature) {\n          var test = compileTest(getParamAtIndex(signature, index));\n          return (index < signature.params.length || hasRestParam(signature.params)) &&\n              test(args[index]);\n        });\n\n        if (nextMatchingDefs.length === 0) {\n          // no matching signatures anymore, throw error \"wrong type\"\n          expected = mergeExpectedParams(matchingSignatures, index);\n          if (expected.length > 0) {\n            var actualType = findTypeName(args[index]);\n\n            err = new TypeError('Unexpected type of argument in function ' + _name +\n                ' (expected: ' + expected.join(' or ') +\n                ', actual: ' + actualType + ', index: ' + index + ')');\n            err.data = {\n              category: 'wrongType',\n              fn: _name,\n              index: index,\n              actual: actualType,\n              expected: expected\n            }\n            return err;\n          }\n        }\n        else {\n          matchingSignatures = nextMatchingDefs;\n        }\n      }\n\n      // test for too few arguments\n      var lengths = matchingSignatures.map(function (signature) {\n        return hasRestParam(signature.params) ? Infinity : signature.params.length;\n      });\n      if (args.length < Math.min.apply(null, lengths)) {\n        expected = mergeExpectedParams(matchingSignatures, index);\n        err = new TypeError('Too few arguments in function ' + _name +\n            ' (expected: ' + expected.join(' or ') +\n            ', index: ' + args.length + ')');\n        err.data = {\n          category: 'tooFewArgs',\n          fn: _name,\n          index: args.length,\n          expected: expected\n        }\n        return err;\n      }\n\n      // test for too many arguments\n      var maxLength = Math.max.apply(null, lengths);\n      if (args.length > maxLength) {\n        err = new TypeError('Too many arguments in function ' + _name +\n            ' (expected: ' + maxLength + ', actual: ' + args.length + ')');\n        err.data = {\n          category: 'tooManyArgs',\n          fn: _name,\n          index: args.length,\n          expectedLength: maxLength\n        }\n        return err;\n      }\n\n      err = new TypeError('Arguments of type \"' + args.join(', ') +\n          '\" do not match any of the defined signatures of function ' + _name + '.');\n      err.data = {\n        category: 'mismatch',\n        actual: args.map(findTypeName)\n      }\n      return err;\n    }\n\n    /**\n     * Find the lowest index of all exact types of a parameter (no conversions)\n     * @param {Param} param\n     * @return {number} Returns the index of the lowest type in typed.types\n     */\n    function getLowestTypeIndex (param) {\n      var min = 999;\n\n      for (var i = 0; i < param.types.length; i++) {\n        if (isExactType(param.types[i])) {\n          min = Math.min(min, param.types[i].typeIndex);\n        }\n      }\n\n      return min;\n    }\n\n    /**\n     * Find the lowest index of the conversion of all types of the parameter\n     * having a conversion\n     * @param {Param} param\n     * @return {number} Returns the lowest index of the conversions of this type\n     */\n    function getLowestConversionIndex (param) {\n      var min = 999;\n\n      for (var i = 0; i < param.types.length; i++) {\n        if (!isExactType(param.types[i])) {\n          min = Math.min(min, param.types[i].conversionIndex);\n        }\n      }\n\n      return min;\n    }\n\n    /**\n     * Compare two params\n     * @param {Param} param1\n     * @param {Param} param2\n     * @return {number} returns a negative number when param1 must get a lower\n     *                  index than param2, a positive number when the opposite,\n     *                  or zero when both are equal\n     */\n    function compareParams (param1, param2) {\n      var c;\n\n      // compare having a rest parameter or not\n      c = param1.restParam - param2.restParam;\n      if (c !== 0) {\n        return c;\n      }\n\n      // compare having conversions or not\n      c = hasConversions(param1) - hasConversions(param2);\n      if (c !== 0) {\n        return c;\n      }\n\n      // compare the index of the types\n      c = getLowestTypeIndex(param1) - getLowestTypeIndex(param2);\n      if (c !== 0) {\n        return c;\n      }\n\n      // compare the index of any conversion\n      return getLowestConversionIndex(param1) - getLowestConversionIndex(param2);\n    }\n\n    /**\n     * Compare two signatures\n     * @param {Signature} signature1\n     * @param {Signature} signature2\n     * @return {number} returns a negative number when param1 must get a lower\n     *                  index than param2, a positive number when the opposite,\n     *                  or zero when both are equal\n     */\n    function compareSignatures (signature1, signature2) {\n      var len = Math.min(signature1.params.length, signature2.params.length);\n      var i;\n      var c;\n\n      // compare whether the params have conversions at all or not\n      c = signature1.params.some(hasConversions) - signature2.params.some(hasConversions)\n      if (c !== 0) {\n        return c;\n      }\n\n      // next compare whether the params have conversions one by one\n      for (i = 0; i < len; i++) {\n        c = hasConversions(signature1.params[i]) - hasConversions(signature2.params[i]);\n        if (c !== 0) {\n          return c;\n        }\n      }\n\n      // compare the types of the params one by one\n      for (i = 0; i < len; i++) {\n        c = compareParams(signature1.params[i], signature2.params[i]);\n        if (c !== 0) {\n          return c;\n        }\n      }\n\n      // compare the number of params\n      return signature1.params.length - signature2.params.length;\n    }\n\n    /**\n     * Get params containing all types that can be converted to the defined types.\n     *\n     * @param {ConversionDef[]} conversions\n     * @param {string[]} typeNames\n     * @return {ConversionDef[]} Returns the conversions that are available\n     *                        for every type (if any)\n     */\n    function filterConversions(conversions, typeNames) {\n      var matches = {};\n\n      conversions.forEach(function (conversion) {\n        if (typeNames.indexOf(conversion.from) === -1 &&\n            typeNames.indexOf(conversion.to) !== -1 &&\n            !matches[conversion.from]) {\n          matches[conversion.from] = conversion;\n        }\n      });\n\n      return Object.keys(matches).map(function (from) {\n        return matches[from];\n      });\n    }\n\n    /**\n     * Preprocess arguments before calling the original function:\n     * - if needed convert the parameters\n     * - in case of rest parameters, move the rest parameters into an Array\n     * @param {Param[]} params\n     * @param {function} fn\n     * @return {function} Returns a wrapped function\n     */\n    function compileArgsPreprocessing(params, fn) {\n      var fnConvert = fn;\n\n      // TODO: can we make this wrapper function smarter/simpler?\n\n      if (params.some(hasConversions)) {\n        var restParam = hasRestParam(params);\n        var compiledConversions = params.map(compileArgConversion)\n\n        fnConvert = function convertArgs() {\n          var args = [];\n          var last = restParam ? arguments.length - 1 : arguments.length;\n          for (var i = 0; i < last; i++) {\n            args[i] = compiledConversions[i](arguments[i]);\n          }\n          if (restParam) {\n            args[last] = arguments[last].map(compiledConversions[last]);\n          }\n\n          return fn.apply(null, args);\n        }\n      }\n\n      var fnPreprocess = fnConvert;\n      if (hasRestParam(params)) {\n        var offset = params.length - 1;\n\n        fnPreprocess = function preprocessRestParams () {\n          return fnConvert.apply(null,\n              slice(arguments, 0, offset).concat([slice(arguments, offset)]));\n        }\n      }\n\n      return fnPreprocess;\n    }\n\n    /**\n     * Compile conversion for a parameter to the right type\n     * @param {Param} param\n     * @return {function} Returns the wrapped function that will convert arguments\n     *\n     */\n    function compileArgConversion(param) {\n      var test0, test1, conversion0, conversion1;\n      var tests = [];\n      var conversions = [];\n\n      param.types.forEach(function (type) {\n        if (type.conversion) {\n          tests.push(findTypeByName(type.conversion.from).test);\n          conversions.push(type.conversion.convert);\n        }\n      });\n\n      // create optimized conversion functions depending on the number of conversions\n      switch (conversions.length) {\n        case 0:\n          return function convertArg(arg) {\n            return arg;\n          }\n\n        case 1:\n          test0 = tests[0]\n          conversion0 = conversions[0];\n          return function convertArg(arg) {\n            if (test0(arg)) {\n              return conversion0(arg)\n            }\n            return arg;\n          }\n\n        case 2:\n          test0 = tests[0]\n          test1 = tests[1]\n          conversion0 = conversions[0];\n          conversion1 = conversions[1];\n          return function convertArg(arg) {\n            if (test0(arg)) {\n              return conversion0(arg)\n            }\n            if (test1(arg)) {\n              return conversion1(arg)\n            }\n            return arg;\n          }\n\n        default:\n          return function convertArg(arg) {\n            for (var i = 0; i < conversions.length; i++) {\n              if (tests[i](arg)) {\n                return conversions[i](arg);\n              }\n            }\n            return arg;\n          }\n      }\n    }\n\n    /**\n     * Convert an array with signatures into a map with signatures,\n     * where signatures with union types are split into separate signatures\n     *\n     * Throws an error when there are conflicting types\n     *\n     * @param {Signature[]} signatures\n     * @return {Object.<string, function>}  Returns a map with signatures\n     *                                      as key and the original function\n     *                                      of this signature as value.\n     */\n    function createSignaturesMap(signatures) {\n      var signaturesMap = {};\n      signatures.forEach(function (signature) {\n        if (!signature.params.some(hasConversions)) {\n          splitParams(signature.params, true).forEach(function (params) {\n            signaturesMap[stringifyParams(params)] = signature.fn;\n          });\n        }\n      });\n\n      return signaturesMap;\n    }\n\n    /**\n     * Split params with union types in to separate params.\n     *\n     * For example:\n     *\n     *     splitParams([['Array', 'Object'], ['string', 'RegExp'])\n     *     // returns:\n     *     // [\n     *     //   ['Array', 'string'],\n     *     //   ['Array', 'RegExp'],\n     *     //   ['Object', 'string'],\n     *     //   ['Object', 'RegExp']\n     *     // ]\n     *\n     * @param {Param[]} params\n     * @param {boolean} ignoreConversionTypes\n     * @return {Param[]}\n     */\n    function splitParams(params, ignoreConversionTypes) {\n      function _splitParams(params, index, types) {\n        if (index < params.length) {\n          var param = params[index]\n          var filteredTypes = ignoreConversionTypes\n              ? param.types.filter(isExactType)\n              : param.types;\n          var typeGroups\n\n          if (param.restParam) {\n            // split the types of a rest parameter in two:\n            // one with only exact types, and one with exact types and conversions\n            var exactTypes = filteredTypes.filter(isExactType)\n            typeGroups = exactTypes.length < filteredTypes.length\n                ? [exactTypes, filteredTypes]\n                : [filteredTypes]\n\n          }\n          else {\n            // split all the types of a regular parameter into one type per group\n            typeGroups = filteredTypes.map(function (type) {\n              return [type]\n            })\n          }\n\n          // recurse over the groups with types\n          return flatMap(typeGroups, function (typeGroup) {\n            return _splitParams(params, index + 1, types.concat([typeGroup]));\n          });\n\n        }\n        else {\n          // we've reached the end of the parameters. Now build a new Param\n          var splittedParams = types.map(function (type, typeIndex) {\n            return {\n              types: type,\n              restParam: (typeIndex === params.length - 1) && hasRestParam(params)\n            }\n          });\n\n          return [splittedParams];\n        }\n      }\n\n      return _splitParams(params, 0, []);\n    }\n\n    /**\n     * Test whether two signatures have a conflicting signature\n     * @param {Signature} signature1\n     * @param {Signature} signature2\n     * @return {boolean} Returns true when the signatures conflict, false otherwise.\n     */\n    function hasConflictingParams(signature1, signature2) {\n      var ii = Math.max(signature1.params.length, signature2.params.length);\n\n      for (var i = 0; i < ii; i++) {\n        var typesNames1 = getExpectedTypeNames(signature1, i, true);\n        var typesNames2 = getExpectedTypeNames(signature2, i, true);\n\n        if (!hasOverlap(typesNames1, typesNames2)) {\n          return false;\n        }\n      }\n\n      var len1 = signature1.params.length;\n      var len2 = signature2.params.length;\n      var restParam1 = hasRestParam(signature1.params);\n      var restParam2 = hasRestParam(signature2.params);\n\n      return restParam1\n          ? restParam2 ? (len1 === len2) : (len2 >= len1)\n          : restParam2 ? (len1 >= len2)  : (len1 === len2)\n    }\n\n    /**\n     * Create a typed function\n     * @param {String} name               The name for the typed function\n     * @param {Object.<string, function>} signaturesMap\n     *                                    An object with one or\n     *                                    multiple signatures as key, and the\n     *                                    function corresponding to the\n     *                                    signature as value.\n     * @return {function}  Returns the created typed function.\n     */\n    function createTypedFunction(name, signaturesMap) {\n      if (Object.keys(signaturesMap).length === 0) {\n        throw new SyntaxError('No signatures provided');\n      }\n\n      // parse the signatures, and check for conflicts\n      var parsedSignatures = [];\n      Object.keys(signaturesMap)\n          .map(function (signature) {\n            return parseSignature(signature, signaturesMap[signature], typed.conversions);\n          })\n          .filter(notNull)\n          .forEach(function (parsedSignature) {\n            // check whether this parameter conflicts with already parsed signatures\n            var conflictingSignature = findInArray(parsedSignatures, function (s) {\n              return hasConflictingParams(s, parsedSignature)\n            });\n            if (conflictingSignature) {\n              throw new TypeError('Conflicting signatures \"' +\n                  stringifyParams(conflictingSignature.params) + '\" and \"' +\n                  stringifyParams(parsedSignature.params) + '\".');\n            }\n\n            parsedSignatures.push(parsedSignature);\n          });\n\n      // split and filter the types of the signatures, and then order them\n      var signatures = flatMap(parsedSignatures, function (parsedSignature) {\n        var params = parsedSignature ? splitParams(parsedSignature.params, false) : []\n\n        return params.map(function (params) {\n          return {\n            params: params,\n            fn: parsedSignature.fn\n          };\n        });\n      }).filter(notNull);\n\n      signatures.sort(compareSignatures);\n\n      // we create a highly optimized checks for the first couple of signatures with max 2 arguments\n      var ok0 = signatures[0] && signatures[0].params.length <= 2 && !hasRestParam(signatures[0].params);\n      var ok1 = signatures[1] && signatures[1].params.length <= 2 && !hasRestParam(signatures[1].params);\n      var ok2 = signatures[2] && signatures[2].params.length <= 2 && !hasRestParam(signatures[2].params);\n      var ok3 = signatures[3] && signatures[3].params.length <= 2 && !hasRestParam(signatures[3].params);\n      var ok4 = signatures[4] && signatures[4].params.length <= 2 && !hasRestParam(signatures[4].params);\n      var ok5 = signatures[5] && signatures[5].params.length <= 2 && !hasRestParam(signatures[5].params);\n      var allOk = ok0 && ok1 && ok2 && ok3 && ok4 && ok5;\n\n      // compile the tests\n      var tests = signatures.map(function (signature) {\n        return compileTests(signature.params);\n      });\n\n      var test00 = ok0 ? compileTest(signatures[0].params[0]) : notOk;\n      var test10 = ok1 ? compileTest(signatures[1].params[0]) : notOk;\n      var test20 = ok2 ? compileTest(signatures[2].params[0]) : notOk;\n      var test30 = ok3 ? compileTest(signatures[3].params[0]) : notOk;\n      var test40 = ok4 ? compileTest(signatures[4].params[0]) : notOk;\n      var test50 = ok5 ? compileTest(signatures[5].params[0]) : notOk;\n\n      var test01 = ok0 ? compileTest(signatures[0].params[1]) : notOk;\n      var test11 = ok1 ? compileTest(signatures[1].params[1]) : notOk;\n      var test21 = ok2 ? compileTest(signatures[2].params[1]) : notOk;\n      var test31 = ok3 ? compileTest(signatures[3].params[1]) : notOk;\n      var test41 = ok4 ? compileTest(signatures[4].params[1]) : notOk;\n      var test51 = ok5 ? compileTest(signatures[5].params[1]) : notOk;\n\n      // compile the functions\n      var fns = signatures.map(function(signature) {\n        return compileArgsPreprocessing(signature.params, signature.fn)\n      });\n\n      var fn0 = ok0 ? fns[0] : undef;\n      var fn1 = ok1 ? fns[1] : undef;\n      var fn2 = ok2 ? fns[2] : undef;\n      var fn3 = ok3 ? fns[3] : undef;\n      var fn4 = ok4 ? fns[4] : undef;\n      var fn5 = ok5 ? fns[5] : undef;\n\n      var len0 = ok0 ? signatures[0].params.length : -1;\n      var len1 = ok1 ? signatures[1].params.length : -1;\n      var len2 = ok2 ? signatures[2].params.length : -1;\n      var len3 = ok3 ? signatures[3].params.length : -1;\n      var len4 = ok4 ? signatures[4].params.length : -1;\n      var len5 = ok5 ? signatures[5].params.length : -1;\n\n      // simple and generic, but also slow\n      var iStart = allOk ? 6 : 0;\n      var iEnd = signatures.length;\n      var generic = function generic() {\n        'use strict';\n\n        for (var i = iStart; i < iEnd; i++) {\n          if (tests[i](arguments)) {\n            return fns[i].apply(null, arguments);\n          }\n        }\n\n        throw createError(name, arguments, signatures);\n      }\n\n      // create the typed function\n      // fast, specialized version. Falls back to the slower, generic one if needed\n      var fn = function fn(arg0, arg1) {\n        'use strict';\n\n        if (arguments.length === len0 && test00(arg0) && test01(arg1)) { return fn0.apply(null, arguments); }\n        if (arguments.length === len1 && test10(arg0) && test11(arg1)) { return fn1.apply(null, arguments); }\n        if (arguments.length === len2 && test20(arg0) && test21(arg1)) { return fn2.apply(null, arguments); }\n        if (arguments.length === len3 && test30(arg0) && test31(arg1)) { return fn3.apply(null, arguments); }\n        if (arguments.length === len4 && test40(arg0) && test41(arg1)) { return fn4.apply(null, arguments); }\n        if (arguments.length === len5 && test50(arg0) && test51(arg1)) { return fn5.apply(null, arguments); }\n\n        return generic.apply(null, arguments);\n      }\n\n      // attach name the typed function\n      try {\n        Object.defineProperty(fn, 'name', {value: name});\n      }\n      catch (err) {\n        // old browsers do not support Object.defineProperty and some don't support setting the name property\n        // the function name is not essential for the functioning, it's mostly useful for debugging,\n        // so it's fine to have unnamed functions.\n      }\n\n      // attach signatures to the function\n      fn.signatures = createSignaturesMap(signatures);\n\n      return fn;\n    }\n\n    /**\n     * Test whether a type should be NOT be ignored\n     * @param {string} typeName\n     * @return {boolean}\n     */\n    function notIgnore(typeName) {\n      return typed.ignore.indexOf(typeName) === -1;\n    }\n\n    /**\n     * trim a string\n     * @param {string} str\n     * @return {string}\n     */\n    function trim(str) {\n      return str.trim();\n    }\n\n    /**\n     * Test whether a string is not empty\n     * @param {string} str\n     * @return {boolean}\n     */\n    function notEmpty(str) {\n      return !!str;\n    }\n\n    /**\n     * test whether a value is not strict equal to null\n     * @param {*} value\n     * @return {boolean}\n     */\n    function notNull(value) {\n      return value !== null;\n    }\n\n    /**\n     * Test whether a parameter has no types defined\n     * @param {Param} param\n     * @return {boolean}\n     */\n    function isInvalidParam (param) {\n      return param.types.length === 0;\n    }\n\n    /**\n     * Return all but the last items of an array\n     * @param {Array} arr\n     * @return {Array}\n     */\n    function initial(arr) {\n      return arr.slice(0, arr.length - 1);\n    }\n\n    /**\n     * return the last item of an array\n     * @param {Array} arr\n     * @return {*}\n     */\n    function last(arr) {\n      return arr[arr.length - 1];\n    }\n\n    /**\n     * Slice an array or function Arguments\n     * @param {Array | Arguments | IArguments} arr\n     * @param {number} start\n     * @param {number} [end]\n     * @return {Array}\n     */\n    function slice(arr, start, end) {\n      return Array.prototype.slice.call(arr, start, end);\n    }\n\n    /**\n     * Test whether an array contains some item\n     * @param {Array} array\n     * @param {*} item\n     * @return {boolean} Returns true if array contains item, false if not.\n     */\n    function contains(array, item) {\n      return array.indexOf(item) !== -1;\n    }\n\n    /**\n     * Test whether two arrays have overlapping items\n     * @param {Array} array1\n     * @param {Array} array2\n     * @return {boolean} Returns true when at least one item exists in both arrays\n     */\n    function hasOverlap(array1, array2) {\n      for (var i = 0; i < array1.length; i++) {\n        if (contains(array2, array1[i])) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n\n    /**\n     * Return the first item from an array for which test(arr[i]) returns true\n     * @param {Array} arr\n     * @param {function} test\n     * @return {* | undefined} Returns the first matching item\n     *                         or undefined when there is no match\n     */\n    function findInArray(arr, test) {\n      for (var i = 0; i < arr.length; i++) {\n        if (test(arr[i])) {\n          return arr[i];\n        }\n      }\n      return undefined;\n    }\n\n    /**\n     * Filter unique items of an array with strings\n     * @param {string[]} arr\n     * @return {string[]}\n     */\n    function uniq(arr) {\n      var entries = {}\n      for (var i = 0; i < arr.length; i++) {\n        entries[arr[i]] = true;\n      }\n      return Object.keys(entries);\n    }\n\n    /**\n     * Flat map the result invoking a callback for every item in an array.\n     * https://gist.github.com/samgiles/762ee337dff48623e729\n     * @param {Array} arr\n     * @param {function} callback\n     * @return {Array}\n     */\n    function flatMap(arr, callback) {\n      return Array.prototype.concat.apply([], arr.map(callback));\n    }\n\n    /**\n     * Retrieve the function name from a set of typed functions,\n     * and check whether the name of all functions match (if given)\n     * @param {function[]} fns\n     */\n    function getName (fns) {\n      var name = '';\n\n      for (var i = 0; i < fns.length; i++) {\n        var fn = fns[i];\n\n        // check whether the names are the same when defined\n        if ((typeof fn.signatures === 'object' || typeof fn.signature === 'string') && fn.name !== '') {\n          if (name === '') {\n            name = fn.name;\n          }\n          else if (name !== fn.name) {\n            var err = new Error('Function names do not match (expected: ' + name + ', actual: ' + fn.name + ')');\n            err.data = {\n              actual: fn.name,\n              expected: name\n            };\n            throw err;\n          }\n        }\n      }\n\n      return name;\n    }\n\n    // extract and merge all signatures of a list with typed functions\n    function extractSignatures(fns) {\n      var err;\n      var signaturesMap = {};\n\n      function validateUnique(_signature, _fn) {\n        if (signaturesMap.hasOwnProperty(_signature) && _fn !== signaturesMap[_signature]) {\n          err = new Error('Signature \"' + _signature + '\" is defined twice');\n          err.data = {signature: _signature};\n          throw err;\n          // else: both signatures point to the same function, that's fine\n        }\n      }\n\n      for (var i = 0; i < fns.length; i++) {\n        var fn = fns[i];\n\n        // test whether this is a typed-function\n        if (typeof fn.signatures === 'object') {\n          // merge the signatures\n          for (var signature in fn.signatures) {\n            if (fn.signatures.hasOwnProperty(signature)) {\n              validateUnique(signature, fn.signatures[signature]);\n              signaturesMap[signature] = fn.signatures[signature];\n            }\n          }\n        }\n        else if (typeof fn.signature === 'string') {\n          validateUnique(fn.signature, fn);\n          signaturesMap[fn.signature] = fn;\n        }\n        else {\n          err = new TypeError('Function is no typed-function (index: ' + i + ')');\n          err.data = {index: i};\n          throw err;\n        }\n      }\n\n      return signaturesMap;\n    }\n\n    typed = createTypedFunction('typed', {\n      'string, Object': createTypedFunction,\n      'Object': function (signaturesMap) {\n        // find existing name\n        var fns = [];\n        for (var signature in signaturesMap) {\n          if (signaturesMap.hasOwnProperty(signature)) {\n            fns.push(signaturesMap[signature]);\n          }\n        }\n        var name = getName(fns);\n        return createTypedFunction(name, signaturesMap);\n      },\n      '...Function': function (fns) {\n        return createTypedFunction(getName(fns), extractSignatures(fns));\n      },\n      'string, ...Function': function (name, fns) {\n        return createTypedFunction(name, extractSignatures(fns));\n      }\n    });\n\n    typed.create = create;\n    typed.types = _types;\n    typed.conversions = _conversions;\n    typed.ignore = _ignore;\n    typed.convert = convert;\n    typed.find = find;\n\n    /**\n     * add a type\n     * @param {{name: string, test: function}} type\n     * @param {boolean} [beforeObjectTest=true]\n     *                          If true, the new test will be inserted before\n     *                          the test with name 'Object' (if any), since\n     *                          tests for Object match Array and classes too.\n     */\n    typed.addType = function (type, beforeObjectTest) {\n      if (!type || typeof type.name !== 'string' || typeof type.test !== 'function') {\n        throw new TypeError('Object with properties {name: string, test: function} expected');\n      }\n\n      if (beforeObjectTest !== false) {\n        for (var i = 0; i < typed.types.length; i++) {\n          if (typed.types[i].name === 'Object') {\n            typed.types.splice(i, 0, type);\n            return\n          }\n        }\n      }\n\n      typed.types.push(type);\n    };\n\n    // add a conversion\n    typed.addConversion = function (conversion) {\n      if (!conversion\n          || typeof conversion.from !== 'string'\n          || typeof conversion.to !== 'string'\n          || typeof conversion.convert !== 'function') {\n        throw new TypeError('Object with properties {from: string, to: string, convert: function} expected');\n      }\n\n      typed.conversions.push(conversion);\n    };\n\n    return typed;\n  }\n\n  return create();\n}));"
    },
    {
      "id": 42,
      "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/core/typed.js",
      "name": "../node_modules/mathjs/lib/core/typed.js",
      "index": 16,
      "index2": 12,
      "size": 11339,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "issuer": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/core/core.js",
      "issuerId": 44,
      "issuerName": "../node_modules/mathjs/lib/core/core.js",
      "issuerPath": [
        {
          "id": 49,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
          "name": "./main.ts",
          "profile": {
            "factory": 58,
            "building": 1843
          }
        },
        {
          "id": 18,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DisplayService.ts",
          "name": "./services/DisplayService.ts",
          "profile": {
            "factory": 83,
            "building": 1193,
            "dependencies": 637
          }
        },
        {
          "id": 8,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DrinkDisplayService.ts",
          "name": "./services/DrinkDisplayService.ts",
          "profile": {
            "factory": 735,
            "building": 523,
            "dependencies": 1
          }
        },
        {
          "id": 46,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/MathService.ts",
          "name": "./services/MathService.ts",
          "profile": {
            "factory": 394,
            "building": 17
          }
        },
        {
          "id": 45,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/core.js",
          "name": "../node_modules/mathjs/core.js",
          "profile": {
            "factory": 54,
            "building": 107
          }
        },
        {
          "id": 44,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/core/core.js",
          "name": "../node_modules/mathjs/lib/core/core.js",
          "profile": {
            "factory": 111,
            "building": 7
          }
        }
      ],
      "profile": {
        "factory": 15,
        "building": 26,
        "dependencies": 19
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 44,
          "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/core/core.js",
          "module": "../node_modules/mathjs/lib/core/core.js",
          "moduleName": "../node_modules/mathjs/lib/core/core.js",
          "type": "cjs require",
          "userRequest": "./typed",
          "loc": "7:19-37"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 6,
      "source": "'use strict';\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar typedFunction = require('typed-function');\n\nvar digits = require('./../utils/number').digits;\n\nvar isBigNumber = require('./../utils/bignumber/isBigNumber');\n\nvar isMatrix = require('./../utils/collection/isMatrix'); // returns a new instance of typed-function\n\n\nvar _createTyped = function createTyped() {\n  // initially, return the original instance of typed-function\n  // consecutively, return a new instance from typed.create.\n  _createTyped = typedFunction.create;\n  return typedFunction;\n};\n/**\n * Factory function for creating a new typed instance\n * @param {Object} type   Object with data types like Complex and BigNumber\n * @returns {Function}\n */\n\n\nexports.create = function create(type) {\n  // TODO: typed-function must be able to silently ignore signatures with unknown data types\n  // type checks for all known types\n  //\n  // note that:\n  //\n  // - check by duck-typing on a property like `isUnit`, instead of checking instanceof.\n  //   instanceof cannot be used because that would not allow to pass data from\n  //   one instance of math.js to another since each has it's own instance of Unit.\n  // - check the `isUnit` property via the constructor, so there will be no\n  //   matches for \"fake\" instances like plain objects with a property `isUnit`.\n  //   That is important for security reasons.\n  // - It must not be possible to override the type checks used internally,\n  //   for security reasons, so these functions are not exposed in the expression\n  //   parser.\n  type.isNumber = function (x) {\n    return typeof x === 'number';\n  };\n\n  type.isComplex = function (x) {\n    return type.Complex && x instanceof type.Complex || false;\n  };\n\n  type.isBigNumber = isBigNumber;\n\n  type.isFraction = function (x) {\n    return type.Fraction && x instanceof type.Fraction || false;\n  };\n\n  type.isUnit = function (x) {\n    return x && x.constructor.prototype.isUnit || false;\n  };\n\n  type.isString = function (x) {\n    return typeof x === 'string';\n  };\n\n  type.isArray = Array.isArray;\n  type.isMatrix = isMatrix;\n\n  type.isDenseMatrix = function (x) {\n    return x && x.isDenseMatrix && x.constructor.prototype.isMatrix || false;\n  };\n\n  type.isSparseMatrix = function (x) {\n    return x && x.isSparseMatrix && x.constructor.prototype.isMatrix || false;\n  };\n\n  type.isRange = function (x) {\n    return x && x.constructor.prototype.isRange || false;\n  };\n\n  type.isIndex = function (x) {\n    return x && x.constructor.prototype.isIndex || false;\n  };\n\n  type.isBoolean = function (x) {\n    return typeof x === 'boolean';\n  };\n\n  type.isResultSet = function (x) {\n    return x && x.constructor.prototype.isResultSet || false;\n  };\n\n  type.isHelp = function (x) {\n    return x && x.constructor.prototype.isHelp || false;\n  };\n\n  type.isFunction = function (x) {\n    return typeof x === 'function';\n  };\n\n  type.isDate = function (x) {\n    return x instanceof Date;\n  };\n\n  type.isRegExp = function (x) {\n    return x instanceof RegExp;\n  };\n\n  type.isObject = function (x) {\n    return _typeof(x) === 'object' && x.constructor === Object && !type.isComplex(x) && !type.isFraction(x);\n  };\n\n  type.isNull = function (x) {\n    return x === null;\n  };\n\n  type.isUndefined = function (x) {\n    return x === undefined;\n  };\n\n  type.isAccessorNode = function (x) {\n    return x && x.isAccessorNode && x.constructor.prototype.isNode || false;\n  };\n\n  type.isArrayNode = function (x) {\n    return x && x.isArrayNode && x.constructor.prototype.isNode || false;\n  };\n\n  type.isAssignmentNode = function (x) {\n    return x && x.isAssignmentNode && x.constructor.prototype.isNode || false;\n  };\n\n  type.isBlockNode = function (x) {\n    return x && x.isBlockNode && x.constructor.prototype.isNode || false;\n  };\n\n  type.isConditionalNode = function (x) {\n    return x && x.isConditionalNode && x.constructor.prototype.isNode || false;\n  };\n\n  type.isConstantNode = function (x) {\n    return x && x.isConstantNode && x.constructor.prototype.isNode || false;\n  };\n\n  type.isFunctionAssignmentNode = function (x) {\n    return x && x.isFunctionAssignmentNode && x.constructor.prototype.isNode || false;\n  };\n\n  type.isFunctionNode = function (x) {\n    return x && x.isFunctionNode && x.constructor.prototype.isNode || false;\n  };\n\n  type.isIndexNode = function (x) {\n    return x && x.isIndexNode && x.constructor.prototype.isNode || false;\n  };\n\n  type.isNode = function (x) {\n    return x && x.isNode && x.constructor.prototype.isNode || false;\n  };\n\n  type.isObjectNode = function (x) {\n    return x && x.isObjectNode && x.constructor.prototype.isNode || false;\n  };\n\n  type.isOperatorNode = function (x) {\n    return x && x.isOperatorNode && x.constructor.prototype.isNode || false;\n  };\n\n  type.isParenthesisNode = function (x) {\n    return x && x.isParenthesisNode && x.constructor.prototype.isNode || false;\n  };\n\n  type.isRangeNode = function (x) {\n    return x && x.isRangeNode && x.constructor.prototype.isNode || false;\n  };\n\n  type.isSymbolNode = function (x) {\n    return x && x.isSymbolNode && x.constructor.prototype.isNode || false;\n  };\n\n  type.isChain = function (x) {\n    return x && x.constructor.prototype.isChain || false;\n  }; // get a new instance of typed-function\n\n\n  var typed = _createTyped(); // define all types. The order of the types determines in which order function\n  // arguments are type-checked (so for performance it's important to put the\n  // most used types first).\n\n\n  typed.types = [{\n    name: 'number',\n    test: type.isNumber\n  }, {\n    name: 'Complex',\n    test: type.isComplex\n  }, {\n    name: 'BigNumber',\n    test: type.isBigNumber\n  }, {\n    name: 'Fraction',\n    test: type.isFraction\n  }, {\n    name: 'Unit',\n    test: type.isUnit\n  }, {\n    name: 'string',\n    test: type.isString\n  }, {\n    name: 'Array',\n    test: type.isArray\n  }, {\n    name: 'Matrix',\n    test: type.isMatrix\n  }, {\n    name: 'DenseMatrix',\n    test: type.isDenseMatrix\n  }, {\n    name: 'SparseMatrix',\n    test: type.isSparseMatrix\n  }, {\n    name: 'Range',\n    test: type.isRange\n  }, {\n    name: 'Index',\n    test: type.isIndex\n  }, {\n    name: 'boolean',\n    test: type.isBoolean\n  }, {\n    name: 'ResultSet',\n    test: type.isResultSet\n  }, {\n    name: 'Help',\n    test: type.isHelp\n  }, {\n    name: 'function',\n    test: type.isFunction\n  }, {\n    name: 'Date',\n    test: type.isDate\n  }, {\n    name: 'RegExp',\n    test: type.isRegExp\n  }, {\n    name: 'null',\n    test: type.isNull\n  }, {\n    name: 'undefined',\n    test: type.isUndefined\n  }, {\n    name: 'OperatorNode',\n    test: type.isOperatorNode\n  }, {\n    name: 'ConstantNode',\n    test: type.isConstantNode\n  }, {\n    name: 'SymbolNode',\n    test: type.isSymbolNode\n  }, {\n    name: 'ParenthesisNode',\n    test: type.isParenthesisNode\n  }, {\n    name: 'FunctionNode',\n    test: type.isFunctionNode\n  }, {\n    name: 'FunctionAssignmentNode',\n    test: type.isFunctionAssignmentNode\n  }, {\n    name: 'ArrayNode',\n    test: type.isArrayNode\n  }, {\n    name: 'AssignmentNode',\n    test: type.isAssignmentNode\n  }, {\n    name: 'BlockNode',\n    test: type.isBlockNode\n  }, {\n    name: 'ConditionalNode',\n    test: type.isConditionalNode\n  }, {\n    name: 'IndexNode',\n    test: type.isIndexNode\n  }, {\n    name: 'RangeNode',\n    test: type.isRangeNode\n  }, {\n    name: 'Node',\n    test: type.isNode\n  }, {\n    name: 'Object',\n    test: type.isObject // order 'Object' last, it matches on other classes too\n\n  }]; // TODO: add conversion from BigNumber to number?\n\n  typed.conversions = [{\n    from: 'number',\n    to: 'BigNumber',\n    convert: function convert(x) {\n      // note: conversion from number to BigNumber can fail if x has >15 digits\n      if (digits(x) > 15) {\n        throw new TypeError('Cannot implicitly convert a number with >15 significant digits to BigNumber ' + '(value: ' + x + '). ' + 'Use function bignumber(x) to convert to BigNumber.');\n      }\n\n      return new type.BigNumber(x);\n    }\n  }, {\n    from: 'number',\n    to: 'Complex',\n    convert: function convert(x) {\n      return new type.Complex(x, 0);\n    }\n  }, {\n    from: 'number',\n    to: 'string',\n    convert: function convert(x) {\n      return x + '';\n    }\n  }, {\n    from: 'BigNumber',\n    to: 'Complex',\n    convert: function convert(x) {\n      return new type.Complex(x.toNumber(), 0);\n    }\n  }, {\n    from: 'Fraction',\n    to: 'BigNumber',\n    convert: function convert(x) {\n      throw new TypeError('Cannot implicitly convert a Fraction to BigNumber or vice versa. ' + 'Use function bignumber(x) to convert to BigNumber or fraction(x) to convert to Fraction.');\n    }\n  }, {\n    from: 'Fraction',\n    to: 'Complex',\n    convert: function convert(x) {\n      return new type.Complex(x.valueOf(), 0);\n    }\n  }, {\n    from: 'number',\n    to: 'Fraction',\n    convert: function convert(x) {\n      var f = new type.Fraction(x);\n\n      if (f.valueOf() !== x) {\n        throw new TypeError('Cannot implicitly convert a number to a Fraction when there will be a loss of precision ' + '(value: ' + x + '). ' + 'Use function fraction(x) to convert to Fraction.');\n      }\n\n      return new type.Fraction(x);\n    }\n  }, {\n    // FIXME: add conversion from Fraction to number, for example for `sqrt(fraction(1,3))`\n    //  from: 'Fraction',\n    //  to: 'number',\n    //  convert: function (x) {\n    //    return x.valueOf()\n    //  }\n    // }, {\n    from: 'string',\n    to: 'number',\n    convert: function convert(x) {\n      var n = Number(x);\n\n      if (isNaN(n)) {\n        throw new Error('Cannot convert \"' + x + '\" to a number');\n      }\n\n      return n;\n    }\n  }, {\n    from: 'string',\n    to: 'BigNumber',\n    convert: function convert(x) {\n      try {\n        return new type.BigNumber(x);\n      } catch (err) {\n        throw new Error('Cannot convert \"' + x + '\" to BigNumber');\n      }\n    }\n  }, {\n    from: 'string',\n    to: 'Fraction',\n    convert: function convert(x) {\n      try {\n        return new type.Fraction(x);\n      } catch (err) {\n        throw new Error('Cannot convert \"' + x + '\" to Fraction');\n      }\n    }\n  }, {\n    from: 'string',\n    to: 'Complex',\n    convert: function convert(x) {\n      try {\n        return new type.Complex(x);\n      } catch (err) {\n        throw new Error('Cannot convert \"' + x + '\" to Complex');\n      }\n    }\n  }, {\n    from: 'boolean',\n    to: 'number',\n    convert: function convert(x) {\n      return +x;\n    }\n  }, {\n    from: 'boolean',\n    to: 'BigNumber',\n    convert: function convert(x) {\n      return new type.BigNumber(+x);\n    }\n  }, {\n    from: 'boolean',\n    to: 'Fraction',\n    convert: function convert(x) {\n      return new type.Fraction(+x);\n    }\n  }, {\n    from: 'boolean',\n    to: 'string',\n    convert: function convert(x) {\n      return +x;\n    }\n  }, {\n    from: 'Array',\n    to: 'Matrix',\n    convert: function convert(array) {\n      return new type.DenseMatrix(array);\n    }\n  }, {\n    from: 'Matrix',\n    to: 'Array',\n    convert: function convert(matrix) {\n      return matrix.valueOf();\n    }\n  }];\n  return typed;\n};"
    },
    {
      "id": 43,
      "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/utils/polyfills.js",
      "name": "../node_modules/mathjs/lib/utils/polyfills.js",
      "index": 13,
      "index2": 6,
      "size": 646,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "issuer": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/core/core.js",
      "issuerId": 44,
      "issuerName": "../node_modules/mathjs/lib/core/core.js",
      "issuerPath": [
        {
          "id": 49,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
          "name": "./main.ts",
          "profile": {
            "factory": 58,
            "building": 1843
          }
        },
        {
          "id": 18,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DisplayService.ts",
          "name": "./services/DisplayService.ts",
          "profile": {
            "factory": 83,
            "building": 1193,
            "dependencies": 637
          }
        },
        {
          "id": 8,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DrinkDisplayService.ts",
          "name": "./services/DrinkDisplayService.ts",
          "profile": {
            "factory": 735,
            "building": 523,
            "dependencies": 1
          }
        },
        {
          "id": 46,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/MathService.ts",
          "name": "./services/MathService.ts",
          "profile": {
            "factory": 394,
            "building": 17
          }
        },
        {
          "id": 45,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/core.js",
          "name": "../node_modules/mathjs/core.js",
          "profile": {
            "factory": 54,
            "building": 107
          }
        },
        {
          "id": 44,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/core/core.js",
          "name": "../node_modules/mathjs/lib/core/core.js",
          "profile": {
            "factory": 111,
            "building": 7
          }
        }
      ],
      "profile": {
        "factory": 15,
        "building": 26,
        "dependencies": 19
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 44,
          "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/core/core.js",
          "module": "../node_modules/mathjs/lib/core/core.js",
          "moduleName": "../node_modules/mathjs/lib/core/core.js",
          "type": "cjs require",
          "userRequest": "./../utils/polyfills",
          "loc": "3:0-31"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 6,
      "source": "\"use strict\";\n\n// TODO: remove these polyfills as soon as we have a build process that transpiles the code to ES5\n// Polyfill for IE 11 (Number.isFinite is used in `complex.js`)\n// source: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isFinite\nNumber.isFinite = Number.isFinite || function (value) {\n  return typeof value === 'number' && isFinite(value);\n}; // Polyfill for IE 11\n// source: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isNaN\n\n\nNumber.isNaN = Number.isNaN || function (value) {\n  return value !== value; // eslint-disable-line no-self-compare\n};"
    },
    {
      "id": 44,
      "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/lib/core/core.js",
      "name": "../node_modules/mathjs/lib/core/core.js",
      "index": 12,
      "index2": 18,
      "size": 4851,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "issuer": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/core.js",
      "issuerId": 45,
      "issuerName": "../node_modules/mathjs/core.js",
      "issuerPath": [
        {
          "id": 49,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
          "name": "./main.ts",
          "profile": {
            "factory": 58,
            "building": 1843
          }
        },
        {
          "id": 18,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DisplayService.ts",
          "name": "./services/DisplayService.ts",
          "profile": {
            "factory": 83,
            "building": 1193,
            "dependencies": 637
          }
        },
        {
          "id": 8,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DrinkDisplayService.ts",
          "name": "./services/DrinkDisplayService.ts",
          "profile": {
            "factory": 735,
            "building": 523,
            "dependencies": 1
          }
        },
        {
          "id": 46,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/MathService.ts",
          "name": "./services/MathService.ts",
          "profile": {
            "factory": 394,
            "building": 17
          }
        },
        {
          "id": 45,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/core.js",
          "name": "../node_modules/mathjs/core.js",
          "profile": {
            "factory": 54,
            "building": 107
          }
        }
      ],
      "profile": {
        "factory": 111,
        "building": 7
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 45,
          "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/core.js",
          "module": "../node_modules/mathjs/core.js",
          "moduleName": "../node_modules/mathjs/core.js",
          "type": "cjs require",
          "userRequest": "./lib/core/core",
          "loc": "1:17-43"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 5,
      "source": "'use strict';\n\nrequire('./../utils/polyfills');\n\nvar isFactory = require('./../utils/object').isFactory;\n\nvar typedFactory = require('./typed');\n\nvar emitter = require('./../utils/emitter');\n\nvar importFactory = require('./function/import');\n\nvar configFactory = require('./function/config');\n/**\n * Math.js core. Creates a new, empty math.js instance\n * @param {Object} [options] Available options:\n *                            {number} epsilon\n *                              Minimum relative difference between two\n *                              compared values, used by all comparison functions.\n *                            {string} matrix\n *                              A string 'Matrix' (default) or 'Array'.\n *                            {string} number\n *                              A string 'number' (default), 'BigNumber', or 'Fraction'\n *                            {number} precision\n *                              The number of significant digits for BigNumbers.\n *                              Not applicable for Numbers.\n *                            {boolean} predictable\n *                              Predictable output type of functions. When true,\n *                              output type depends only on the input types. When\n *                              false (default), output type can vary depending\n *                              on input values. For example `math.sqrt(-4)`\n *                              returns `complex('2i')` when predictable is false, and\n *                              returns `NaN` when true.\n *                            {string} randomSeed\n *                              Random seed for seeded pseudo random number generator.\n *                              Set to null to randomly seed.\n * @returns {Object} Returns a bare-bone math.js instance containing\n *                   functions:\n *                   - `import` to add new functions\n *                   - `config` to change configuration\n *                   - `on`, `off`, `once`, `emit` for events\n */\n\n\nexports.create = function create(options) {\n  // simple test for ES5 support\n  if (typeof Object.create !== 'function') {\n    throw new Error('ES5 not supported by this JavaScript engine. ' + 'Please load the es5-shim and es5-sham library for compatibility.');\n  } // cached factories and instances\n\n\n  var factories = [];\n  var instances = []; // create a namespace for the mathjs instance, and attach emitter functions\n\n  var math = emitter.mixin({});\n  math.type = {};\n  math.expression = {\n    transform: {},\n    mathWithTransform: {} // create a new typed instance\n\n  };\n  math.typed = typedFactory.create(math.type); // create configuration options. These are private\n\n  var _config = {\n    // minimum relative difference between two compared values,\n    // used by all comparison functions\n    epsilon: 1e-12,\n    // type of default matrix output. Choose 'matrix' (default) or 'array'\n    matrix: 'Matrix',\n    // type of default number output. Choose 'number' (default) 'BigNumber', or 'Fraction\n    number: 'number',\n    // number of significant digits in BigNumbers\n    precision: 64,\n    // predictable output type of functions. When true, output type depends only\n    // on the input types. When false (default), output type can vary depending\n    // on input values. For example `math.sqrt(-4)` returns `complex('2i')` when\n    // predictable is false, and returns `NaN` when true.\n    predictable: false,\n    // random seed for seeded pseudo random number generation\n    // null = randomly seed\n    randomSeed: null\n    /**\n     * Load a function or data type from a factory.\n     * If the function or data type already exists, the existing instance is\n     * returned.\n     * @param {{type: string, name: string, factory: Function}} factory\n     * @returns {*}\n     */\n\n  };\n\n  function load(factory) {\n    if (!isFactory(factory)) {\n      throw new Error('Factory object with properties `type`, `name`, and `factory` expected');\n    }\n\n    var index = factories.indexOf(factory);\n    var instance;\n\n    if (index === -1) {\n      // doesn't yet exist\n      if (factory.math === true) {\n        // pass with math namespace\n        instance = factory.factory(math.type, _config, load, math.typed, math);\n      } else {\n        instance = factory.factory(math.type, _config, load, math.typed);\n      } // append to the cache\n\n\n      factories.push(factory);\n      instances.push(instance);\n    } else {\n      // already existing function, return the cached instance\n      instance = instances[index];\n    }\n\n    return instance;\n  } // load the import and config functions\n\n\n  math['import'] = load(importFactory);\n  math['config'] = load(configFactory);\n  math.expression.mathWithTransform['config'] = math['config']; // apply options\n\n  if (options) {\n    math.config(options);\n  }\n\n  return math;\n};"
    },
    {
      "id": 45,
      "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/source-map-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/mathjs/core.js",
      "name": "../node_modules/mathjs/core.js",
      "index": 11,
      "index2": 19,
      "size": 44,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "issuer": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/MathService.ts",
      "issuerId": 46,
      "issuerName": "./services/MathService.ts",
      "issuerPath": [
        {
          "id": 49,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
          "name": "./main.ts",
          "profile": {
            "factory": 58,
            "building": 1843
          }
        },
        {
          "id": 18,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DisplayService.ts",
          "name": "./services/DisplayService.ts",
          "profile": {
            "factory": 83,
            "building": 1193,
            "dependencies": 637
          }
        },
        {
          "id": 8,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DrinkDisplayService.ts",
          "name": "./services/DrinkDisplayService.ts",
          "profile": {
            "factory": 735,
            "building": 523,
            "dependencies": 1
          }
        },
        {
          "id": 46,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/MathService.ts",
          "name": "./services/MathService.ts",
          "profile": {
            "factory": 394,
            "building": 17
          }
        }
      ],
      "profile": {
        "factory": 54,
        "building": 107
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 46,
          "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/MathService.ts",
          "module": "./services/MathService.ts",
          "moduleName": "./services/MathService.ts",
          "type": "cjs require",
          "userRequest": "mathjs/core",
          "loc": "3:13-35"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 4,
      "source": "module.exports = require('./lib/core/core')\n"
    },
    {
      "id": 46,
      "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/MathService.ts",
      "name": "./services/MathService.ts",
      "index": 10,
      "index2": 28,
      "size": 272,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "issuer": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DrinkDisplayService.ts",
      "issuerId": 8,
      "issuerName": "./services/DrinkDisplayService.ts",
      "issuerPath": [
        {
          "id": 49,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
          "name": "./main.ts",
          "profile": {
            "factory": 58,
            "building": 1843
          }
        },
        {
          "id": 18,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DisplayService.ts",
          "name": "./services/DisplayService.ts",
          "profile": {
            "factory": 83,
            "building": 1193,
            "dependencies": 637
          }
        },
        {
          "id": 8,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DrinkDisplayService.ts",
          "name": "./services/DrinkDisplayService.ts",
          "profile": {
            "factory": 735,
            "building": 523,
            "dependencies": 1
          }
        }
      ],
      "profile": {
        "factory": 394,
        "building": 17
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 8,
          "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DrinkDisplayService.ts",
          "module": "./services/DrinkDisplayService.ts",
          "moduleName": "./services/DrinkDisplayService.ts",
          "type": "cjs require",
          "userRequest": "./MathService",
          "loc": "3:22-46"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 3,
      "source": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst core = require(\"mathjs/core\");\nconst math = core.create();\nexports.math = math;\nmath.import(require('mathjs/lib/type/fraction'));\nmath.import(require('mathjs/lib/function/string/format'));\n"
    },
    {
      "id": 47,
      "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/models/Settings.ts",
      "name": "./models/Settings.ts",
      "index": 6,
      "index2": 4,
      "size": 438,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "issuer": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DisplayService.ts",
      "issuerId": 18,
      "issuerName": "./services/DisplayService.ts",
      "issuerPath": [
        {
          "id": 49,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
          "name": "./main.ts",
          "profile": {
            "factory": 58,
            "building": 1843
          }
        },
        {
          "id": 18,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DisplayService.ts",
          "name": "./services/DisplayService.ts",
          "profile": {
            "factory": 83,
            "building": 1193,
            "dependencies": 637
          }
        }
      ],
      "profile": {
        "factory": 735,
        "building": 523,
        "dependencies": 1
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 18,
          "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/services/DisplayService.ts",
          "module": "./services/DisplayService.ts",
          "moduleName": "./services/DisplayService.ts",
          "type": "cjs require",
          "userRequest": "../models/Settings",
          "loc": "13:19-48"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 2,
      "source": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Settings = {\n    sidebar: {\n        expanded: true,\n    },\n    symbols: {\n        upsymbol: '▲',\n        downsymbol: '▼',\n    },\n    tree: {\n        DepthMult: 60,\n        CollapseDepth: 3,\n        FontStart: 24,\n        FontCollapse: 6,\n        ShowCheckBox: true,\n        ShowCollapse: true,\n        Highlight: [],\n    }\n};\nexports.Settings = Settings;\n"
    },
    {
      "id": 48,
      "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/extensions/string.extensions.ts",
      "name": "./extensions/string.extensions.ts",
      "index": 3,
      "index2": 2,
      "size": 418,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "issuer": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
      "issuerId": 49,
      "issuerName": "./main.ts",
      "issuerPath": [
        {
          "id": 49,
          "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
          "name": "./main.ts",
          "profile": {
            "factory": 58,
            "building": 1843
          }
        }
      ],
      "profile": {
        "factory": 83,
        "building": 1193,
        "dependencies": 637
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 49,
          "moduleIdentifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
          "module": "./main.ts",
          "moduleName": "./main.ts",
          "type": "cjs require",
          "userRequest": "./extensions/string.extensions",
          "loc": "13:0-41"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 1,
      "source": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nString.prototype.contains = function (x) {\n    return this.indexOf(x) > -1;\n};\nString.prototype.any = function (f) {\n    if (f) {\n        for (let i = 0; i < this.length; i++) {\n            if (f(this[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    else {\n        return this.length > 0;\n    }\n};\n"
    },
    {
      "id": 49,
      "identifier": "/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/awesome-typescript-loader/dist/entry.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/node_modules/tslint-loader/index.js!/mnt/c/Users/Djori/Documents/projects/nondari/nondari/src/main.ts",
      "name": "./main.ts",
      "index": 0,
      "index2": 49,
      "size": 6875,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "issuer": null,
      "issuerId": null,
      "issuerName": null,
      "issuerPath": null,
      "profile": {
        "factory": 58,
        "building": 1843
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": null,
          "moduleIdentifier": null,
          "module": null,
          "moduleName": null,
          "type": "single entry",
          "userRequest": "./main.ts",
          "loc": "main"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 0,
      "source": "\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nrequire(\"./extensions/array.extensions\");\nrequire(\"./extensions/object.extensions\");\nrequire(\"./extensions/string.extensions\");\nconst CategoryService_1 = require(\"./services/CategoryService\");\nconst DisplayService_1 = require(\"./services/DisplayService\");\nexports.toggleDrinkList = DisplayService_1.toggleDrinkList;\nexports.EliminatePantry = DisplayService_1.EliminatePantry;\nconst DrinkService_1 = require(\"./services/DrinkService\");\nconst GlassService_1 = require(\"./services/GlassService\");\nconst Globals_1 = require(\"./services/Globals\");\nconst IngredientService_1 = require(\"./services/IngredientService\");\nconst NavigationService_1 = require(\"./services/NavigationService\");\nconst SearchObject_1 = require(\"./models/SearchObject\");\nconst SelectedDrinkObject_1 = require(\"./models/SelectedDrinkObject\");\nconst DownloadService_1 = require(\"./services/DownloadService\");\nconst StorageService_1 = require(\"./services/StorageService\");\nconst BuilderService_1 = require(\"./services/BuilderService\");\nexports.setCategoryType = BuilderService_1.setCategoryType;\nexports.setDrinkName = BuilderService_1.setDrinkName;\nexports.setGlassType = BuilderService_1.setGlassType;\nexports.addIngredient = BuilderService_1.addIngredient;\nexports.CreateDrink = BuilderService_1.CreateDrink;\nexports.setInstructions = BuilderService_1.setInstructions;\nexports.setPrelude = BuilderService_1.setPrelude;\n// -- Global Variables --\\\\\nconst NavObj = {\n    currentPage: 'drink',\n    q: new URLSearchParams(''),\n};\nfunction requireX(an, f) {\n    if (an === 0 || an === 1) {\n        const b = an === 1;\n        f(b);\n    }\n    else {\n        console.error('Error converting value to number, got ' + an);\n    }\n}\nfunction considerSubstitutions(val) {\n    const an = parseInt(val);\n    requireX(an, (b) => { SearchObject_1.SearchObject.ConsiderSubstitutions = b; });\n}\nexports.considerSubstitutions = considerSubstitutions;\nfunction requireGarnish(val) {\n    const an = parseInt(val);\n    requireX(an, (b) => { SearchObject_1.SearchObject.RequireGarnish = b; });\n}\nexports.requireGarnish = requireGarnish;\nfunction requireCube(val) {\n    const an = parseInt(val);\n    requireX(an, (b) => { SearchObject_1.SearchObject.RequireCube = b; });\n}\nexports.requireCube = requireCube;\nfunction requireRinse(val) {\n    const an = parseInt(val);\n    requireX(an, (b) => { SearchObject_1.SearchObject.RequireRinse = b; });\n}\nexports.requireRinse = requireRinse;\nfunction requireSplash(val) {\n    const an = parseInt(val);\n    requireX(an, (b) => { SearchObject_1.SearchObject.RequireSplash = b; });\n}\nexports.requireSplash = requireSplash;\nfunction requireSpray(val) {\n    const an = parseInt(val);\n    requireX(an, (b) => { SearchObject_1.SearchObject.RequireSpray = b; });\n}\nexports.requireSpray = requireSpray;\nfunction requireBitters(val) {\n    const an = parseInt(val);\n    requireX(an, (b) => { SearchObject_1.SearchObject.RequireBitters = b; });\n}\nexports.requireBitters = requireBitters;\nfunction requirePinch(val) {\n    const an = parseInt(val);\n    requireX(an, (b) => { SearchObject_1.SearchObject.RequirePinch = b; });\n}\nexports.requirePinch = requirePinch;\nfunction requireFloat(val) {\n    const an = parseInt(val);\n    requireX(an, (b) => { SearchObject_1.SearchObject.RequireFloat = b; });\n}\nexports.requireFloat = requireFloat;\nfunction calculateDrinks() {\n    const resobj = DrinkService_1.calculateDrinks(SearchObject_1.SearchObject.Inventory, Globals_1.Globals.Drinks, Globals_1.Globals.IngredientFlat);\n    DisplayService_1.showYourDrinks(resobj);\n    IngredientService_1.GetRecommendedIngredients(resobj);\n}\nexports.calculateDrinks = calculateDrinks;\nfunction RestorePantryItems() {\n    const iarr = StorageService_1.StorageGetPantryItems();\n    // SearchObject._InventoryIds = iarr.map(x => x.id);\n    iarr.forEach((x) => {\n        SearchObject_1.SearchObject._InventoryIds.push(x.id);\n        SearchObject_1.SearchObject.Inventory.push(x);\n    });\n}\nfunction main(json) {\n    return __awaiter(this, void 0, void 0, function* () {\n        /* Get the basic data structures */\n        // Populating Ingredient Tree\n        const ingFetch = IngredientService_1.constructIngredients(json.ingredientTree);\n        ingFetch[0].forEach(x => Globals_1.Globals.ingredients.push(x));\n        Globals_1.Globals.IngredientFlat = ingFetch[1];\n        // Unique, Sorted Glasses\n        GlassService_1.constructGlasses(json.drinks).forEach(x => Globals_1.Globals.Glasses.push(x));\n        // Unique, Sorted Categories\n        CategoryService_1.constructCategories(json.drinks).forEach(x => Globals_1.Globals.Categories.push(x));\n        // Unique, in-order Drinks\n        DrinkService_1.constructDrinks(json.drinks).forEach(x => Globals_1.Globals.Drinks.push(x));\n        // Unit Categories\n        json.unitTypes.forEach(x => Globals_1.Globals.UnitTypes.push(x));\n        /* Draw to the screen */\n        DisplayService_1.DrawSidebar(Globals_1.Globals.Categories, Globals_1.Globals.Drinks);\n        /* Restore user-saved globals */\n        RestorePantryItems();\n        const thispage = NavigationService_1.findPage().toLocaleLowerCase();\n        if (thispage === 'drinks') {\n            if (window.location.search.any()) {\n                NavigationService_1.decodeDrinkNav(window.location.search, Globals_1.Globals.Drinks, Globals_1.Globals.IngredientFlat, NavObj, SelectedDrinkObject_1.SelectedDrinkObject); // TEST\n            }\n        }\n        else if (thispage === NavigationService_1.PageTypes.Pantry) {\n            DisplayService_1.populateIngredientTree(Globals_1.Globals.ingredients, SearchObject_1.SearchObject);\n        }\n        else if (thispage === 'builder') {\n            yield BuilderService_1.BuilderDraw(Globals_1.Globals.Glasses[0], Globals_1.Globals.Categories[0].name);\n        }\n        else if (thispage === 'custom') {\n            yield DisplayService_1.DrawCustom();\n        }\n        window.onhashchange = NavigationService_1.locationHashChanged;\n        NavigationService_1.locationHashChanged();\n    });\n}\nfunction m2() {\n    return __awaiter(this, void 0, void 0, function* () {\n        const maindata = yield DownloadService_1.DownloadMainJson();\n        yield main(maindata);\n    });\n}\nm2();\n"
    }
  ],
  "filteredModules": 0,
  "children": []
}
